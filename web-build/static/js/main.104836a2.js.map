{"version":3,"file":"static/js/main.104836a2.js","mappings":"uLAiBMA,GAAMC,EAAAA,EAAAA,eAXW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,oDACbC,UAAW,gBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAOHC,GAAOC,EAAAA,EAAAA,SAAQV,GAGfW,GAAWC,EAAAA,EAAAA,aAAYZ,IAGba,EAAAA,EAAAA,YAAWb,GAKzB,sCAAwBc,MAAK,SAAAC,GAAkD,IAA/CC,EAAcD,EAAdC,eAAgBC,EAAuBF,EAAvBE,wBAC9CD,EAAeP,EAAMQ,GAClBC,OAAM,SAACC,GACNC,QAAQD,MAAM,kCAAmCA,EACnD,GACJ,IAIkB,eAAAE,GAAAC,EAAAA,EAAAA,UAAG,YACrB,IACE,IAAMC,GAAUC,EAAAA,EAAAA,KAAIb,EAAU,cACxBc,EAAAA,EAAAA,KAAIF,EAAS,CAAEG,WAAW,IAAIC,MAAOC,gBAC3CR,QAAQS,IAAI,iCACd,CAAE,MAAOV,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,CACF,IAAC,kBARmB,OAAAE,EAAAS,MAAA,KAAAC,UAAA,IAWpBC,G,IChCIhC,E,yFAIFA,GAHGiC,EAAAA,EAAAA,WAAUC,QAGPD,EAAAA,EAAAA,WAAU,IAFVhC,EAAAA,EAAAA,eAhBe,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,oDACbC,UAAW,gBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACP2B,cAAe,iBAaZ,IAAM1B,GAAOC,EAAAA,EAAAA,SAAQV,GACfW,GAAWC,EAAAA,EAAAA,aAAYZ,GAChCoC,EAAY,KAGM,qBAAXC,QAA0B,kBAAmBC,YACtDF,GAAYG,EAAAA,EAAAA,cAAavC,IAI3B,IAAIwC,EAA4B,KAC5BC,GAAkC,EAEtC,GAAsB,qBAAXJ,QAA0B,kBAAmBC,UACtD,IACED,OAAOK,iBAAiB,QAAMpB,EAAAA,EAAAA,UAAE,YAC9B,IAOE,GANAkB,QAAkCF,UAAUK,cAAcC,SAAS,4BAA6B,CAC9FC,MAAO,MAETzB,QAAQS,IAAI,iDAAwCW,EAA0BK,QAGzEJ,EAAiC,CACpCA,GAAkC,EAClC,IAAMK,QAAcC,IAChBD,GACF1B,QAAQS,IAAI,8CAAqCiB,EAErD,CACF,CAAE,MAAO3B,GACPC,QAAQD,MAAM,2DAAwCA,EACxD,CACF,IACF,CAAE,MAAOA,IACPC,QAAQD,MAAM,8BAA0BA,GAC1C,CAGK,IAAM4B,EAA6B,eAAA1B,GAAAC,EAAAA,EAAAA,UAAG,YAC3C,IACE,GAAsB,qBAAXe,UAA4B,iBAAkBA,QAEvD,OADAjB,QAAQS,IAAI,wDACL,KAGT,IAAMmB,QAAmBC,aAAaC,oBAGtC,GAFA9B,QAAQS,IAAI,wBAAyBmB,GAElB,YAAfA,EAA0B,CAC5B,IAAKZ,EAEH,OADAhB,QAAQD,MAAM,kDACP,KAGT,IAEOqB,IACHA,QAAkCF,UAAUK,cAAcQ,gBAAgB,8BAI5E,IAAMC,EAAe,CACnBC,SAxEQ,2FA4ENb,IACFY,EAAaZ,0BAA4BA,GAG3C,IAAMM,QAAcQ,EAAAA,EAAAA,UAASlB,EAAWgB,GAMxC,OALAhC,QAAQS,IAAI,8BAAqBiB,GAK1BA,CACT,CAAE,MAAOS,GAEP,OADAnC,QAAQD,MAAM,0BAAsBoC,GAC7B,IACT,CACF,CACA,OAAO,IACT,CAAE,MAAOpC,IAEP,OADAC,QAAQD,MAAM,6BAAyBA,IAChC,IACT,CACF,IAAC,kBAjDyC,OAAAE,EAAAS,MAAA,KAAAC,UAAA,K,SCsFpCyB,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnBC,QAAS,CACPF,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZC,QAAS,IAEXC,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,MAAO,UACPC,aAAc,IAEhBC,KAAM,CACJC,MAAO,OACPC,SAAU,KAEZC,MAAO,CACLF,MAAO,OACPX,gBAAiB,UACjBc,YAAa,EACbC,YAAa,UACbC,aAAc,EACdZ,QAAS,GACTK,aAAc,GACdH,SAAU,IAEZW,OAAQ,CACNN,MAAO,OACPX,gBAAiB,UACjBgB,aAAc,EACdZ,QAAS,GACTK,aAAc,GACdN,WAAY,UAEde,eAAgB,CACdC,QAAS,IAEXC,WAAY,CACVZ,MAAO,OACPF,SAAU,GACVC,WAAY,MACZc,UAAW,UAEbC,aAAc,CACZX,MAAO,QAETY,iBAAkB,CAChBf,MAAO,UACPF,SAAU,GACVe,UAAW,YAIf,QAjMoB,SAAHnE,GAAgBA,EAAVsE,WAAkB,IACvCC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8BjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAuBpBG,EAAU,eAAAvF,GAAAC,EAAAA,EAAAA,UAAG,YACjB,GAAKwE,GAAUI,EAKf,GAAKR,GAAYY,EAAjB,CAKAK,GAAW,GAEX,IACE,GAAIjB,EAAS,CACX,IAAMmB,QAAuBC,EAAAA,EAAAA,4BAA2BrG,EAAMqF,EAAOI,GACrE9E,QAAQS,IAAI,sCAAmBgF,EAAeE,KAAKC,IACrD,KAAO,CACL,IACMD,SADuBE,EAAAA,EAAAA,gCAA+BxG,EAAMqF,EAAOI,IAC7Ca,WAEtBtF,EAAAA,EAAAA,MAAID,EAAAA,EAAAA,KAAIb,EAAU,SAASoG,EAAKC,OAAQ,CAC5ClB,MAAOA,EACPQ,SAAUA,EACVY,WAAW,IAAIvF,MAAOC,gBAGxBR,QAAQS,IAAI,sCAAmBkF,EAAKC,IACtC,CACF,CAAE,MAAO7F,IACPC,QAAQD,MAAM,qCAA4BA,IAC1CgG,EAAAA,QAAMC,MAAM,OApDQ,SAACjG,GACvB,OAAQA,EAAMkG,MACZ,IAAK,qBACH,MAAO,2CACT,IAAK,qBACH,MAAO,+DACT,IAAK,sBACH,MAAO,0DACT,IAAK,sBACH,MAAO,+BACT,IAAK,4BACH,MAAO,6CACT,IAAK,qBACH,MAAO,mDACT,IAAK,8BACH,MAAO,yFACT,QACE,OAAOlG,EAAMmG,QAEnB,CAiCwBC,CAAgBpG,IACtC,CAAC,QACCwF,GAAW,EACb,CAzBA,MAFEQ,EAAAA,QAAMC,MAAM,OAAQ,sDALpBD,EAAAA,QAAMC,MAAM,OAAQ,2CAiCxB,IAAC,kBAnCe,OAAA/F,EAAAS,MAAA,KAAAC,UAAA,KAqChB,OACEyF,EAAAA,EAAAA,KAACC,EAAAA,QAAoB,CACnBC,SAA8C,SAC9CC,MAAOnE,EAAOG,UAAUiE,UAExBC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOM,QAAQ8D,SAAA,EAC1BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOU,MAAM0D,SACvBlC,EAAU,UAAY,oBAGzBmC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOe,KAAKqD,SAAA,EACrBlC,IACA8B,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACduD,YAAY,WACZC,MAAO5B,EACP6B,aAAc5B,EACd6B,eAAe,OACfC,UAAW3B,KAIfc,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACduD,YAAY,QACZC,MAAOpC,EACPqC,aAAcpC,EACduC,aAAa,gBACbF,eAAe,OACfC,UAAW3B,KAGbc,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACduD,YAAY,WACZC,MAAOhC,EACPiC,aAAchC,EACdoC,iBAAe,EACfF,UAAW3B,KAGbc,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAO,CAACnE,EAAOsB,OAAQ4B,GAAWlD,EAAOuB,gBACzC0D,QAAS7B,EACT8B,SAAUhC,EAAQkB,SAEjBlB,GACCc,EAAAA,EAAAA,KAACmB,EAAAA,QAAiB,CAACtE,MAAM,UAEzBmD,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOyB,WAAW2C,SAC5BlC,EAAU,UAAY,sBAK7B8B,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,EAAO2B,aACdsD,QAAS,WAAF,OAAQ9C,GAAYD,EAAQ,EACnCgD,SAAUhC,EAAQkB,UAElBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO4B,iBAAiBwC,SAClClC,EAAU,2BAA6B,8CAOtD,E,qnBCpIA,IAmYMlC,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnB+E,iBAAkB,CAChBhF,KAAM,EACNG,eAAgB,SAChBC,WAAY,UAEd6E,YAAa,CACXC,UAAW,GACX3E,SAAU,GACVE,MAAO,QAET0E,OAAQ,CACNC,cAAe,MACfjF,eAAgB,gBAChBC,WAAY,SACZC,QAAS,GACTgF,kBAAmB,EACnBC,kBAAmB,UACnBrF,gBAAiB,QAEnBsF,YAAa,CACXhF,SAAU,GACVC,WAAY,OACZC,MAAO,WAET+E,cAAe,CACbJ,cAAe,OAEjBK,cAAe,CACbxF,gBAAiB,UACjByF,kBAAmB,GACnBC,gBAAiB,EACjB1E,aAAc,IAEhB2E,kBAAmB,CACjBnF,MAAO,OACPD,WAAY,OAEdqF,mBAAoB,CAClB5F,gBAAiB,UACjByF,kBAAmB,GACnBC,gBAAiB,EACjB1E,aAAc,GACd6E,YAAa,GAEfC,uBAAwB,CACtBtF,MAAO,OACPD,WAAY,OAEdwF,cAAe,CACb3F,QAAS,IAEX4F,SAAU,CACRb,cAAe,MACfjF,eAAgB,gBAChBC,WAAY,SACZC,QAAS,GACTJ,gBAAiB,OACjBgB,aAAc,GACdF,YAAa,EACbC,YAAa,UACbN,aAAc,GAEhBwF,gBAAiB,CACfJ,YAAa,IAEfK,OAAQ,CACNvF,MAAO,GACPwF,OAAQ,GACRnF,aAAc,IAEhBoF,kBAAmB,CACjBpG,gBAAiB,UACjBE,eAAgB,SAChBC,WAAY,UAEdkG,gBAAiB,CACf/F,SAAU,GACVC,WAAY,OACZC,MAAO,WAET8F,SAAU,CACRvG,KAAM,EACN8F,YAAa,IAEfU,UAAW,CACTjG,SAAU,GACVC,WAAY,MACZC,MAAO,UACPC,aAAc,GAEhB+F,YAAa,CACXlG,SAAU,GACVE,MAAO,WAET3C,UAAW,CACTyC,SAAU,GACVE,MAAO,WAETiG,eAAgB,CACd1G,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZC,QAAS,IAEXsG,UAAW,CACTpG,SAAU,GACVE,MAAO,UACPC,aAAc,IAEhBkG,gBAAiB,CACf3G,gBAAiB,UACjByF,kBAAmB,GACnBC,gBAAiB,GACjB1E,aAAc,IAEhB4F,oBAAqB,CACnBpG,MAAO,OACPD,WAAY,MACZD,SAAU,MAId,QAlgBuB,SAAHpD,GAAwB,IAAlBsE,EAAUtE,EAAVsE,WACxBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/BoF,EAAKlF,EAAA,GAAEmF,EAAQnF,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCc,EAAOb,EAAA,GAAEc,EAAUd,EAAA,GAC1BG,GAA0CT,EAAAA,EAAAA,UAAS,CAAC,GAAEU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAA/C4E,EAAa3E,EAAA,GAAE4E,EAAgB5E,EAAA,GACtCG,GAAkDb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAAzD0E,EAAiBzE,EAAA,GAAE0E,EAAoB1E,EAAA,IAE9C2E,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAY,EACZC,EAAmB,KAKjBC,EAAkB,eAAA9J,GAAAC,EAAAA,EAAAA,UAAG,YAEvB,IAEE,IAAM8J,EAAc,iEAAiEC,KAC9D,qBAAd/I,UAA4BA,UAAUgJ,UAAY,IAErDC,EAAeH,EAAc,aAAe,MAClDhK,QAAQS,IAAI,4DAA6C0J,UAAqBjJ,UAAUgJ,UAAUE,UAAU,EAAG,UAG/G,IAAM1I,QAAcC,IACpB,GAAID,EAAO,CACTiI,EAAqBjI,GAGrB,IAAM2I,EAAchL,EAAKgL,YACzB,GAAIA,EAAa,CAEf,IAGMF,EAHc,iEAAiEF,KAC9D,qBAAd/I,UAA4BA,UAAUgJ,UAAY,IAExB,aAAe,MAE5CI,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAAS8K,EAAYzE,aAC7C2E,EAAAA,EAAAA,QAAOD,EAAS,CACpBE,SAAU9I,EACV+I,SAAUN,EACVO,iBAAiB,IAAInK,MAAOC,cAC5BmK,aAAa,IAAIpK,MAAOC,cACxB0J,UAAgC,qBAAdhJ,UAA4BA,UAAUgJ,UAAY,YAEtElK,QAAQS,IAAI,sEAA4D0J,IAC1E,CACF,CAGAnK,QAAQS,IAAI,kEFkDpB,IAAImK,SAAQ,SAACC,GACX,IAAK7J,EAGH,OAFAhB,QAAQD,MAAM,8FACd8K,EAAQ,OAIVC,EAAAA,EAAAA,WAAU9J,GAAW,SAAC+J,GAIpB,GAHA/K,QAAQS,IAAI,4CAAgCsK,GAGxCA,EAAQC,aACV,IAaE,GAXI,iBAAkB/J,QAAsC,YAA5BY,aAAaD,aAC3C,IAAIC,aAAakJ,EAAQC,aAAalI,MAAO,CAC3CmI,KAAMF,EAAQC,aAAaC,KAC3BC,KAAMH,EAAQC,aAAaE,MAAQ,eACnCC,IAAK,WAAW5K,KAAK6K,QACrBC,UAAU,IAEZrL,QAAQS,IAAI,2BAIV,iBAAkBQ,QAAU,uBAAwBA,OAAQ,CAC9D,IAAMqK,EAAW,IAAKrK,OAAOsK,cAAgBtK,OAAOuK,oBAC9CC,EAAaH,EAASI,mBACtBC,EAAWL,EAASM,aAE1BH,EAAWI,KAAO,OAClBJ,EAAWK,UAAUhF,MAAQ,IAC7B6E,EAASI,KAAKjF,MAAQ,GAEtB2E,EAAWO,QAAQL,GACnBA,EAASK,QAAQV,EAASW,aAE1BR,EAAWS,QAEXC,YAAW,WACTV,EAAWW,MACb,GAAG,IACL,CACF,CAAE,MAAOrM,IACPC,QAAQD,MAAM,oCAA6BA,GAC7C,CAGF8K,EAAQE,EACV,GACF,IElGWrL,MAAK,SAAAqL,GAEJ,GAAIA,EAAS,CACX,IAAAsB,EAAwBtB,EAAQC,cAAgB,CAAC,EAAzClI,EAAKuJ,EAALvJ,MAAOmI,EAAIoB,EAAJpB,KACfjL,QAAQS,IAAI,uCAA8B,CAAEqC,MAAAA,EAAOmI,KAAAA,IAGnD,KAEe,WACX,GAAI,iBAAkBhK,QAAU,uBAAwBA,OAAQ,CAC9D,IAAMqK,EAAW,IAAKrK,OAAOsK,cAAgBtK,OAAOuK,oBAC9CC,EAAaH,EAASI,mBACtBC,EAAWL,EAASM,aAE1BH,EAAWI,KAAO,OAClBJ,EAAWK,UAAUhF,MAAQ,IAC7B6E,EAASI,KAAKjF,MAAQ,GAEtB2E,EAAWO,QAAQL,GACnBA,EAASK,QAAQV,EAASW,aAE1BR,EAAWS,QAEXC,YAAW,WACTV,EAAWW,MACb,GAAG,IACL,CACF,CAEAE,GAGItC,GAAe,iBAAkB/I,QAAsC,YAA5BY,aAAaD,YAC1DuK,YAAW,WACT,IAAItK,aAAaiB,GAAS,aAAc,CACtCmI,KAAMA,GAAQ,mCACdC,KAAM,eACNC,IAAK,kBAAkB5K,KAAK6K,QAC5BC,UAAU,GAEd,GAAG,IAEP,CAAE,MAAOkB,GACPvM,QAAQD,MAAM,yCAA6BwM,EAC7C,CAGAC,GACF,CACF,IACC1M,OAAM,SAAA2M,GAAG,OAAIzM,QAAQD,MAAM,gCAAuB0M,EAAI,IAGrD,kBAAmBvL,YACrBlB,QAAQS,IAAI,6CAGZS,UAAUK,cAAcmL,UAAY,KAGpCxL,UAAUK,cAAcmL,UAAY,SAACC,GACnC3M,QAAQS,IAAI,+CAAiCkM,EAAMC,OAC/CD,EAAMC,MAA6B,0BAApBD,EAAMC,KAAKf,MAAwD,yBAApBc,EAAMC,KAAKf,MAE3EW,GAEJ,EAGAtL,UAAUK,cAAcsL,MAAMnN,MAAK,SAAAoN,GACjC9M,QAAQS,IAAI,6BAAyBqM,EAAarL,MACpD,IAAG3B,OAAM,SAAA2M,GACPzM,QAAQD,MAAM,0CAAiC0M,EACjD,IAEJ,CAAE,MAAO1M,IACPC,QAAQD,MAAM,iCAA6BA,GAC7C,CAKJ,IAAC,kBA1HuB,OAAAE,EAAAS,MAAA,KAAAC,UAAA,KA4HlB6L,EAAS,eAAAO,GAAA7M,EAAAA,EAAAA,UAAG,YAChB,IACE,IAAMmK,EAAchL,EAAKgL,YACzB,IAAKA,EAGH,OAFApG,EAAW+I,QAAQ,cACnBzH,GAAW,GAIb,IAAM0H,GAAW7M,EAAAA,EAAAA,KAAIb,EAAU,gBAE/BuK,GAAmBoD,EAAAA,EAAAA,SAAQD,EAAS,WAAD,IAAAE,GAAAjN,EAAAA,EAAAA,UAAE,UAAOkN,GAC1C,GAAKvD,EAEL,IACE,IAAKuD,EAASC,SAGZ,OAFA9D,EAAS,SACThE,GAAW,GAIb,IAAM+H,EAAYF,EAASG,MACrBC,EAAW,GAGjB,IAAK,IAAMC,KAAUH,EACnB,GAAIG,EAAOC,SAASrD,EAAYzE,KAC9B,IACE,IAAM+H,EAAcF,EAAOG,MAAM,KAAKC,MAAK,SAAAC,GAAE,OAAIA,IAAOzD,EAAYzE,GAAG,IACjE0E,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAASoO,KACjCI,QAAqBC,EAAAA,EAAAA,KAAI1D,GAE/B,GAAIyD,EAAaV,SAAU,CACzB,IAAMY,EAASC,EAAA,CACbtI,IAAK+H,GACFI,EAAaR,OAGZY,GAAc/N,EAAAA,EAAAA,KAAIb,EAAU,gBAAgBkO,cAC5CW,QAAyBJ,EAAAA,EAAAA,MAAIK,EAAAA,EAAAA,OAAMF,GAAaG,EAAAA,EAAAA,aAAY,KAElE,GAAIF,EAAiBf,SAAU,CAC7B,IAAMkB,EAAWH,EAAiBb,MAC5BtE,EAAcuF,OAAOC,OAAOF,GAAU,GAE5Cf,EAASkB,KAAK,CACZjB,OAAAA,EACAE,YAAaM,EAAUrI,IACvB+I,eAAgBV,EAAUvJ,MAC1BkK,sBAAuBX,EAAUY,aACjC5F,YAAaA,EAAY6F,KACzBxO,UAAW2I,EAAY3I,UACvByO,cAAe9F,EAAY+F,WAAa3E,EAAYzE,KAExD,CACF,CACF,CAAE,MAAO7F,IACPC,QAAQD,MAAM,kCAAyBA,GACzC,CAIA8J,IACFN,EAASiE,EAASyB,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE7O,UAAY4O,EAAE5O,SAAS,KAC1DmJ,EAzCuB,CAAC,GA2C5B,CAAE,MAAO1J,IACPC,QAAQD,MAAM,+BAA2BA,GAC3C,CAAC,QACK8J,GACFtE,GAAW,EAEf,CACF,IAAG,OAAF,SAAA6J,GAAA,OAAAjC,EAAAzM,MAAA,KAAAC,UAAE,CAAF,CA9DmC,GA+DtC,CAAE,MAAOZ,IACPC,QAAQD,MAAM,8CAA6BA,IACvC8J,GACFtE,GAAW,EAEf,CACF,IAAC,kBAhFc,OAAAwH,EAAArM,MAAA,KAAAC,UAAA,KAyFf,OANA6L,IAAY9M,MAAK,WAEbqK,GAEJ,IAEO,WACLF,GAAY,EACRC,GACFA,IAKF0E,OAAOC,OAAOjF,GAAe6F,SAAQ,SAAAC,GAAW,OAAIA,GAAa,GACnE,CACF,GAAG,CAACrL,IAEJ,IAAMsL,GAAkBC,EAAAA,EAAAA,cAAY,SAACC,GACnCxL,EAAWyL,SAAS,OAAQ,CAC1BC,cAAetQ,EAAKgL,YAAYzE,IAChC+H,YAAa8B,EAAK9B,YAClBF,OAAQgC,EAAKhC,OACbkB,eAAgBc,EAAKd,gBAEzB,GAAG,CAAC1K,IAEE2L,GAAgBJ,EAAAA,EAAAA,cAAY,WAChCvL,EAAWyL,SAAS,QACtB,GAAG,CAACzL,IAGE4L,GAA4BL,EAAAA,EAAAA,cAAWtP,EAAAA,EAAAA,UAAC,YAM5C,IACEF,QAAQS,IAAI,8BACZ,IAAMiB,QAAcC,IACpB,GAAID,EAAO,CACTiI,EAAqBjI,GAGrB,IACE,IAAIG,aAAa,oBAAqB,CACpCoJ,KAAM,8DACNC,KAAM,gBAEV,CAAE,MAAO4E,GACP9P,QAAQD,MAAM,0CAAmC+P,EACnD,CAEA/J,EAAAA,QAAMC,MAAM,0BAAY,+EAGxB,IAAMqE,EAAchL,EAAKgL,YACzB,GAAIA,EAAa,CAEf,IAGMF,EAHc,iEAAiEF,KAC9D,qBAAd/I,UAA4BA,UAAUgJ,UAAY,IAExB,aAAe,MAE5CI,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAAS8K,EAAYzE,aAC7C2E,EAAAA,EAAAA,QAAOD,EAAS,CACpBE,SAAU9I,EACV+I,SAAUN,EACVO,iBAAiB,IAAInK,MAAOC,cAC5B0J,UAAgC,qBAAdhJ,UAA4BA,UAAUgJ,UAAY,YAEtElK,QAAQS,IAAI,sEAA4D0J,IAC1E,CACF,MACEpE,EAAAA,QAAMC,MAAM,qBAAiB,qFAEjC,CAAE,MAAOjG,IACPC,QAAQD,MAAM,6BAAyBA,IACvCgG,EAAAA,QAAMC,MAAM,OAAQ,iDACtB,CACF,IAAG,IAEG+J,GAAiBP,EAAAA,EAAAA,cAAY,SAAAQ,GAAA,IAAAC,EAAAC,EAAGC,EAAIH,EAAJG,KAAI,OACxC1J,EAAAA,EAAAA,MAACW,EAAAA,QAAgB,CACfb,MAAOnE,EAAOqG,SACdpB,QAAS,WAAF,OAAQkI,EAAgBY,EAAK,EAAC3J,SAAA,EAErCJ,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOsG,gBAAgBlC,SACjC2J,EAAKvB,uBACJxI,EAAAA,EAAAA,KAACgK,EAAAA,QAAK,CACJC,OAAQ,CAAEC,IAAKH,EAAKvB,uBACpBrI,MAAOnE,EAAOuG,OACd4H,QAAS,SAACC,GAAC,OAAKxQ,QAAQS,IAAI,gCAAyB+P,EAAEC,YAAY1Q,MAAM,KAG3EqG,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAO,CAACnE,EAAOuG,OAAQvG,EAAOyG,mBAAmBrC,UACrDJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO0G,gBAAgBtC,UACd,OAAnByJ,EAAAE,EAAKxB,iBAAyB,OAAXuB,EAAnBD,EAAqBS,OAAO,SAAT,EAAnBR,EAAgCS,gBAAiB,WAK1DlK,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAO2G,SAASvC,SAAA,EAC3BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO4G,UAAUxC,SAAE2J,EAAKxB,kBACrClI,EAAAA,EAAAA,MAACE,EAAAA,QAAI,CAACJ,MAAOnE,EAAO6G,YAAa2H,cAAe,EAAEpK,SAAA,CAC/C2J,EAAKpB,cAAgB,QAAU,GAAIoB,EAAKlH,mBAG7C7C,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO9B,UAAUkG,SAC3B,IAAIjG,KAAK4P,EAAK7P,WAAWuQ,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,gBAElE,GAClB,CAACxB,IAEJ,OAAIjK,GAEAmB,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOoF,iBAAiBhB,SAAA,EACnCJ,EAAAA,EAAAA,KAACmB,EAAAA,QAAiB,CAACyJ,KAAK,QAAQ/N,MAAM,aACtCmD,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOqF,YAAYjB,SAAC,mCAMrCC,EAAAA,EAAAA,MAACwK,EAAAA,QAAY,CAAC1K,MAAOnE,EAAOG,UAAUiE,SAAA,EACpCC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOuF,OAAOnB,SAAA,EACzBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO2F,YAAYvB,SAAC,eACjCC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAO4F,cAAcxB,SAAA,EACLkD,IACzBtD,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,EAAOiG,mBACdhB,QAASwI,EAA0BrJ,UAEnCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOmG,uBAAuB/B,SAAC,0BAGhDJ,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,EAAO6F,cACdZ,QAASuI,EAAcpJ,UAEvBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOgG,kBAAkB5B,SAAC,wBAI3B,IAAjB8C,EAAMxI,QACL2F,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAO8G,eAAe1C,SAAA,EACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO+G,UAAU3C,SAAC,sCAC/BJ,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,EAAOgH,gBACd/B,QAASuI,EAAcpJ,UAEvBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOiH,oBAAoB7C,SAAC,kCAI7CJ,EAAAA,EAAAA,KAAC8K,EAAAA,QAAQ,CACPtE,KAAMtD,EACN6H,WAAYpB,EACZqB,aAAc,SAACjB,GAAI,OAAKA,EAAK1C,MAAM,EACnC4D,sBAAuBjP,EAAOoG,kBAKxC,E,4OCjYA,IA6SMpG,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnBkF,OAAQ,CACN9E,QAAS,GACTgF,kBAAmB,EACnBC,kBAAmB,UACnBrF,gBAAiB,QAEnB6O,WAAY,CACVvO,SAAU,GACVC,WAAY,OACZC,MAAO,WAETsO,YAAa,CACX/O,KAAM,EACNK,QAAS,IAEX2O,mBAAoB,CAClBC,SAAU,GAEZC,iBAAkB,CAChBrO,SAAU,MACVsO,eAAgB,EAChB9O,QAAS,GACTY,aAAc,IAEhBmO,mBAAoB,CAClBC,UAAW,WACXpP,gBAAiB,WAEnBqP,iBAAkB,CAChBD,UAAW,aACXpP,gBAAiB,WAEnBsP,WAAY,CACVhP,SAAU,GACVE,MAAO,UACPC,aAAc,GAEhB8O,YAAa,CACXjP,SAAU,IAEZkP,gBAAiB,CACfhP,MAAO,QAETiP,cAAe,CACbjP,MAAO,QAET3C,UAAW,CACTyC,SAAU,GACV8O,UAAW,WACXnK,UAAW,GAEbyK,qBAAsB,CACpBlP,MAAO,4BAETmP,mBAAoB,CAClBnP,MAAO,WAEToP,eAAgB,CACdzK,cAAe,MACf/E,QAAS,GACTyP,eAAgB,EAChBC,eAAgB,UAChB9P,gBAAiB,QAEnBa,MAAO,CACLd,KAAM,EACNe,YAAa,EACbC,YAAa,UACbC,aAAc,GACdyE,kBAAmB,GACnBC,gBAAiB,EACjBG,YAAa,EACbkK,UAAW,IACX/P,gBAAiB,QAEnBgQ,WAAY,CACVhQ,gBAAiB,UACjBgB,aAAc,GACdyE,kBAAmB,GACnBC,gBAAiB,EACjBxF,eAAgB,SAChBC,WAAY,UAEd8P,eAAgB,CACdzP,MAAO,OACPD,WAAY,SAIhB,QA3YmB,SAAHrD,GAAmB,IACjCgT,EADyBhT,EAALiT,MACiDC,OAA7DlD,EAAagD,EAAbhD,cAAehC,EAAWgF,EAAXhF,YAAaF,EAAMkF,EAANlF,OAAQkB,EAAcgE,EAAdhE,eAC5CzK,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCqK,EAAQnK,EAAA,GAAE0O,EAAW1O,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAzCuO,EAAUtO,EAAA,GAAEuO,EAAavO,EAAA,GAC1BwO,GAAcC,EAAAA,EAAAA,QAAO,MACrBC,GAAcD,EAAAA,EAAAA,QAAO,IAAIE,EAAAA,QAASC,MAAM,IAAIC,SAElD1J,EAAAA,EAAAA,YAAU,WACR,IAAMuE,GAAc/N,EAAAA,EAAAA,KAAIb,EAAU,gBAAgBkO,cAqBlD,OAFAP,EAAAA,EAAAA,SAAQiB,GAjBW,SAACf,GAClB,IAAMR,EAAOQ,EAASG,MAEtB,GAAIX,EAAM,CACR,IAAM2G,EAAgB/E,OAAOgF,QAAQ5G,GAAM6G,KAAI,SAAAxT,GAAA,IAAAoM,GAAAhI,EAAAA,EAAAA,SAAApE,EAAA,GAAa,O,2WAAAiO,CAAA,CAC1DJ,GADiDzB,EAAA,IAASA,EAAA,GAEhD,IAEZyG,EAAYS,GACZpH,YAAW,WAAO,IAADuH,EACI,OAAnBA,EAAAT,EAAYK,UAAZI,EAAqBC,YAAY,CAAEC,UAAU,GAC/C,GAAG,IACL,MACEd,EAAY,GAEhB,IAIO,YACLe,EAAAA,EAAAA,KAAI1F,EACN,CACF,GAAG,CAACV,IAEJ,IA0CMqG,EAA0B,eAAA/G,GAAA7M,EAAAA,EAAAA,UAAG,UAAO6T,EAAYC,GACpD,IAEE,IAAM1J,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAASwU,KACjChG,QAAqBC,EAAAA,EAAAA,KAAI1D,GAE/B,GAAIyD,EAAaV,SAAU,CACzB,IAAM4G,EAAWlG,EAAaR,MACxB/C,EAAWyJ,EAASzJ,SAIpB0J,EADc7U,EAAKgL,YACO3F,MAIhC,GAAIqP,IAAepE,EAEjB,YADA3P,QAAQS,IAAI,wFAOd,GAHAT,QAAQS,IAAI,8BAAoBsT,iBAAkC,MAARvJ,OAAQ,EAARA,EAAUJ,UAAU,EAAG,oBAAoB6J,EAASxJ,UAAY,gBAGtHD,EAAU,CAAC,IAAD2J,EAEZnU,QAAQS,IAAI,8CAGZ,IAAM2T,EAAmB,CACvBC,GAAI7J,EACJQ,aAAc,CACZlI,MAAO,eAAeoR,IACtBjJ,KAAM+I,EAAYlF,KAClB5D,KAAM,eACNoJ,MAAO,aACPnJ,IAAK,WAAW5K,KAAK6K,QACrBmJ,MAAO,WAET3H,KAAM,CACJf,KAAM,cACN4B,OAAQA,EACRuB,SAAUW,EACVuE,YAAaA,EACbvG,YAAaA,EACbgB,eAAgBA,EAChBqD,YAAagC,EAAYlF,KACzBxO,UAAW0T,EAAY1T,UACvBkU,IAAuB,qBAAXvT,OAAyBA,OAAOwT,SAASC,OAAS,IAEhEC,SAAU,OACVC,mBAAmB,IAIK,eAAtBX,EAASxJ,UAA+C,OAAtB0J,EAAIF,EAAS/J,YAATiK,EAAoBzG,SAAS,aAErE0G,EAAiBS,QAAU,CACzBC,QAAS,CACPC,IAAK,QACLC,QAAS,QAEXhK,aAAc,CACZiK,oBAAoB,EACpBC,QAAS,CAAC,IAAK,IAAK,MAEtBC,YAAa,CACXC,KAAwB,qBAAXnU,OAAyBA,OAAOwT,SAASC,OAAS,MAUrEW,EAAAA,EAAOC,MAAM,sCAAuC,CAClDC,OAAQ,OACRT,QAAS,CACP,eAAgB,mBAChB,cAAiB,gKAEnB7J,KAAMuK,KAAKC,UAAUrB,KAEtB1U,MAAK,SAAAgW,GAEJ,GADA1V,QAAQS,IAAI,oCAA0BiV,EAASC,WAC1CD,EAASE,GACZ,MAAM,IAAIC,MAAM,qBAAqBH,EAASC,UAEhD,OAAOD,EAASI,MAClB,IACCpW,MAAK,SAAAkN,GAAS,IAADmJ,EACZ/V,QAAQS,IAAI,8CAAkCmM,GAGC,qBAAX3L,QAChC,iBAAkBA,QAAsC,YAA5BY,aAAaD,aAClB,eAAtBqS,EAASxJ,UAA+C,OAAtBsL,EAAI9B,EAAS/J,YAAT6L,EAAoBrI,SAAS,YAEtEvB,YAAW,WACT,IAEE,IAAItK,aAAa,eAAeqS,IAAe,CAC7CjJ,KAAM+I,EAAYlF,KAClB5D,KAAM,eACNC,IAAK,kBAAkB5K,KAAK6K,QAC5BC,UAAU,EACV6J,QAAS,CAAC,IAAK,IAAK,KACpBD,oBAAoB,IAEtBjV,QAAQS,IAAI,8CACd,CAAE,MAAOqP,GACP9P,QAAQD,MAAM,6CAAsC+P,EACtD,CACF,GAAG,IAEP,IACChQ,OAAM,SAAAC,GAIL,GAHAC,QAAQD,MAAM,4BAAwBA,GAGS,qBAAXkB,QAChC,iBAAkBA,QAAsC,YAA5BY,aAAaD,WAC3C,IACE,IAAIC,aAAa,eAAeqS,IAAe,CAC7CjJ,KAAM+I,EAAYlF,KAClB5D,KAAM,eACNC,IAAK,2BAA2B5K,KAAK6K,QACrCC,UAAU,EACV6J,QAAS,CAAC,IAAK,IAAK,OAEtBlV,QAAQS,IAAI,6EACd,CAAE,MAAOqP,GACP9P,QAAQD,MAAM,8BAA0B+P,EAC1C,CAEJ,GACF,MACE9P,QAAQS,IAAI,4BAAasT,iCAE7B,MACE/T,QAAQS,IAAI,wDAA+BsT,IAE/C,CAAE,MAAOhU,IACPC,QAAQD,MAAM,oCAA6BA,GAC7C,CACF,IAAC,gBAnJ+BqP,EAAA4G,GAAA,OAAAjJ,EAAArM,MAAA,KAAAC,UAAA,KAyLhC,OACE8F,EAAAA,EAAAA,MAACwK,EAAAA,QAAY,CAAC1K,MAAOnE,EAAOG,UAAUiE,SAAA,EACpCJ,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOuF,OAAOnB,UACzBC,EAAAA,EAAAA,MAACE,EAAAA,QAAI,CAACJ,MAAOnE,EAAOkP,WAAW9K,SAAA,CAC5BmI,EAAe,oBAGpBvI,EAAAA,EAAAA,KAAC8K,EAAAA,QAAQ,CACP9Q,IAAK6S,EACLrG,KAAM2B,EACN4C,WA9CgB,SAAHhE,GAAkB,IAAZgD,EAAIhD,EAAJgD,KACjBpB,EAAgBoB,EAAKnB,WAAaW,EACxC,OACElJ,EAAAA,EAAAA,MAAC2M,EAAAA,QAAS1M,KAAI,CACZH,MAAO,CACLnE,EAAOsP,iBACP3C,EAAgB3M,EAAOwP,mBAAqBxP,EAAO0P,iBACnD,CACEmE,UAAW,CAAC,CACVC,WAAY/C,EAAYgD,YAAY,CAClCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAI,UAIxB7P,SAAA,EAEFJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO2P,WAAWvL,SAC5BuI,EAAgB,MAAQJ,KAE3BvI,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAO,CACXnE,EAAO4P,YACPjD,EAAgB3M,EAAO6P,gBAAkB7P,EAAO8P,eAChD1L,SACC2J,EAAKrB,QAER1I,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAO,CACXnE,EAAO9B,UACPyO,EAAgB3M,EAAO+P,qBAAuB/P,EAAOgQ,oBACrD5L,SACC,IAAIjG,KAAK4P,EAAK7P,WAAWuQ,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,gBAIzF,EAaMK,aAAc,SAACjB,GAAI,OAAKA,EAAKrC,EAAE,EAC/BvH,MAAOnE,EAAOmP,YACdF,sBAAuBjP,EAAOoP,mBAC9B8E,UAAU,EACVC,oBAAqB,WAAF,IAAAC,EAAA,OAA2B,OAA3BA,EAAQvD,EAAYK,cAAO,EAAnBkD,EAAqB7C,YAAY,CAAEC,UAAU,GAAO,EAC/E6C,SAAU,WAAF,IAAAC,EAAA,OAA2B,OAA3BA,EAAQzD,EAAYK,cAAO,EAAnBoD,EAAqB/C,YAAY,CAAEC,UAAU,GAAO,KAEtEnN,EAAAA,EAAAA,MAACJ,EAAAA,QAAoB,CACnBC,SAA8C,SAC9CC,MAAOnE,EAAOiQ,eAAe7L,SAAA,EAE7BJ,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACdwD,MAAOiM,EACPhM,aAAciM,EACdnM,YAAY,sBACZ8P,WAAS,KAEXvQ,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,EAAOqQ,WACdpL,QAlQY,WAClB,GAAI0L,EAAW6D,OAAQ,CACrB,IAAMzI,GAAc/N,EAAAA,EAAAA,KAAIb,EAAU,gBAAgBkO,cAC5CoJ,GAAgBnI,EAAAA,EAAAA,MAAKP,GAErB6F,EAAc,CAClBhF,SAAUW,EACVb,KAAMiE,EACNzS,UAAWC,KAAK6K,OAIlBgI,EAAAA,QAAS0D,SAAS,CAChB1D,EAAAA,QAAS2D,OAAO5D,EAAa,CAC3B6D,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAEnB9D,EAAAA,QAAS2D,OAAO5D,EAAa,CAC3B6D,QAAS,EACTC,SAAU,IACVC,iBAAiB,MAElBhL,SAEH7L,EAAAA,EAAAA,KAAIwW,EAAe7C,GAChBtU,MAAK,WACJsT,EAAc,IACd7G,YAAW,WAAO,IAADgL,EACI,OAAnBA,EAAAlE,EAAYK,UAAZ6D,EAAqBxD,YAAY,CAAEC,UAAU,GAC/C,GAAG,KAGHE,EAA2BnG,EAAaqG,EAC1C,IACClU,OAAM,SAACC,GACNgG,EAAAA,QAAMC,MAAM,OAAQ,+CACtB,GACJ,CACF,EA2N6BQ,UAErBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOsQ,eAAelM,SAAC,qBAK9C,E,cCrDMpE,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnB+E,iBAAkB,CAChBhF,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZH,gBAAiB,QAEnBC,QAAS,CACPF,KAAM,EACNK,QAAS,IAEXC,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,MAAO,UACPC,aAAc,IAEhBmP,eAAgB,CACdnP,aAAc,IAEhBkU,MAAO,CACLrU,SAAU,GACVE,MAAO,UACPC,aAAc,GAEhBI,MAAO,CACLb,gBAAiB,UACjBc,YAAa,EACbC,YAAa,UACbC,aAAc,GACdZ,QAAS,GACTE,SAAU,GACVE,MAAO,WAETS,OAAQ,CACND,aAAc,GACdZ,QAAS,GACTD,WAAY,SACZD,eAAgB,SAChBO,aAAc,IAEhBmU,aAAc,CACZ5U,gBAAiB,WAEnB6U,aAAc,CACZ7U,gBAAiB,WAEnBoB,WAAY,CACVZ,MAAO,OACPF,SAAU,GACVC,WAAY,OAEduU,eAAgB,CACd3U,WAAY,SACZ+O,eAAgB,IAElB6F,eAAgB,CACdpU,MAAO,IACPwF,OAAQ,IACRnF,aAAc,GACdP,aAAc,GACduU,SAAU,WACV9U,eAAgB,SAChBC,WAAY,SACZH,gBAAiB,WAEnBoM,aAAc,CACZzL,MAAO,OACPwF,OAAQ,OACRnF,aAAc,IAEhBiU,iBAAkB,CAChBtU,MAAO,OACPwF,OAAQ,OACRnF,aAAc,GACdhB,gBAAiB,UACjBE,eAAgB,SAChBC,WAAY,UAEdkG,gBAAiB,CACf/F,SAAU,GACVC,WAAY,OACZC,MAAO,WAET0U,UAAW,CACTF,SAAU,WACVG,OAAQ,EACRC,MAAO,EACPpV,gBAAiB,UACjByF,kBAAmB,GACnBC,gBAAiB,EACjB1E,aAAc,IAEhBqU,cAAe,CACb7U,MAAO,OACPF,SAAU,GACVC,WAAY,OAEd0B,MAAO,CACL3B,SAAU,GACVC,WAAY,MACZC,MAAO,UACPC,aAAc,GAEhB6U,eAAgB,CACdvV,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZH,gBAAiB,sBAEnBuV,aAAc,CACZvV,gBAAiB,QACjBgB,aAAc,GACdZ,QAAS,GACTO,MAAO,MACPC,SAAU,KAEZ4U,WAAY,CACVlV,SAAU,GACVC,WAAY,OACZE,aAAc,GACdD,MAAO,WAETiV,WAAY,CACVzV,gBAAiB,UACjBc,YAAa,EACbC,YAAa,UACbC,aAAc,GACdZ,QAAS,GACTE,SAAU,GACVE,MAAO,UACPC,aAAc,IAEhBiV,aAAc,CACZvQ,cAAe,MACfjF,eAAgB,YAElByV,YAAa,CACXjQ,gBAAiB,EACjBD,kBAAmB,GACnBzE,aAAc,EACd4U,WAAY,IAEdC,aAAc,CACZ7V,gBAAiB,WAEnB8V,WAAY,CACV9V,gBAAiB,WAEnB+V,gBAAiB,CACfvV,MAAO,QACPF,SAAU,GACVC,WAAY,SAIhB,QAtZsB,SAAHrD,GAAwB,IAAD8Y,EAAjBxU,EAAUtE,EAAVsE,WACvBC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCgB,EAAQd,EAAA,GAAEe,EAAWf,EAAA,GAC5BI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAA3CkU,EAAWjU,EAAA,GAAEkU,EAAclU,EAAA,GAClCG,GAA8CT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAAnDgU,EAAe/T,EAAA,GAAEgU,EAAkBhU,EAAA,GAC1CG,GAA8Bb,EAAAA,EAAAA,WAAS,GAAKc,GAAAZ,EAAAA,EAAAA,SAAAW,EAAA,GAArCM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAC1BG,GAAgCjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,SAAAe,EAAA,GAAxC0T,EAAQzT,EAAA,GAAE0T,EAAW1T,EAAA,GAC5B2T,GAAwC7U,EAAAA,EAAAA,UAAS,MAAK8U,GAAA5U,EAAAA,EAAAA,SAAA2U,EAAA,GAA/CnK,EAAYoK,EAAA,GAAEC,EAAeD,EAAA,GACpCE,GAAwChV,EAAAA,EAAAA,WAAS,GAAMiV,GAAA/U,EAAAA,EAAAA,SAAA8U,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAgCpV,EAAAA,EAAAA,UAAS,IAAGqV,GAAAnV,EAAAA,EAAAA,SAAAkV,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAE5B5P,EAAAA,EAAAA,YAAU,WACR,IACMS,GADO/K,EAAAA,EAAAA,WACY+K,YAEzB,GAAKA,EAAL,CAKA,IAAMC,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAAS8K,EAAYzE,QACnDoI,EAAAA,EAAAA,KAAI1D,GAAS5K,MAAK,SAAC0N,GACbA,EAASC,WACXlI,EAAYiI,EAASG,MAAMrI,UAAY,IACvCgU,EAAgB9L,EAASG,MAAMsB,eAEjCtJ,GAAW,EACb,GATA,MAFEtB,EAAWyL,SAAS,QAYxB,GAAG,CAACzL,IAEJ,IAAM0V,EAAmB,eAAA1Z,GAAAC,EAAAA,EAAAA,UAAG,YAC1B,IACE6Y,GAAY,GACZ,IACM1O,GADO/K,EAAAA,EAAAA,WACY+K,YAEzB,GAAIqO,GAAeE,EAAiB,CAClC,GAAIF,IAAgBE,EAElB,YADA7S,EAAAA,QAAMC,MAAM,OAAQ,sCAGtB,GAAI0S,EAAY5X,OAAS,EAEvB,YADAiF,EAAAA,QAAMC,MAAM,OAAQ,yDAGhB4T,EAAAA,EAAAA,gBAAevP,EAAaqO,EACpC,CAEA,IAAMpO,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAAS8K,EAAYzE,aAC7CvF,EAAAA,EAAAA,KAAIiK,EAAS,CACjB5F,MAAO2F,EAAY3F,MACnBQ,SAAUA,EACV2J,aAAcA,IAGhB9I,EAAAA,QAAMC,MAAM,0BAAY,yBACxB2S,EAAe,IACfE,EAAmB,GACrB,CAAE,MAAO9Y,IACPgG,EAAAA,QAAMC,MAAM,OAAQjG,GAAMmG,QAC5B,CAAC,QACC6S,GAAY,EACd,CACF,IAAC,kBAjCwB,OAAA9Y,EAAAS,MAAA,KAAAC,UAAA,KAmCnBkZ,EAAY,eAAAxN,GAAAnM,EAAAA,EAAAA,UAAG,YACnB,IACE,IAAMb,GAAOC,EAAAA,EAAAA,iBACPwa,EAAAA,EAAAA,SAAQza,GACd4E,EAAWyL,SAAS,QACtB,CAAE,MAAO3P,IACPgG,EAAAA,QAAMC,MAAM,OAAQjG,GAAMmG,QAC5B,CACF,IAAC,kBARiB,OAAAmG,EAAA3L,MAAA,KAAAC,UAAA,KAcZoZ,GAAkB,eAAAhN,GAAA7M,EAAAA,EAAAA,UAAG,YACzB,GAAKuZ,EAKL,IAAK,IAADO,EAEItE,QAAiBJ,MAAMmE,GAC7B,IAAK/D,EAASE,IAA2C,OAArCoE,EAACtE,EAASZ,QAAQ9G,IAAI,mBAArBgM,EAAsCtM,SAAS,SAClE,MAAM,IAAImI,MAAM,2BAGlB,IACMxL,GADO/K,EAAAA,EAAAA,WACY+K,YACnBC,GAAUlK,EAAAA,EAAAA,KAAIb,EAAU,SAAS8K,EAAYzE,aAC7CvF,EAAAA,EAAAA,KAAIiK,EAAS,CACjB5F,MAAO2F,EAAY3F,MACnBQ,SAAUA,EACV2J,aAAc4K,IAGhBP,EAAgBO,GAChBH,GAAgB,GAChBI,EAAY,IACZ3T,EAAAA,QAAMC,MAAM,0BAAY,4CAC1B,CAAE,MAAOjG,IACPgG,EAAAA,QAAMC,MAAM,OAAQ,iEACtB,MA1BED,EAAAA,QAAMC,MAAM,OAAQ,kCA2BxB,IAAC,kBA7BuB,OAAA+G,EAAArM,MAAA,KAAAC,UAAA,KA+BxB,OAAI2E,GAEAc,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOoF,iBAAiBhB,UACnCJ,EAAAA,EAAAA,KAACmB,EAAAA,QAAiB,CAACyJ,KAAK,QAAQ/N,MAAM,eAM1CwD,EAAAA,EAAAA,MAACwK,EAAAA,QAAY,CAAC1K,MAAOnE,EAAOG,UAAUiE,SAAA,EACpCJ,EAAAA,EAAAA,KAAC6T,EAAAA,QAAK,CACJC,cAAc,QACdC,aAAa,EACbC,QAASf,EACTgB,eAAgB,WAAF,OAAQf,GAAgB,EAAM,EAAC9S,UAE7CJ,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAO2V,eAAevR,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAO4V,aAAaxR,SAAA,EAC/BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO6V,WAAWzR,SAAC,oCAChCJ,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAO8V,WACdpR,MAAO2S,EACP1S,aAAc2S,EACd7S,YAAY,sBACZyT,qBAAqB,aAEvB7T,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAO+V,aAAa3R,SAAA,EAC/BJ,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAO,CAACnE,EAAOgW,YAAahW,EAAOkW,cACnCjR,QAAS,WACPiS,GAAgB,GAChBI,EAAY,GACd,EAAElT,UAEFJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOoW,gBAAgBhS,SAAC,kBAEvCJ,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAO,CAACnE,EAAOgW,YAAahW,EAAOmW,YACnClR,QAAS0S,GAAmBvT,UAE5BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOoW,gBAAgBhS,SAAC,wBAO/CC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOM,QAAQ8D,SAAA,EAC1BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOU,MAAM0D,SAAC,yBAE3BC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOmV,eAAe/Q,SAAA,EACjCC,EAAAA,EAAAA,MAACW,EAAAA,QAAgB,CACfb,MAAOnE,EAAOoV,eACdnQ,QAxFuB,WAC/BiS,GAAgB,EAClB,EAsF4C9S,SAAA,CAEjCqI,GACCzI,EAAAA,EAAAA,KAACgK,EAAAA,QAAK,CACJC,OAAQ,CAAEC,IAAKzB,GACftI,MAAOnE,EAAOyM,aACd0B,QAAS,WACPxK,EAAAA,QAAMC,MAAM,OAAQ,sDACpBkT,EAAgB,KAClB,KAGF9S,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOsV,iBAAiBlR,UACnCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO0G,gBAAgBtC,UACzB,MAARtB,GAAmB,OAAXuT,EAARvT,EAAUwL,OAAO,SAAT,EAAR+H,EAAqB9H,gBAAiB,SAI7CvK,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOuV,UAAUnR,UAC5BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO0V,cAActR,SAAC,qBAIvCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOsC,MAAM8B,SAAEtB,QAG9BuB,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOiQ,eAAe7L,SAAA,EACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOgV,MAAM5Q,SAAC,kCAC3BJ,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACdwD,MAAO5B,EACP6B,aAAc5B,EACd0B,YAAY,mDACZyT,qBAAqB,gBAIzB7T,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOiQ,eAAe7L,SAAA,EACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOgV,MAAM5Q,SAAC,qBAC3BJ,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACdwD,MAAO4R,EACP3R,aAAc4R,EACd9R,YAAY,4BACZyT,qBAAqB,UACrBnT,iBAAe,QAInBV,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOiQ,eAAe7L,SAAA,EACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOgV,MAAM5Q,SAAC,uBAC3BJ,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOkB,MACdwD,MAAO8R,EACP7R,aAAc8R,EACdhS,YAAY,8BACZyT,qBAAqB,UACrBnT,iBAAe,QAInBf,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAO,CAACnE,EAAOsB,OAAQtB,EAAOiV,cAC9BhQ,QAASsS,EACTrS,SAAUwR,EAAStS,SAElBsS,GACC1S,EAAAA,EAAAA,KAACmB,EAAAA,QAAiB,CAACtE,MAAM,WAEzBmD,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOyB,WAAW2C,SAAC,2BAIpCJ,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAO,CAACnE,EAAOsB,OAAQtB,EAAOkV,cAC9BjQ,QAASwS,EAAarT,UAEtBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAOyB,WAAW2C,SAAC,uCAK1C,E,8NCrPA,IAoJMpE,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnB+E,iBAAkB,CAChBhF,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZH,gBAAiB,QAEnB8X,gBAAiB,CACf1X,QAAS,GACTgF,kBAAmB,EACnBC,kBAAmB,UACnBrF,gBAAiB,QAEnB+X,YAAa,CACX/X,gBAAiB,UACjBc,YAAa,EACbC,YAAa,UACbC,aAAc,GACdZ,QAAS,GACTE,SAAU,GACVE,MAAO,WAETuF,cAAe,CACb3F,QAAS,IAEX4X,SAAU,CACRhY,gBAAiB,OACjBgB,aAAc,GACdZ,QAAS,GACTK,aAAc,EACdK,YAAa,EACbC,YAAa,WAEfkX,SAAU,CACRlY,KAAM,GAERwG,UAAW,CACTjG,SAAU,GACVC,WAAY,MACZC,MAAO,UACPC,aAAc,GAEhBgC,SAAU,CACRnC,SAAU,GACVE,MAAO,WAETiG,eAAgB,CACd1G,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZC,QAAS,IAEXsG,UAAW,CACTpG,SAAU,GACVE,MAAO,UACPa,UAAW,YAIf,QAnNsB,SAAHnE,GAAwB,IAAlBsE,EAAUtE,EAAVsE,WACvBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/ByW,EAAKvW,EAAA,GAAEwW,EAAQxW,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCc,EAAOb,EAAA,GAAEc,EAAUd,EAAA,GAC1BG,GAAsCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAA3CiW,EAAWhW,EAAA,GAAEiW,EAAcjW,EAAA,IAElC+E,EAAAA,EAAAA,YAAU,WACR,IACMS,GADO/K,EAAAA,EAAAA,WACY+K,YAEzB,GAAKA,EAAL,CAKA,IAAM0Q,GAAW3a,EAAAA,EAAAA,KAAIb,EAAU,SACzB+P,GAAcpC,EAAAA,EAAAA,SAAQ6N,GAAU,SAAC3N,GACrC,IAAMR,EAAOQ,EAASG,MACtB,GAAIX,EAAM,CACR,IAAMoO,EAAWxM,OAAOgF,QAAQ5G,GAC7BqO,QAAO,SAAAhb,GAAK,OAALoE,EAAAA,EAAAA,SAAApE,EAAA,GAAK,KAAcoK,EAAYzE,GAAG,IACzC6N,KAAI,SAAA1G,GAAA,IAAAI,GAAA9I,EAAAA,EAAAA,SAAA0I,EAAA,GAAW,O,2WAAAmB,CAAA,CACdtI,IADQuH,EAAA,IAAMA,EAAA,GAEP,IAEXyN,EAASI,EACX,MACEJ,EAAS,IAEXrV,GAAW,EACb,IAEA,OAAO,kBAAM+J,GAAc,CAnB3B,CAFErL,EAAWyL,SAAS,QAsBxB,GAAG,CAACzL,IAEJ,IAAMiX,EAAgBP,EAAMM,QAAO,SAAAtV,GAAI,OACrCA,EAAKjB,OACLiB,EAAKjB,MAAMyW,cAAczN,SAASmN,EAAYM,cAAc,IAGxDC,EAAY,eAAAC,GAAAnb,EAAAA,EAAAA,UAAG,UAAO+N,GAC1B,IACE,IACM5D,GADO/K,EAAAA,EAAAA,WACY+K,YAGnBiR,GAAmBlb,EAAAA,EAAAA,KAAIb,EAAU,gBACjCgc,QAA8BvN,EAAAA,EAAAA,KAAIsN,GAExC,GAAIC,EAAsBlO,SAAU,CAClC,IAAMmO,EAAgBD,EAAsBhO,MACtCkO,EAAejN,OAAOgF,QAAQgI,GAAe3N,MAAK,SAAAmC,GAAe,IAAbvC,GAAYpJ,EAAAA,EAAAA,SAAA2L,EAAA,GAAN,GAC9D,OAAOvC,EAAOC,SAASrD,EAAYzE,MAAQ6H,EAAOC,SAASO,EAAUrI,IACvE,IAEA,GAAI6V,EAQF,YANAxX,EAAWyL,SAAS,OAAQ,CAC1BC,cAAetF,EAAYzE,IAC3B+H,YAAaM,EAAUrI,IACvB6H,OAAQgO,EAAa,GACrB9M,eAAgBV,EAAUvJ,OAIhC,CAGA,IAAM+I,EAAS,GAAGpD,EAAYzE,OAAOqI,EAAUrI,MACzC8V,GAAUtb,EAAAA,EAAAA,KAAIb,EAAU,gBAAgBkO,KAExCkO,EAAW,CACfC,cAAYC,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,SAAA,GACTxR,EAAYzE,IAAMyE,EAAY3F,OAC9BuJ,EAAUrI,IAAMqI,EAAUvJ,OAE7BuE,YAAa,GACb6S,iBAAiB,IAAIvb,MAAOC,cAC5Bub,WAASF,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,SAAA,GACNxR,EAAYzE,KAAM,GAClBqI,EAAUrI,KAAM,UAIfvF,EAAAA,EAAAA,KAAIqb,EAASC,GAEnB1X,EAAWyL,SAAS,OAAQ,CAC1BC,cAAetF,EAAYzE,IAC3B+H,YAAaM,EAAUrI,IACvB6H,OAAQA,EACRkB,eAAgBV,EAAUvJ,OAE9B,CAAE,MAAO3E,IACPC,QAAQD,MAAM,yCAAgCA,IAC9CgG,EAAAA,QAAMC,MAAM,OAAQ,gEACtB,CACF,IAAC,gBAxDiBoJ,GAAA,OAAAiM,EAAA3a,MAAA,KAAAC,UAAA,KAwElB,OAAI2E,GAEAc,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOoF,iBAAiBhB,UACnCJ,EAAAA,EAAAA,KAACmB,EAAAA,QAAiB,CAACyJ,KAAK,QAAQ/N,MAAM,eAM1CwD,EAAAA,EAAAA,MAACwK,EAAAA,QAAY,CAAC1K,MAAOnE,EAAOG,UAAUiE,SAAA,EACpCJ,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAOmY,gBAAgB/T,UAClCJ,EAAAA,EAAAA,KAACQ,EAAAA,QAAS,CACRL,MAAOnE,EAAOoY,YACd3T,YAAY,6BACZyT,qBAAqB,UACrBxT,MAAO+T,EACP9T,aAAc+T,OAIlB1U,EAAAA,EAAAA,KAAC8K,EAAAA,QAAQ,CACPtE,KAAMsO,EACN/J,WApCiB,SAAH6K,GAAA,IAAM7L,EAAI6L,EAAJ7L,KAAI,OAC5B/J,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,EAAOqY,SACdpT,QAAS,WAAF,OAAQ+T,EAAajL,EAAK,EAAC3J,UAElCC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,EAAOsY,SAASlU,SAAA,EAC3BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO4G,UAAUxC,SAAE2J,EAAKzL,QACpCyL,EAAKjL,WACJkB,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO8C,SAASsB,SAAE2J,EAAKjL,eAGvB,EA0BfkM,aAAc,SAAAjB,GAAI,OAAIA,EAAKvK,GAAG,EAC9ByL,sBAAuBjP,EAAOoG,cAC9ByT,oBACE7V,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,EAAO8G,eAAe1C,UACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,EAAO+G,UAAU3C,SAC3BqU,EAAc,2BAAqB,8CAOlD,E,+NCpJA,IA0HMzY,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnB+E,iBAAkB,CAChBhF,KAAM,EACNG,eAAgB,SAChBC,WAAY,UAEd6E,YAAa,CACXC,UAAW,GACX3E,SAAU,GACVE,MAAO,QAETiZ,eAAgB,CACd1Z,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZC,QAAS,IAEXsZ,UAAW,CACTpZ,SAAU,GACVE,MAAO,UACPa,UAAW,SACXZ,aAAc,IAEhBkZ,YAAa,CACX3Z,gBAAiB,UACjByF,kBAAmB,GACnBC,gBAAiB,GACjB1E,aAAc,IAEhB4Y,gBAAiB,CACfpZ,MAAO,OACPF,SAAU,GACVC,WAAY,OAEd2E,OAAQ,CACN9E,QAAS,GACTgF,kBAAmB,EACnBC,kBAAmB,UACnBrF,gBAAiB,QAEnBsF,YAAa,CACXhF,SAAU,GACVC,WAAY,OACZC,MAAO,WAETuF,cAAe,CACb3F,QAAS,IAEX4X,SAAU,CACRhY,gBAAiB,OACjBgB,aAAc,GACdZ,QAAS,GACTK,aAAc,EACdK,YAAa,EACbC,YAAa,WAEfkX,SAAU,CACRlY,KAAM,GAERwG,UAAW,CACTjG,SAAU,GACVC,WAAY,MACZC,MAAO,UACPC,aAAc,GAEhBgC,SAAU,CACRnC,SAAU,GACVE,MAAO,WAETiG,eAAgB,CACd1G,KAAM,EACNG,eAAgB,SAChBC,WAAY,SACZC,QAAS,IAEXsG,UAAW,CACTpG,SAAU,GACVE,MAAO,aAIX,SA/MoB,SAAHtD,GAA+B,IAAzBsE,EAAUtE,EAAVsE,WACrBC,GADsCvE,EAALiT,OACPzO,EAAAA,EAAAA,UAAS,KAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/ByW,EAAKvW,EAAA,GAAEwW,EAAQxW,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCc,EAAOb,EAAA,GAAEc,EAAUd,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,SAAAO,EAAA,GAAjC7E,EAAK8E,EAAA,GAAEyX,EAAQzX,EAAA,IAEtB+E,EAAAA,EAAAA,YAAU,WACR,IAAM2S,EAAU,eAAAtc,GAAAC,EAAAA,EAAAA,UAAG,YACjB,IACEqF,GAAW,GACX+W,EAAS,MAET,IAAMjS,EAAchL,EAAKgL,YACzB,IAAKA,EACH,MAAM,IAAIwL,MAAM,mDAGlB,IAAMkF,GAAW3a,EAAAA,EAAAA,KAAIb,EAAU,SACzB6N,QAAiBY,EAAAA,EAAAA,KAAI+M,GAE3B,IAAK3N,EAASC,SAEZ,YADAuN,EAAS,IAIX,IAAM4B,EAAYpP,EAASG,MACrBkP,EAAajO,OAAOgF,QAAQgJ,GAC/B/I,KAAI,SAAApH,GAAA,IAAAU,GAAA1I,EAAAA,EAAAA,SAAAgI,EAAA,GAAe,O,6WAAA6B,CAAA,CAClBtI,IADQmH,EAAA,IAAUA,EAAA,GAEP,IAEZkO,QAAO,SAAAtV,GAAI,OAAIA,EAAKC,MAAQyE,EAAYzE,GAAG,IAE9CgV,EAAS6B,EACX,CAAE,MAAO1c,GACPC,QAAQD,MAAM,8CAAkCA,GAChDuc,EAASvc,EAAMmG,SACfH,EAAAA,QAAMC,MAAM,OAAQ,mEACtB,CAAC,QACCT,GAAW,EACb,CACF,IAAC,kBAlCe,OAAAtF,EAAAS,MAAA,KAAAC,UAAA,KAoChB4b,GACF,GAAG,IAmCH,OAAIjX,GAEAmB,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,GAAOoF,iBAAiBhB,SAAA,EACnCJ,EAAAA,EAAAA,KAACmB,EAAAA,QAAiB,CAACyJ,KAAK,QAAQ/N,MAAM,aACtCmD,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAOqF,YAAYjB,SAAC,+CAKnCzG,GAEA0G,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,GAAO8Z,eAAe1V,SAAA,EACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAO+Z,UAAU3V,SAAEzG,KAChCqG,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,GAAOga,YACd/U,QAAS,WAAF,OAAQ9B,GAAW,EAAK,EAACiB,UAEhCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAOia,gBAAgB7V,SAAC,sBAO3CC,EAAAA,EAAAA,MAACwK,EAAAA,QAAY,CAAC1K,MAAOnE,GAAOG,UAAUiE,SAAA,EACpCJ,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,GAAOuF,OAAOnB,UACzBJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAO2F,YAAYvB,SAAC,8DAEjB,IAAjBmU,EAAM7Z,QACLsF,EAAAA,EAAAA,KAACM,EAAAA,QAAI,CAACH,MAAOnE,GAAO8G,eAAe1C,UACjCJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAO+G,UAAU3C,SAAC,mDAGjCJ,EAAAA,EAAAA,KAAC8K,EAAAA,QAAQ,CACPtE,KAAM+N,EACNxJ,WAjDe,SAAHhE,GAAA,IAAMgD,EAAIhD,EAAJgD,KAAI,OAC5B/J,EAAAA,EAAAA,KAACgB,EAAAA,QAAgB,CACfb,MAAOnE,GAAOqY,SACdpT,QAAS,WAAF,OAtBa,SAAC1B,GACvB,IAAM0E,EAAchL,EAAKgL,YACzB,GAAKA,EAAL,CAMA,IAAMoD,EAAS,CAACpD,EAAYzE,IAAKD,EAAKC,KAAKqJ,OAAOyN,KAAK,KAGvDzY,EAAWyL,SAAS,OAAQ,CAC1BC,cAAetF,EAAYzE,IAC3B+H,YAAahI,EAAKC,IAClB6H,OAAQA,EACRkB,eAAgBhJ,EAAKjB,OAVvB,MAFEqB,EAAAA,QAAMC,MAAM,OAAQ,kDAcxB,CAKmB2W,CAAgBxM,EAAK,EAAC3J,UAErCC,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACH,MAAOnE,GAAOsY,SAASlU,SAAA,EAC3BJ,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAO4G,UAAUxC,SAAE2J,EAAKzL,QACpCyL,EAAKjL,WACJkB,EAAAA,EAAAA,KAACO,EAAAA,QAAI,CAACJ,MAAOnE,GAAO8C,SAASsB,SAAE2J,EAAKjL,eAGvB,EAuCbkM,aAAc,SAACjB,GAAI,OAAKA,EAAKvK,GAAG,EAChCyL,sBAAuBjP,GAAOoG,kBAKxC,ECtHA,IAAMoU,IAAQC,EAAAA,EAAAA,WACRC,IAAMC,EAAAA,EAAAA,4BAEZ,SAASC,KACP,OACEvW,EAAAA,EAAAA,MAACqW,GAAIG,UAAS,CACZC,cAAe,SAAFvd,GAAA,IAAKiT,EAAKjT,EAALiT,MAAK,MAAQ,CAC7BuK,WAAY,SAAFld,GAAiC,IACrCmd,EADSC,EAAOpd,EAAPod,QAASpa,EAAKhD,EAALgD,MAAO+N,EAAI/Q,EAAJ+Q,KAS7B,MANmB,UAAf4B,EAAM0K,KACRF,EAAWC,EAAU,cAAgB,sBACb,YAAfzK,EAAM0K,OACfF,EAAWC,EAAU,SAAW,mBAG3BjX,EAAAA,EAAAA,KAACmX,EAAAA,QAAQ,CAACD,KAAMF,EAAUpM,KAAMA,EAAM/N,MAAOA,GACtD,EACAua,sBAAuB,UACvBC,wBAAyB,OAC1B,EAAEjX,SAAA,EAEHJ,EAAAA,EAAAA,KAAC0W,GAAIY,OAAM,CACTJ,KAAK,QACLK,UAAWC,EACXC,QAAS,CACP/a,MAAO,gBAGXsD,EAAAA,EAAAA,KAAC0W,GAAIY,OAAM,CACTJ,KAAK,UACLK,UAAWG,EACXD,QAAS,CACP/a,MAAO,oBAKjB,CAEe,SAASib,KACtB,IAAA7Z,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/ByB,EAAIvB,EAAA,GAAE4Z,EAAO5Z,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCc,EAAOb,EAAA,GAAEc,EAAUd,EAAA,GAW1B,OATAmF,EAAAA,EAAAA,YAAU,WACR,IAAM0F,GAAc2O,EAAAA,EAAAA,oBAAmB5e,GAAM,SAACsG,GAC5CqY,EAAQrY,GACRJ,GAAW,EACb,IAEA,OAAO+J,CACT,GAAG,IAEChK,EACK,MAIPc,EAAAA,EAAAA,KAAC8X,EAAAA,oBAAmB,CAAA1X,UAClBJ,EAAAA,EAAAA,KAACwW,GAAMK,UAAS,CACdC,cAAe,CACbiB,aAAa,EACbC,UAAW,oBACX5X,SAEDb,GACCc,EAAAA,EAAAA,MAAA4X,EAAAA,SAAA,CAAA7X,SAAA,EACEJ,EAAAA,EAAAA,KAACwW,GAAMc,OAAM,CAACJ,KAAK,UAAUK,UAAWX,MACxC5W,EAAAA,EAAAA,KAACwW,GAAMc,OAAM,CACXJ,KAAK,OACLK,UAAWW,EACXT,QAAS,CACPM,aAAa,EACbrb,MAAO,aAGXsD,EAAAA,EAAAA,KAACwW,GAAMc,OAAM,CACXJ,KAAK,UACLK,UAAWY,EACXV,QAAS,CACPM,aAAa,EACbrb,MAAO,kBAGXsD,EAAAA,EAAAA,KAACwW,GAAMc,OAAM,CACXJ,KAAK,QACLK,UAAWa,GACXX,QAAS,CACPM,aAAa,EACbrb,MAAO,oCAKbsD,EAAAA,EAAAA,KAACwW,GAAMc,OAAM,CACXJ,KAAK,QACLK,UAAWc,EACXZ,QAAS,CACP/a,MAAO,uBAOrB,C,GCxHI4b,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,MCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAI5K,KAC9C,IAAG2K,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIP,EAASre,OAAQ4e,IAAK,CAGzC,IAFA,IAAKJ,EAAUC,EAAI5K,GAAYwK,EAASO,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASxe,OAAQ8e,MACpB,EAAXjL,GAAsB6K,GAAgB7K,IAAanG,OAAOqR,KAAKlB,EAAoBS,GAAGU,OAAOC,GAASpB,EAAoBS,EAAEW,GAAKT,EAASM,MAC9IN,EAASU,OAAOJ,IAAK,IAErBD,GAAY,EACThL,EAAW6K,IAAcA,EAAe7K,IAG7C,GAAGgL,EAAW,CACbR,EAASa,OAAON,IAAK,GACrB,IAAIO,EAAIV,SACET,IAANmB,IAAiBZ,EAASY,EAC/B,CACD,CACA,OAAOZ,CAnBP,CAJC1K,EAAWA,GAAY,EACvB,IAAI,IAAI+K,EAAIP,EAASre,OAAQ4e,EAAI,GAAKP,EAASO,EAAI,GAAG,GAAK/K,EAAU+K,IAAKP,EAASO,GAAKP,EAASO,EAAI,GACrGP,EAASO,GAAK,CAACJ,EAAUC,EAAI5K,EAqBjB,C,KCzBdgK,EAAoBuB,EAAKlB,IACxB,IAAImB,EAASnB,GAAUA,EAAOoB,WAC7B,IAAOpB,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoB0B,EAAEF,EAAQ,CAAEjR,EAAGiR,IAC5BA,CAAM,ECLdxB,EAAoB0B,EAAI,CAACtB,EAASuB,KACjC,IAAI,IAAIP,KAAOO,EACX3B,EAAoB4B,EAAED,EAAYP,KAASpB,EAAoB4B,EAAExB,EAASgB,IAC5EvR,OAAOgS,eAAezB,EAASgB,EAAK,CAAEU,YAAY,EAAMzS,IAAKsS,EAAWP,IAE1E,ECNDpB,EAAoB+B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOrQ,GACR,GAAsB,kBAAXvP,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB0d,EAAoB4B,EAAI,CAACO,EAAKC,IAAUvS,OAAOwS,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFpC,EAAoBsB,EAAKlB,IACH,qBAAXoC,QAA0BA,OAAOC,aAC1C5S,OAAOgS,eAAezB,EAASoC,OAAOC,YAAa,CAAEta,MAAO,WAE7D0H,OAAOgS,eAAezB,EAAS,aAAc,CAAEjY,OAAO,GAAO,ECL9D6X,EAAoB0C,EAAI,I,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaN3C,EAAoBS,EAAEQ,EAAK2B,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B7U,KACvD,IAGIgS,EAAU2C,GAHTjC,EAAUoC,EAAaC,GAAW/U,EAGhB8S,EAAI,EAC3B,GAAGJ,EAASsC,MAAM9T,GAAgC,IAAxBwT,EAAgBxT,KAAa,CACtD,IAAI8Q,KAAY8C,EACZ/C,EAAoB4B,EAAEmB,EAAa9C,KACrCD,EAAoBO,EAAEN,GAAY8C,EAAY9C,IAGhD,GAAG+C,EAAS,IAAItC,EAASsC,EAAQhD,EAClC,CAEA,IADG8C,GAA4BA,EAA2B7U,GACrD8S,EAAIJ,EAASxe,OAAQ4e,IACzB6B,EAAUjC,EAASI,GAChBf,EAAoB4B,EAAEe,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO5C,EAAoBS,EAAEC,EAAO,EAGjCwC,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBxS,QAAQmS,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBnT,KAAO8S,EAAqBO,KAAK,KAAMF,EAAmBnT,KAAKqT,KAAKF,G,KC7CvF,IAAIG,EAAsBrD,EAAoBS,OAAEN,EAAW,CAAC,MAAM,IAAOH,EAAoB,QAC7FqD,EAAsBrD,EAAoBS,EAAE4C,E","sources":["config/firebase.js","config/firebase-web.js","screens/LoginScreen.js","screens/ChatListScreen.js","screens/ChatScreen.js","screens/AccountScreen.js","screens/NewChatScreen.js","screens/UsersScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Platform } from 'react-native';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getDatabase, ref, set } from 'firebase/database';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",\r\n  authDomain: \"catty-message.firebaseapp.com\",\r\n  databaseURL: \"https://catty-message-default-rtdb.firebaseio.com\",\r\n  projectId: \"catty-message\",\r\n  storageBucket: \"catty-message.firebasestorage.app\",\r\n  messagingSenderId: \"762334512293\",\r\n  appId: \"1:762334512293:web:d3edbbb5de41c29c43f94c\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Get Auth instance\r\nconst auth = getAuth(app);\r\n\r\n// Get Database instance\r\nconst database = getDatabase(app);\r\n\r\n// Get Storage instance with CORS configuration\r\nconst storage = getStorage(app);\r\n\r\n// Configure CORS for web platform\r\nif (Platform.OS === 'web') {\r\n  // Import web-specific persistence\r\n  import('firebase/auth').then(({ setPersistence, browserLocalPersistence }) => {\r\n    setPersistence(auth, browserLocalPersistence)\r\n      .catch((error) => {\r\n        console.error('Error setting auth persistence:', error);\r\n      });\r\n  });\r\n}\r\n\r\n// Test database connection\r\nconst testConnection = async () => {\r\n  try {\r\n    const testRef = ref(database, 'test');\r\n    await set(testRef, { timestamp: new Date().toISOString() });\r\n    console.log('Database connection successful');\r\n  } catch (error) {\r\n    console.error('Database connection error:', error);\r\n  }\r\n};\r\n\r\n// Run test on initialization\r\ntestConnection();\r\n\r\nexport { auth, database, storage }; ","import { initializeApp, getApps } from 'firebase/app';\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getDatabase } from 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",\r\n    authDomain: \"catty-message.firebaseapp.com\",\r\n    databaseURL: \"https://catty-message-default-rtdb.firebaseio.com\",\r\n    projectId: \"catty-message\",\r\n    storageBucket: \"catty-message.firebasestorage.app\",\r\n    messagingSenderId: \"762334512293\",\r\n    appId: \"1:762334512293:web:d3edbbb5de41c29c43f94c\",\r\n    measurementId: \"G-F4YVW57WKW\"\r\n};\r\n\r\n// VAPID anahtarı - Firebase Console > Project Settings > Cloud Messaging > Web Push certificates\r\nconst VAPID_KEY = \"BGYiqKyl_5og4vKmlsCTDdWzrrppkdJ4mQNSQEtnStBPFab33zBDkw0yaCOcKkA4Hn3FlbScgkFvNd6NNR75_o8\";\r\n\r\nlet app;\r\nif (!getApps().length) {\r\n  app = initializeApp(firebaseConfig);\r\n} else {\r\n  app = getApps()[0];\r\n}\r\n\r\nexport const auth = getAuth(app);\r\nexport const database = getDatabase(app);\r\nlet messaging = null;\r\n\r\n// Tarayıcı desteğini kontrol et\r\nif (typeof window !== 'undefined' && 'serviceWorker' in navigator) {\r\n  messaging = getMessaging(app);\r\n}\r\n\r\n// Service worker'ı kaydet\r\nlet serviceWorkerRegistration = null;\r\nlet notificationPermissionRequested = false; // Bildirimin bir kez istenmesini sağlamak için\r\n\r\nif (typeof window !== 'undefined' && 'serviceWorker' in navigator) {\r\n  try {\r\n    window.addEventListener('load', async () => {\r\n      try {\r\n        serviceWorkerRegistration = await navigator.serviceWorker.register('/firebase-messaging-sw.js', {\r\n          scope: '/'\r\n        });\r\n        console.log('Service Worker başarıyla kaydedildi:', serviceWorkerRegistration.scope);\r\n        \r\n        // SW kaydından sonra otomatik olarak bildirim izni iste (eğer daha önce istenmemişse)\r\n        if (!notificationPermissionRequested) {\r\n          notificationPermissionRequested = true;\r\n          const token = await requestNotificationPermission();\r\n          if (token) {\r\n            console.log('FCM Token otomatik olarak alındı:', token);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Service Worker kaydı başarısız oldu:', error);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Service Worker hatası:', error);\r\n  }\r\n}\r\n\r\nexport const requestNotificationPermission = async () => {\r\n  try {\r\n    if (typeof window === 'undefined' || !('Notification' in window)) {\r\n      console.log('Bu tarayıcı bildirim desteği sunmuyor');\r\n      return null;\r\n    }\r\n\r\n    const permission = await Notification.requestPermission();\r\n    console.log('Bildirim izni durumu:', permission);\r\n    \r\n    if (permission === 'granted') {\r\n      if (!messaging) {\r\n        console.error('Messaging servisi başlatılamadı');\r\n        return null;\r\n      }\r\n      \r\n      try {\r\n        // Service worker kaydını yenile\r\n        if (!serviceWorkerRegistration) {\r\n          serviceWorkerRegistration = await navigator.serviceWorker.getRegistration('/firebase-messaging-sw.js');\r\n        }\r\n        \r\n        // Service worker'ı kullanarak token al\r\n        const tokenOptions = {\r\n          vapidKey: VAPID_KEY\r\n        };\r\n\r\n        // Eğer service worker kaydı varsa ekle\r\n        if (serviceWorkerRegistration) {\r\n          tokenOptions.serviceWorkerRegistration = serviceWorkerRegistration;\r\n        }\r\n\r\n        const token = await getToken(messaging, tokenOptions);\r\n        console.log('FCM Token alındı:', token);\r\n        \r\n        // Test bildirimini kaldırıyoruz\r\n        // Sadece kullanıcı istediğinde (ChatListScreen'deki bildirim butonuna tıkladığında) gösterelim\r\n        \r\n        return token;\r\n      } catch (tokenError) {\r\n        console.error('Token alma hatası:', tokenError);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Bildirim izni hatası:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    if (!messaging) {\r\n      console.error('Messaging servisi başlatılamadı, bildirimler çalışmayacak');\r\n      resolve(null);\r\n      return;\r\n    }\r\n    \r\n    onMessage(messaging, (payload) => {\r\n      console.log('Ön planda yeni mesaj alındı:', payload);\r\n      \r\n      // Bildirim göster (uygulama açıkken)\r\n      if (payload.notification) {\r\n        try {\r\n          // Özellikle mobil web için, bildirim verileri ve izni doğrula\r\n          if ('Notification' in window && Notification.permission === 'granted') {\r\n            new Notification(payload.notification.title, {\r\n              body: payload.notification.body,\r\n              icon: payload.notification.icon || '/favicon.ico',\r\n              tag: `message-${Date.now()}`,\r\n              renotify: true\r\n            });\r\n            console.log('Bildirim gösterildi');\r\n          }\r\n          \r\n          // Eğer AudioContext kullanılabilirse ses çal\r\n          if ('AudioContext' in window || 'webkitAudioContext' in window) {\r\n            const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n            const oscillator = audioCtx.createOscillator();\r\n            const gainNode = audioCtx.createGain();\r\n            \r\n            oscillator.type = 'sine';\r\n            oscillator.frequency.value = 800;\r\n            gainNode.gain.value = 0.1;\r\n            \r\n            oscillator.connect(gainNode);\r\n            gainNode.connect(audioCtx.destination);\r\n            \r\n            oscillator.start();\r\n            \r\n            setTimeout(() => {\r\n              oscillator.stop();\r\n            }, 200);\r\n          }\r\n        } catch (error) {\r\n          console.error('Bildirim gösterme hatası:', error);\r\n        }\r\n      }\r\n      \r\n      resolve(payload);\r\n    });\r\n  });\r\n\r\nexport { messaging }; ","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Alert,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { ref, set } from 'firebase/database';\r\nimport { auth, database } from '../config/firebase-web';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getErrorMessage = (error) => {\r\n    switch (error.code) {\r\n      case 'auth/invalid-email':\r\n        return 'Geçersiz e-posta adresi formatı.';\r\n      case 'auth/user-disabled':\r\n        return 'Bu hesap devre dışı bırakıldı.';\r\n      case 'auth/user-not-found':\r\n        return 'Bu e-posta ile kayıtlı hesap bulunamadı.';\r\n      case 'auth/wrong-password':\r\n        return 'Yanlış şifre.';\r\n      case 'auth/email-already-in-use':\r\n        return 'Bu e-posta adresi ile zaten bir hesap var.';\r\n      case 'auth/weak-password':\r\n        return 'Şifre en az 6 karakter olmalıdır.';\r\n      case 'auth/network-request-failed':\r\n        return 'Ağ hatası. Lütfen internet bağlantınızı kontrol edin.';\r\n      default:\r\n        return error.message;\r\n    }\r\n  };\r\n\r\n  const handleAuth = async () => {\r\n    if (!email || !password) {\r\n      Alert.alert('Hata', 'Lütfen tüm alanları doldurun.');\r\n      return;\r\n    }\r\n\r\n    if (!isLogin && !username) {\r\n      Alert.alert('Hata', 'Lütfen kullanıcı adı girin.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      if (isLogin) {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        console.log('Giriş başarılı:', userCredential.user.uid);\r\n      } else {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        \r\n        await set(ref(database, `users/${user.uid}`), {\r\n          email: email,\r\n          username: username,\r\n          createdAt: new Date().toISOString(),\r\n        });\r\n\r\n        console.log('Kayıt başarılı:', user.uid);\r\n      }\r\n    } catch (error) {\r\n      console.error('Kimlik doğrulama hatası:', error);\r\n      Alert.alert('Hata', getErrorMessage(error));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={styles.container}\r\n    >\r\n      <View style={styles.content}>\r\n        <Text style={styles.title}>\r\n          {isLogin ? 'Sign In' : 'Create Account'}\r\n        </Text>\r\n\r\n        <View style={styles.form}>\r\n          {!isLogin && (\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              onChangeText={setUsername}\r\n              autoCapitalize=\"none\"\r\n              editable={!loading}\r\n            />\r\n          )}\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            editable={!loading}\r\n          />\r\n          \r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry\r\n            editable={!loading}\r\n          />\r\n          \r\n          <TouchableOpacity \r\n            style={[styles.button, loading && styles.buttonDisabled]}\r\n            onPress={handleAuth}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <ActivityIndicator color=\"#fff\" />\r\n            ) : (\r\n              <Text style={styles.buttonText}>\r\n                {isLogin ? 'Sign In' : 'Create Account'}\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={styles.switchButton}\r\n            onPress={() => setIsLogin(!isLogin)}\r\n            disabled={loading}\r\n          >\r\n            <Text style={styles.switchButtonText}>\r\n              {isLogin ? 'Need an account? Sign Up' : 'Already have an account? Sign In'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#007AFF',\r\n    marginBottom: 32,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    maxWidth: 400,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    backgroundColor: '#F8F8F8',\r\n    borderWidth: 1,\r\n    borderColor: '#E5E7EB',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 16,\r\n    fontSize: 16,\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 16,\r\n    alignItems: 'center',\r\n  },\r\n  buttonDisabled: {\r\n    opacity: 0.7,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n  },\r\n  switchButton: {\r\n    width: '100%',\r\n  },\r\n  switchButtonText: {\r\n    color: '#6B7280',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default LoginScreen; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Image,\r\n  Platform,\r\n  Alert,\r\n} from 'react-native';\r\nimport { ref, get, query, orderByChild, limitToLast, onValue, off, update } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase-web';\r\nimport { requestNotificationPermission, onMessageListener } from '../config/firebase-web';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [unsubscribers, setUnsubscribers] = useState({});\r\n  const [notificationToken, setNotificationToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let chatUnsubscriber = null;\r\n    \r\n    // Kullanıcı FCM token'ını izlemek için\r\n    let messagingUnsubscriber = null;\r\n\r\n    const setupNotifications = async () => {\r\n      if (Platform.OS === 'web') {\r\n        try {\r\n          // Platform bilgisini tespit et\r\n          const isMobileWeb = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n            typeof navigator !== 'undefined' ? navigator.userAgent : ''\r\n          );\r\n          const platformInfo = isMobileWeb ? 'mobile-web' : 'web';\r\n          console.log(`Bildirim kurulumu başlatılıyor. Platform: ${platformInfo}, UA: ${navigator.userAgent.substring(0, 50)}...`);\r\n\r\n          // Bildirim izni iste ve token al\r\n          const token = await requestNotificationPermission();\r\n          if (token) {\r\n            setNotificationToken(token);\r\n            \r\n            // Token'ı kullanıcı verilerine kaydet\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n              // Platform bilgisini tespit et\r\n              const isMobileWeb = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n                typeof navigator !== 'undefined' ? navigator.userAgent : ''\r\n              );\r\n              const platformInfo = isMobileWeb ? 'mobile-web' : 'web';\r\n              \r\n              const userRef = ref(database, `users/${currentUser.uid}`);\r\n              await update(userRef, {\r\n                fcmToken: token,\r\n                platform: platformInfo,\r\n                lastTokenUpdate: new Date().toISOString(),\r\n                lastLoginAt: new Date().toISOString(),\r\n                userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown'\r\n              });\r\n              console.log(`Bildirim token kullanıcı profiline kaydedildi. Platform: ${platformInfo}`);\r\n            }\r\n          }\r\n\r\n          // Mesaj dinleyicisini başlat\r\n          console.log('Ön plan bildirim dinleyicisi başlatılıyor...');\r\n          onMessageListener()\r\n            .then(payload => {\r\n              // Yeni mesaj geldiğinde işle\r\n              if (payload) {\r\n                const { title, body } = payload.notification || {};\r\n                console.log('Web Push bildirimi alındı:', { title, body });\r\n                \r\n                // Mesaj ses efekti oynat\r\n                try {\r\n                  // Basit bir bip sesi çal\r\n                  const beep = () => {\r\n                    if ('AudioContext' in window || 'webkitAudioContext' in window) {\r\n                      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n                      const oscillator = audioCtx.createOscillator();\r\n                      const gainNode = audioCtx.createGain();\r\n                      \r\n                      oscillator.type = 'sine';\r\n                      oscillator.frequency.value = 800;\r\n                      gainNode.gain.value = 0.1;\r\n                      \r\n                      oscillator.connect(gainNode);\r\n                      gainNode.connect(audioCtx.destination);\r\n                      \r\n                      oscillator.start();\r\n                      \r\n                      setTimeout(() => {\r\n                        oscillator.stop();\r\n                      }, 200);\r\n                    }\r\n                  };\r\n                  \r\n                  beep();\r\n                  \r\n                  // Özellikle Chrome Mobile için doğrudan bildirim göster\r\n                  if (isMobileWeb && 'Notification' in window && Notification.permission === 'granted') {\r\n                    setTimeout(() => {\r\n                      new Notification(title || 'Yeni mesaj', {\r\n                        body: body || 'Yeni bir mesaj aldınız',\r\n                        icon: '/favicon.ico',\r\n                        tag: `direct-message-${Date.now()}`,\r\n                        renotify: true\r\n                      });\r\n                    }, 100);\r\n                  }\r\n                } catch (soundError) {\r\n                  console.error('Bildirim sesi çalınamadı:', soundError);\r\n                }\r\n                \r\n                // Sohbetleri yeniden yükle\r\n                loadChats();\r\n              }\r\n            })\r\n            .catch(err => console.error('Bildirim alınamadı:', err));\r\n            \r\n          // Service worker olaylarını dinle\r\n          if ('serviceWorker' in navigator) {\r\n            console.log('Service worker olay dinleyicisi ekleniyor');\r\n            \r\n            // Önceki dinleyicileri temizle (varsa)\r\n            navigator.serviceWorker.onmessage = null;\r\n            \r\n            // Yeni dinleyici ekle\r\n            navigator.serviceWorker.onmessage = (event) => {\r\n              console.log('Service worker mesajı alındı:', event.data);\r\n              if (event.data && (event.data.type === 'NOTIFICATION_RECEIVED' || event.data.type === 'NOTIFICATION_CLICKED')) {\r\n                // Sohbetleri yeniden yükle\r\n                loadChats();\r\n              }\r\n            };\r\n            \r\n            // Kayıtlı service worker'a ulaşma girişimi\r\n            navigator.serviceWorker.ready.then(registration => {\r\n              console.log('Service worker hazır:', registration.scope);\r\n            }).catch(err => {\r\n              console.error('Service worker erişim hatası:', err);\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Bildirim kurulumu hatası:', error);\r\n        }\r\n      } else {\r\n        // Mobil platformlar için burada FCM yapılandırması ve token kaydı yapılabilir\r\n        console.log('Mobil platform için bildirim kurulumu yapılacak');\r\n      }\r\n    };\r\n\r\n    const loadChats = async () => {\r\n      try {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n          navigation.replace('Login');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const chatsRef = ref(database, 'privateChats');\r\n        \r\n        chatUnsubscriber = onValue(chatsRef, async (snapshot) => {\r\n          if (!isMounted) return;\r\n\r\n          try {\r\n            if (!snapshot.exists()) {\r\n              setChats([]);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n\r\n            const chatsData = snapshot.val();\r\n            const newChats = [];\r\n            const newUnsubscribers = {};\r\n            \r\n            for (const chatId in chatsData) {\r\n              if (chatId.includes(currentUser.uid)) {\r\n                try {\r\n                  const otherUserId = chatId.split('_').find(id => id !== currentUser.uid);\r\n                  const userRef = ref(database, `users/${otherUserId}`);\r\n                  const userSnapshot = await get(userRef);\r\n                  \r\n                  if (userSnapshot.exists()) {\r\n                    const otherUser = {\r\n                      uid: otherUserId,\r\n                      ...userSnapshot.val()\r\n                    };\r\n                    \r\n                    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n                    const messagesSnapshot = await get(query(messagesRef, limitToLast(1)));\r\n                    \r\n                    if (messagesSnapshot.exists()) {\r\n                      const messages = messagesSnapshot.val();\r\n                      const lastMessage = Object.values(messages)[0];\r\n                      \r\n                      newChats.push({\r\n                        chatId,\r\n                        otherUserId: otherUser.uid,\r\n                        otherUserEmail: otherUser.email,\r\n                        otherUserProfileImage: otherUser.profileImage,\r\n                        lastMessage: lastMessage.text,\r\n                        timestamp: lastMessage.timestamp,\r\n                        isCurrentUser: lastMessage.senderId === currentUser.uid\r\n                      });\r\n                    }\r\n                  }\r\n                } catch (error) {\r\n                  console.error('Sohbet işleme hatası:', error);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (isMounted) {\r\n              setChats(newChats.sort((a, b) => b.timestamp - a.timestamp));\r\n              setUnsubscribers(newUnsubscribers);\r\n            }\r\n          } catch (error) {\r\n            console.error('Sohbet listener hatası:', error);\r\n          } finally {\r\n            if (isMounted) {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Başlangıç kurulum hatası:', error);\r\n        if (isMounted) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Önce loadChats çağrılsın, sonra setupNotifications\r\n    loadChats().then(() => {\r\n      if (Platform.OS === 'web') {\r\n        setupNotifications();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (chatUnsubscriber) {\r\n        chatUnsubscriber();\r\n      }\r\n      if (messagingUnsubscriber) {\r\n        messagingUnsubscriber();\r\n      }\r\n      Object.values(unsubscribers).forEach(unsubscribe => unsubscribe());\r\n    };\r\n  }, [navigation]);\r\n\r\n  const handleChatPress = useCallback((chat) => {\r\n    navigation.navigate('Chat', {\r\n      currentUserId: auth.currentUser.uid,\r\n      otherUserId: chat.otherUserId,\r\n      chatId: chat.chatId,\r\n      otherUserEmail: chat.otherUserEmail\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleNewChat = useCallback(() => {\r\n    navigation.navigate('Users');\r\n  }, [navigation]);\r\n  \r\n  // Bildirim izni istemek için ayrı bir işlev\r\n  const handleRequestNotification = useCallback(async () => {\r\n    if (Platform.OS !== 'web') {\r\n      Alert.alert('Bilgi', 'Bildirim izni istemek sadece web platformunda gereklidir');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('Bildirim izni isteniyor...');\r\n      const token = await requestNotificationPermission();\r\n      if (token) {\r\n        setNotificationToken(token);\r\n        \r\n        // Test bildirimi göster\r\n        try {\r\n          new Notification('Bildirimler Etkin', {\r\n            body: 'Artık Catty Message bildirimleri alacaksınız',\r\n            icon: '/favicon.ico'\r\n          });\r\n        } catch (notifError) {\r\n          console.error('Test bildirimi gösterme hatası:', notifError);\r\n        }\r\n        \r\n        Alert.alert('Başarılı', 'Bildirim izni verildi. Artık mesaj bildirimleri alacaksınız.');\r\n        \r\n        // Token'ı kullanıcı verilerine kaydet\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n          // Platform bilgisini tespit et\r\n          const isMobileWeb = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n            typeof navigator !== 'undefined' ? navigator.userAgent : ''\r\n          );\r\n          const platformInfo = isMobileWeb ? 'mobile-web' : 'web';\r\n          \r\n          const userRef = ref(database, `users/${currentUser.uid}`);\r\n          await update(userRef, {\r\n            fcmToken: token,\r\n            platform: platformInfo,\r\n            lastTokenUpdate: new Date().toISOString(),\r\n            userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown'\r\n          });\r\n          console.log(`Bildirim token kullanıcı profiline kaydedildi. Platform: ${platformInfo}`);\r\n        }\r\n      } else {\r\n        Alert.alert('Bildirim İzni', 'Bildirim izni verilmedi. Mesaj bildirimleri almak için izin vermeniz gerekiyor.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Bildirim izni hatası:', error);\r\n      Alert.alert('Hata', 'Bildirim izni istenirken bir hata oluştu.');\r\n    }\r\n  }, []);\r\n\r\n  const renderChatItem = useCallback(({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.chatItem}\r\n      onPress={() => handleChatPress(item)}\r\n    >\r\n      <View style={styles.avatarContainer}>\r\n        {item.otherUserProfileImage ? (\r\n          <Image\r\n            source={{ uri: item.otherUserProfileImage }}\r\n            style={styles.avatar}\r\n            onError={(e) => console.log('Resim yükleme hatası:', e.nativeEvent.error)}\r\n          />\r\n        ) : (\r\n          <View style={[styles.avatar, styles.placeholderAvatar]}>\r\n            <Text style={styles.placeholderText}>\r\n              {item.otherUserEmail?.charAt(0)?.toUpperCase() || '?'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={styles.chatInfo}>\r\n        <Text style={styles.userEmail}>{item.otherUserEmail}</Text>\r\n        <Text style={styles.lastMessage} numberOfLines={1}>\r\n          {item.isCurrentUser ? 'Siz: ' : ''}{item.lastMessage}\r\n        </Text>\r\n      </View>\r\n      <Text style={styles.timestamp}>\r\n        {new Date(item.timestamp).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  ), [handleChatPress]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text style={styles.loadingText}>Sohbetler yükleniyor...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Sohbetler</Text>\r\n        <View style={styles.headerButtons}>\r\n          {Platform.OS === 'web' && !notificationToken && (\r\n            <TouchableOpacity \r\n              style={styles.notificationButton} \r\n              onPress={handleRequestNotification}\r\n            >\r\n              <Text style={styles.notificationButtonText}>Bildirimleri Aç</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          <TouchableOpacity \r\n            style={styles.newChatButton} \r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.newChatButtonText}>Yeni Sohbet</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      {chats.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>Henüz mesajınız yok</Text>\r\n          <TouchableOpacity \r\n            style={styles.startChatButton}\r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.startChatButtonText}>Yeni Sohbet Başlat</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={renderChatItem}\r\n          keyExtractor={(item) => item.chatId}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  headerButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  newChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n  },\r\n  newChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  notificationButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n    marginRight: 8,\r\n  },\r\n  notificationButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  chatItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    marginBottom: 8,\r\n  },\r\n  avatarContainer: {\r\n    marginRight: 12,\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  placeholderAvatar: {\r\n    backgroundColor: '#e5e7eb',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  placeholderText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#9ca3af',\r\n  },\r\n  chatInfo: {\r\n    flex: 1,\r\n    marginRight: 12,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  lastMessage: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    color: '#9ca3af',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  emptyText: {\r\n    fontSize: 18,\r\n    color: '#6b7280',\r\n    marginBottom: 16,\r\n  },\r\n  startChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 24,\r\n    paddingVertical: 12,\r\n    borderRadius: 24,\r\n  },\r\n  startChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n  }\r\n});\r\n\r\nexport default ChatListScreen; ","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Animated,\r\n  Alert,\r\n} from 'react-native';\r\nimport { ref, push, onValue, off, set, get } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase-web';\r\n\r\nconst ChatScreen = ({ route }) => {\r\n  const { currentUserId, otherUserId, chatId, otherUserEmail } = route.params;\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const flatListRef = useRef(null);\r\n  const inputHeight = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n    \r\n    const handleData = (snapshot) => {\r\n      const data = snapshot.val();\r\n      \r\n      if (data) {\r\n        const messagesArray = Object.entries(data).map(([id, message]) => ({\r\n          id,\r\n          ...message,\r\n        }));\r\n        setMessages(messagesArray);\r\n        setTimeout(() => {\r\n          flatListRef.current?.scrollToEnd({ animated: true });\r\n        }, 100);\r\n      } else {\r\n        setMessages([]);\r\n      }\r\n    };\r\n\r\n    onValue(messagesRef, handleData);\r\n\r\n    return () => {\r\n      off(messagesRef);\r\n    };\r\n  }, [chatId]);\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n      const newMessageRef = push(messagesRef);\r\n      \r\n      const messageData = {\r\n        senderId: currentUserId,\r\n        text: newMessage,\r\n        timestamp: Date.now()\r\n      };\r\n      \r\n      // Animasyonu başlat\r\n      Animated.sequence([\r\n        Animated.timing(inputHeight, {\r\n          toValue: 1,\r\n          duration: 200,\r\n          useNativeDriver: false,\r\n        }),\r\n        Animated.timing(inputHeight, {\r\n          toValue: 0,\r\n          duration: 200,\r\n          useNativeDriver: false,\r\n        })\r\n      ]).start();\r\n      \r\n      set(newMessageRef, messageData)\r\n        .then(() => {\r\n          setNewMessage('');\r\n          setTimeout(() => {\r\n            flatListRef.current?.scrollToEnd({ animated: true });\r\n          }, 100);\r\n          \r\n          // Bildirim gönder\r\n          sendNotificationToReceiver(otherUserId, messageData);\r\n        })\r\n        .catch((error) => {\r\n          Alert.alert('Hata', 'Mesaj gönderilirken bir hata oluştu.');\r\n        });\r\n    }\r\n  };\r\n\r\n  // Alıcıya bildirim gönder\r\n  const sendNotificationToReceiver = async (receiverId, messageData) => {\r\n    try {\r\n      // Alıcının FCM token'ını al\r\n      const userRef = ref(database, `users/${receiverId}`);\r\n      const userSnapshot = await get(userRef);\r\n      \r\n      if (userSnapshot.exists()) {\r\n        const userData = userSnapshot.val();\r\n        const fcmToken = userData.fcmToken;\r\n\r\n        // Gönderen kullanıcı bilgilerini al\r\n        const currentUser = auth.currentUser;\r\n        const senderEmail = currentUser.email;\r\n        \r\n        // ÖNEMLİ: Eğer alıcı ID'si gönderen ID ile aynıysa bildirim gönderme\r\n        // Bu, kullanıcının kendi mesajı için bildirim almasını engeller\r\n        if (receiverId === currentUserId) {\r\n          console.log('Kendi mesajını gönderen kullanıcıya bildirim gönderilmiyor');\r\n          return;\r\n        }\r\n        \r\n        console.log(`Alıcı bilgileri: ${receiverId}, FCM Token: ${fcmToken?.substring(0, 15)}... Platform: ${userData.platform || 'bilinmiyor'}`);\r\n        \r\n        // Kullanıcının FCM token'ı varsa\r\n        if (fcmToken) {\r\n          // FCM bildirimini hazırla\r\n          console.log(`${Platform.OS} platformundan bildirim gönderiliyor`);\r\n          \r\n          // FCM'ye gönderilecek veri - Mobil için de çalışacak şekilde ayarla\r\n          const notificationData = {\r\n            to: fcmToken,\r\n            notification: {\r\n              title: `Yeni mesaj: ${senderEmail}`,\r\n              body: messageData.text,\r\n              icon: '/favicon.ico',\r\n              badge: '/badge.png',\r\n              tag: `message-${Date.now()}`,\r\n              sound: 'default'\r\n            },\r\n            data: {\r\n              type: 'NEW_MESSAGE',\r\n              chatId: chatId,\r\n              senderId: currentUserId,\r\n              senderEmail: senderEmail,\r\n              otherUserId: otherUserId,\r\n              otherUserEmail: otherUserEmail,\r\n              messageText: messageData.text,\r\n              timestamp: messageData.timestamp,\r\n              url: typeof window !== 'undefined' ? window.location.origin : ''\r\n            },\r\n            priority: 'high',\r\n            content_available: true\r\n          };\r\n          \r\n          // Mobile Chrome için FCM bildirimlerini iyileştiren ayarlar\r\n          if (userData.platform === 'mobile-web' || userData.userAgent?.includes('Mobile')) {\r\n            // Mobile tarayıcılara özel ek ayarlar\r\n            notificationData.webpush = {\r\n              headers: {\r\n                TTL: '86400',\r\n                Urgency: 'high'\r\n              },\r\n              notification: {\r\n                requireInteraction: true,\r\n                vibrate: [200, 100, 200]\r\n              },\r\n              fcm_options: {\r\n                link: typeof window !== 'undefined' ? window.location.origin : ''\r\n              }\r\n            };\r\n          }\r\n          \r\n          // FCM API'sine doğrudan istek gönder (hangi platformdan olursa olsun)\r\n          const serverKey = 'AAAAsZ-Vz2w:APA91bG_zBWyqJZMbpZqZ8O00Tk8RR3-5CxjFEWQNZAKpQ6KcBnVVKhvxUMmrNtFLQzdpfXHTLbCnx4eHbHn5P2qpujmuxJUzf54ByQ-vQrDcTxhHJAHZFqVMH47fFxIvS0fzUoDPFGo';\r\n          \r\n          // FCM API'sine POST isteği gönder - Tüm platformlarda çalışacak\r\n          // Global fetch kullan, her platform için aynı şekilde çalışacak\r\n          global.fetch('https://fcm.googleapis.com/fcm/send', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `key=${serverKey}`\r\n            },\r\n            body: JSON.stringify(notificationData)\r\n          })\r\n          .then(response => {\r\n            console.log(`FCM API yanıtı status: ${response.status}`);\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP hata, durum: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            console.log('Bildirim başarıyla gönderildi:', data);\r\n            \r\n            // Web platformu için ek kontrol - özellikle Chrome Mobile için fallback çözüm\r\n            if (Platform.OS === 'web' && typeof window !== 'undefined' && \r\n                'Notification' in window && Notification.permission === 'granted' &&\r\n                (userData.platform === 'mobile-web' || userData.userAgent?.includes('Mobile'))) {\r\n              \r\n              setTimeout(() => {\r\n                try {\r\n                  // Bildirim göstermeden önce bir süre bekle - mobil chrome için daha güvenilir\r\n                  new Notification(`Yeni mesaj: ${senderEmail}`, {\r\n                    body: messageData.text,\r\n                    icon: '/favicon.ico',\r\n                    tag: `direct-message-${Date.now()}`,\r\n                    renotify: true,\r\n                    vibrate: [200, 100, 200],\r\n                    requireInteraction: true\r\n                  });\r\n                  console.log('Mobil web için ek bildirim gösterildi');\r\n                } catch (notifError) {\r\n                  console.error('Browser bildirimi gösterme hatası:', notifError);\r\n                }\r\n              }, 300);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('FCM bildirim hatası:', error);\r\n            \r\n            // Sadece Web platformu için yedek bildirim\r\n            if (Platform.OS === 'web' && typeof window !== 'undefined' && \r\n                'Notification' in window && Notification.permission === 'granted') {\r\n              try {\r\n                new Notification(`Yeni mesaj: ${senderEmail}`, {\r\n                  body: messageData.text,\r\n                  icon: '/favicon.ico',\r\n                  tag: `direct-message-fallback-${Date.now()}`,\r\n                  renotify: true,\r\n                  vibrate: [200, 100, 200]\r\n                });\r\n                console.log('FCM hatası - Doğrudan tarayıcı bildirimi gönderildi');\r\n              } catch (notifError) {\r\n                console.error('Yedek bildirim hatası:', notifError);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          console.log(`Alıcının (${receiverId}) FCM token'ı bulunmuyor`);\r\n        }\r\n      } else {\r\n        console.log(`Alıcı kullanıcı bulunamadı: ${receiverId}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Bildirim gönderme hatası:', error);\r\n    }\r\n  };\r\n\r\n  const renderMessage = ({ item }) => {\r\n    const isCurrentUser = item.senderId === currentUserId;\r\n    return (\r\n      <Animated.View\r\n        style={[\r\n          styles.messageContainer,\r\n          isCurrentUser ? styles.currentUserMessage : styles.otherUserMessage,\r\n          {\r\n            transform: [{\r\n              translateY: inputHeight.interpolate({\r\n                inputRange: [0, 1],\r\n                outputRange: [0, -10]\r\n              })\r\n            }]\r\n          }\r\n        ]}\r\n      >\r\n        <Text style={styles.senderName}>\r\n          {isCurrentUser ? 'Siz' : otherUserEmail}\r\n        </Text>\r\n        <Text style={[\r\n          styles.messageText,\r\n          isCurrentUser ? styles.currentUserText : styles.otherUserText\r\n        ]}>\r\n          {item.text}\r\n        </Text>\r\n        <Text style={[\r\n          styles.timestamp,\r\n          isCurrentUser ? styles.currentUserTimestamp : styles.otherUserTimestamp\r\n        ]}>\r\n          {new Date(item.timestamp).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n        </Text>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>\r\n          {otherUserEmail} ile Sohbet\r\n        </Text>\r\n      </View>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={messages}\r\n        renderItem={renderMessage}\r\n        keyExtractor={(item) => item.id}\r\n        style={styles.messageList}\r\n        contentContainerStyle={styles.messageListContent}\r\n        inverted={false}\r\n        onContentSizeChange={() => flatListRef.current?.scrollToEnd({ animated: true })}\r\n        onLayout={() => flatListRef.current?.scrollToEnd({ animated: true })}\r\n      />\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.inputContainer}\r\n      >\r\n        <TextInput\r\n          style={styles.input}\r\n          value={newMessage}\r\n          onChangeText={setNewMessage}\r\n          placeholder=\"Mesaj yazın...\"\r\n          multiline\r\n        />\r\n        <TouchableOpacity \r\n          style={styles.sendButton}\r\n          onPress={sendMessage}\r\n        >\r\n          <Text style={styles.sendButtonText}>Gönder</Text>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e5e5',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  messageList: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  messageListContent: {\r\n    flexGrow: 1,\r\n  },\r\n  messageContainer: {\r\n    maxWidth: '80%',\r\n    marginVertical: 8,\r\n    padding: 12,\r\n    borderRadius: 16,\r\n  },\r\n  currentUserMessage: {\r\n    alignSelf: 'flex-end',\r\n    backgroundColor: '#007AFF',\r\n  },\r\n  otherUserMessage: {\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: '#f3f4f6',\r\n  },\r\n  senderName: {\r\n    fontSize: 12,\r\n    color: '#6b7280',\r\n    marginBottom: 4,\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n  currentUserText: {\r\n    color: '#fff',\r\n  },\r\n  otherUserText: {\r\n    color: '#000',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    alignSelf: 'flex-end',\r\n    marginTop: 4,\r\n  },\r\n  currentUserTimestamp: {\r\n    color: 'rgba(255, 255, 255, 0.8)',\r\n  },\r\n  otherUserTimestamp: {\r\n    color: '#6b7280',\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    padding: 16,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#e5e5e5',\r\n    backgroundColor: '#fff',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: '#d1d5db',\r\n    borderRadius: 24,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    marginRight: 8,\r\n    maxHeight: 100,\r\n    backgroundColor: '#fff',\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 24,\r\n    paddingHorizontal: 24,\r\n    paddingVertical: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sendButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default ChatScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Image,\r\n  Modal,\r\n} from 'react-native';\r\nimport { getAuth, updatePassword, signOut } from 'firebase/auth';\r\nimport { getDatabase, ref, get, set } from 'firebase/database';\r\nimport { database } from '../config/firebase-web';\r\n\r\nconst AccountScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [profileImage, setProfileImage] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const currentUser = auth.currentUser;\r\n    \r\n    if (!currentUser) {\r\n      navigation.navigate('Login');\r\n      return;\r\n    }\r\n\r\n    const userRef = ref(database, `users/${currentUser.uid}`);\r\n    get(userRef).then((snapshot) => {\r\n      if (snapshot.exists()) {\r\n        setUsername(snapshot.val().username || '');\r\n        setProfileImage(snapshot.val().profileImage);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      setUpdating(true);\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      if (newPassword && confirmPassword) {\r\n        if (newPassword !== confirmPassword) {\r\n          Alert.alert('Hata', 'Şifreler eşleşmiyor');\r\n          return;\r\n        }\r\n        if (newPassword.length < 6) {\r\n          Alert.alert('Hata', 'Şifre en az 6 karakter olmalıdır');\r\n          return;\r\n        }\r\n        await updatePassword(currentUser, newPassword);\r\n      }\r\n\r\n      const userRef = ref(database, `users/${currentUser.uid}`);\r\n      await set(userRef, {\r\n        email: currentUser.email,\r\n        username: username,\r\n        profileImage: profileImage,\r\n      });\r\n\r\n      Alert.alert('Başarılı', 'Profil güncellendi');\r\n      setNewPassword('');\r\n      setConfirmPassword('');\r\n    } catch (error) {\r\n      Alert.alert('Hata', error.message);\r\n    } finally {\r\n      setUpdating(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const auth = getAuth();\r\n      await signOut(auth);\r\n      navigation.navigate('Login');\r\n    } catch (error) {\r\n      Alert.alert('Hata', error.message);\r\n    }\r\n  };\r\n\r\n  const handleProfileImageUpdate = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleSaveImageUrl = async () => {\r\n    if (!imageUrl) {\r\n      Alert.alert('Hata', 'Geçerli bir URL girmelisiniz');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // URL'in geçerli olup olmadığını kontrol et\r\n      const response = await fetch(imageUrl);\r\n      if (!response.ok || !response.headers.get('content-type')?.includes('image')) {\r\n        throw new Error('Geçersiz resim URL\\'i');\r\n      }\r\n\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      const userRef = ref(database, `users/${currentUser.uid}`);\r\n      await set(userRef, {\r\n        email: currentUser.email,\r\n        username: username,\r\n        profileImage: imageUrl,\r\n      });\r\n\r\n      setProfileImage(imageUrl);\r\n      setModalVisible(false);\r\n      setImageUrl('');\r\n      Alert.alert('Başarılı', 'Profil fotoğrafı güncellendi');\r\n    } catch (error) {\r\n      Alert.alert('Hata', 'Geçersiz resim URL\\'i. Lütfen başka bir URL deneyin.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Profil Fotoğrafı URL</Text>\r\n            <TextInput\r\n              style={styles.modalInput}\r\n              value={imageUrl}\r\n              onChangeText={setImageUrl}\r\n              placeholder=\"Resim URL'ini girin\"\r\n              placeholderTextColor=\"#9ca3af\"\r\n            />\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, styles.cancelButton]}\r\n                onPress={() => {\r\n                  setModalVisible(false);\r\n                  setImageUrl('');\r\n                }}\r\n              >\r\n                <Text style={styles.modalButtonText}>İptal</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, styles.saveButton]}\r\n                onPress={handleSaveImageUrl}\r\n              >\r\n                <Text style={styles.modalButtonText}>Kaydet</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <View style={styles.content}>\r\n        <Text style={styles.title}>Hesap Ayarları</Text>\r\n        \r\n        <View style={styles.profileSection}>\r\n          <TouchableOpacity \r\n            style={styles.imageContainer} \r\n            onPress={handleProfileImageUpdate}\r\n          >\r\n            {profileImage ? (\r\n              <Image\r\n                source={{ uri: profileImage }}\r\n                style={styles.profileImage}\r\n                onError={() => {\r\n                  Alert.alert('Hata', 'Fotoğraf yüklenirken bir hata oluştu.');\r\n                  setProfileImage(null);\r\n                }}\r\n              />\r\n            ) : (\r\n              <View style={styles.placeholderImage}>\r\n                <Text style={styles.placeholderText}>\r\n                  {username?.charAt(0)?.toUpperCase() || '?'}\r\n                </Text>\r\n              </View>\r\n            )}\r\n            <View style={styles.editBadge}>\r\n              <Text style={styles.editBadgeText}>Düzenle</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.email}>{username}</Text>\r\n        </View>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <Text style={styles.label}>Kullanıcı Adı</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={username}\r\n            onChangeText={setUsername}\r\n            placeholder=\"Kullanıcı adınızı girin\"\r\n            placeholderTextColor=\"#9ca3af\"\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <Text style={styles.label}>Yeni Şifre</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={newPassword}\r\n            onChangeText={setNewPassword}\r\n            placeholder=\"Yeni şifrenizi girin\"\r\n            placeholderTextColor=\"#9ca3af\"\r\n            secureTextEntry\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <Text style={styles.label}>Şifre Tekrar</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            value={confirmPassword}\r\n            onChangeText={setConfirmPassword}\r\n            placeholder=\"Şifrenizi tekrar girin\"\r\n            placeholderTextColor=\"#9ca3af\"\r\n            secureTextEntry\r\n          />\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.updateButton]}\r\n          onPress={handleUpdateProfile}\r\n          disabled={updating}\r\n        >\r\n          {updating ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Text style={styles.buttonText}>Profili Güncelle</Text>\r\n          )}\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.logoutButton]}\r\n          onPress={handleLogout}\r\n        >\r\n          <Text style={styles.buttonText}>Çıkış Yap</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n    marginBottom: 24,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 16,\r\n  },\r\n  label: {\r\n    fontSize: 14,\r\n    color: '#4b5563',\r\n    marginBottom: 8,\r\n  },\r\n  input: {\r\n    backgroundColor: '#f9fafb',\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    fontSize: 16,\r\n    color: '#1f2937',\r\n  },\r\n  button: {\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  updateButton: {\r\n    backgroundColor: '#007AFF',\r\n  },\r\n  logoutButton: {\r\n    backgroundColor: '#ef4444',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  profileSection: {\r\n    alignItems: 'center',\r\n    marginVertical: 32,\r\n  },\r\n  imageContainer: {\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 75,\r\n    marginBottom: 16,\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f3f4f6',\r\n  },\r\n  profileImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 75,\r\n  },\r\n  placeholderImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 75,\r\n    backgroundColor: '#e5e7eb',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  placeholderText: {\r\n    fontSize: 48,\r\n    fontWeight: 'bold',\r\n    color: '#9ca3af',\r\n  },\r\n  editBadge: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 16,\r\n  },\r\n  editBadgeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n  },\r\n  email: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 20,\r\n    width: '90%',\r\n    maxWidth: 400,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#1f2937',\r\n  },\r\n  modalInput: {\r\n    backgroundColor: '#f9fafb',\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    fontSize: 16,\r\n    color: '#1f2937',\r\n    marginBottom: 15,\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  modalButton: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 8,\r\n    marginLeft: 10,\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: '#ef4444',\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#007AFF',\r\n  },\r\n  modalButtonText: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default AccountScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Alert,\r\n} from 'react-native';\r\nimport { getDatabase, ref, onValue, push, set, get } from 'firebase/database';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { database } from '../config/firebase-web';\r\n\r\nconst NewChatScreen = ({ navigation }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const currentUser = auth.currentUser;\r\n    \r\n    if (!currentUser) {\r\n      navigation.navigate('Login');\r\n      return;\r\n    }\r\n\r\n    const usersRef = ref(database, 'users');\r\n    const unsubscribe = onValue(usersRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        const userList = Object.entries(data)\r\n          .filter(([uid]) => uid !== currentUser.uid)\r\n          .map(([uid, user]) => ({\r\n            uid,\r\n            ...user,\r\n          }));\r\n        setUsers(userList);\r\n      } else {\r\n        setUsers([]);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  const filteredUsers = users.filter(user => \r\n    user.email && \r\n    user.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const startNewChat = async (otherUser) => {\r\n    try {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n      \r\n      // Önce bu iki kullanıcı arasında bir sohbet var mı kontrol et\r\n      const existingChatsRef = ref(database, 'privateChats');\r\n      const existingChatsSnapshot = await get(existingChatsRef);\r\n      \r\n      if (existingChatsSnapshot.exists()) {\r\n        const existingChats = existingChatsSnapshot.val();\r\n        const existingChat = Object.entries(existingChats).find(([chatId]) => {\r\n          return chatId.includes(currentUser.uid) && chatId.includes(otherUser.uid);\r\n        });\r\n\r\n        if (existingChat) {\r\n          // Eğer sohbet zaten varsa, o sohbete yönlendir\r\n          navigation.navigate('Chat', {\r\n            currentUserId: currentUser.uid,\r\n            otherUserId: otherUser.uid,\r\n            chatId: existingChat[0],\r\n            otherUserEmail: otherUser.email\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Yeni sohbet oluştur\r\n      const chatId = `${currentUser.uid}_${otherUser.uid}`;\r\n      const chatRef = ref(database, `privateChats/${chatId}`);\r\n      \r\n      const chatData = {\r\n        participants: {\r\n          [currentUser.uid]: currentUser.email,\r\n          [otherUser.uid]: otherUser.email\r\n        },\r\n        lastMessage: '',\r\n        lastMessageTime: new Date().toISOString(),\r\n        deletedBy: {\r\n          [currentUser.uid]: false,\r\n          [otherUser.uid]: false\r\n        }\r\n      };\r\n      \r\n      await set(chatRef, chatData);\r\n      \r\n      navigation.navigate('Chat', {\r\n        currentUserId: currentUser.uid,\r\n        otherUserId: otherUser.uid,\r\n        chatId: chatId,\r\n        otherUserEmail: otherUser.email\r\n      });\r\n    } catch (error) {\r\n      console.error('Yeni sohbet başlatma hatası:', error);\r\n      Alert.alert('Hata', 'Yeni sohbet başlatılırken bir hata oluştu');\r\n    }\r\n  };\r\n\r\n  const renderUserItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.userItem}\r\n      onPress={() => startNewChat(item)}\r\n    >\r\n      <View style={styles.userInfo}>\r\n        <Text style={styles.userEmail}>{item.email}</Text>\r\n        {item.username && (\r\n          <Text style={styles.username}>{item.username}</Text>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Kullanıcı Ara...\"\r\n          placeholderTextColor=\"#9ca3af\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n        />\r\n      </View>\r\n      \r\n      <FlatList\r\n        data={filteredUsers}\r\n        renderItem={renderUserItem}\r\n        keyExtractor={item => item.uid}\r\n        contentContainerStyle={styles.listContainer}\r\n        ListEmptyComponent={\r\n          <View style={styles.emptyContainer}>\r\n            <Text style={styles.emptyText}>\r\n              {searchQuery ? 'Sonuç bulunamadı' : 'Kullanıcı bulunamadı'}\r\n            </Text>\r\n          </View>\r\n        }\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  searchContainer: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n    backgroundColor: '#fff',\r\n  },\r\n  searchInput: {\r\n    backgroundColor: '#f9fafb',\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    fontSize: 16,\r\n    color: '#1f2937',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  userItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n  },\r\n  userInfo: {\r\n    flex: 1,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  username: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#6b7280',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default NewChatScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Alert,\r\n} from 'react-native';\r\nimport { ref, get } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase-web';\r\n\r\nconst UsersScreen = ({ navigation, route }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n          throw new Error('Kullanıcı girişi bulunamadı');\r\n        }\r\n\r\n        const usersRef = ref(database, 'users');\r\n        const snapshot = await get(usersRef);\r\n        \r\n        if (!snapshot.exists()) {\r\n          setUsers([]);\r\n          return;\r\n        }\r\n\r\n        const usersData = snapshot.val();\r\n        const usersArray = Object.entries(usersData)\r\n          .map(([uid, userData]) => ({\r\n            uid,\r\n            ...userData,\r\n          }))\r\n          .filter(user => user.uid !== currentUser.uid);\r\n\r\n        setUsers(usersArray);\r\n      } catch (error) {\r\n        console.error('Kullanıcılar yüklenirken hata:', error);\r\n        setError(error.message);\r\n        Alert.alert('Hata', 'Kullanıcılar yüklenemedi. Lütfen tekrar deneyin.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleUserPress = (user) => {\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) {\r\n      Alert.alert('Hata', 'Kullanıcı girişi bulunamadı');\r\n      return;\r\n    }\r\n\r\n    // Chat ID'yi UID'leri kullanarak oluştur\r\n    const chatId = [currentUser.uid, user.uid].sort().join('_');\r\n\r\n    // Chat ekranına yönlendir\r\n    navigation.navigate('Chat', { \r\n      currentUserId: currentUser.uid,\r\n      otherUserId: user.uid,\r\n      chatId: chatId,\r\n      otherUserEmail: user.email\r\n    });\r\n  };\r\n\r\n  const renderUserItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.userItem}\r\n      onPress={() => handleUserPress(item)}\r\n    >\r\n      <View style={styles.userInfo}>\r\n        <Text style={styles.userEmail}>{item.email}</Text>\r\n        {item.username && (\r\n          <Text style={styles.username}>{item.username}</Text>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text style={styles.loadingText}>Kullanıcılar yükleniyor...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>{error}</Text>\r\n        <TouchableOpacity\r\n          style={styles.retryButton}\r\n          onPress={() => setLoading(true)}\r\n        >\r\n          <Text style={styles.retryButtonText}>Tekrar Dene</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Sohbet Etmek İstediğiniz Kişiyi Seçin</Text>\r\n      </View>\r\n      {users.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>Kullanılabilir kullanıcı yok</Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={users}\r\n          renderItem={renderUserItem}\r\n          keyExtractor={(item) => item.uid}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  errorText: {\r\n    fontSize: 16,\r\n    color: '#ef4444',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 12,\r\n  },\r\n  retryButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  userItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n  },\r\n  userInfo: {\r\n    flex: 1,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  username: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#6b7280',\r\n  },\r\n});\r\n\r\nexport default UsersScreen; ","import React, { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from './config/firebase';\r\n\r\n// Import screens\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport ChatListScreen from './screens/ChatListScreen';\r\nimport ChatScreen from './screens/ChatScreen';\r\nimport AccountScreen from './screens/AccountScreen';\r\nimport NewChatScreen from './screens/NewChatScreen';\r\nimport UsersScreen from './screens/UsersScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction TabNavigator() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Chats') {\r\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\r\n          } else if (route.name === 'Account') {\r\n            iconName = focused ? 'person' : 'person-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: '#007AFF',\r\n        tabBarInactiveTintColor: 'gray',\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Chats\" \r\n        component={ChatListScreen}\r\n        options={{\r\n          title: 'Sohbetler'\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Account\" \r\n        component={AccountScreen}\r\n        options={{\r\n          title: 'Hesabım'\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          animation: 'slide_from_right',\r\n        }}\r\n      >\r\n        {user ? (\r\n          <>\r\n            <Stack.Screen name=\"TabHome\" component={TabNavigator} />\r\n            <Stack.Screen\r\n              name=\"Chat\"\r\n              component={ChatScreen}\r\n              options={{\r\n                headerShown: true,\r\n                title: 'Sohbet'\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"NewChat\"\r\n              component={NewChatScreen}\r\n              options={{\r\n                headerShown: true,\r\n                title: 'Yeni Sohbet'\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Users\"\r\n              component={UsersScreen}\r\n              options={{\r\n                headerShown: true,\r\n                title: 'Kullanıcı Seç'\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Stack.Screen \r\n            name=\"Login\" \r\n            component={LoginScreen}\r\n            options={{\r\n              title: 'Giriş Yap'\r\n            }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n} ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [926], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","database","getDatabase","getStorage","then","_ref","setPersistence","browserLocalPersistence","catch","error","console","_ref2","_asyncToGenerator","testRef","ref","set","timestamp","Date","toISOString","log","apply","arguments","testConnection","getApps","length","measurementId","messaging","window","navigator","getMessaging","serviceWorkerRegistration","notificationPermissionRequested","addEventListener","serviceWorker","register","scope","token","requestNotificationPermission","permission","Notification","requestPermission","getRegistration","tokenOptions","vapidKey","getToken","tokenError","styles","StyleSheet","create","container","flex","backgroundColor","content","justifyContent","alignItems","padding","title","fontSize","fontWeight","color","marginBottom","form","width","maxWidth","input","borderWidth","borderColor","borderRadius","button","buttonDisabled","opacity","buttonText","textAlign","switchButton","switchButtonText","navigation","_useState","useState","_useState2","_slicedToArray","isLogin","setIsLogin","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","username","setUsername","_useState9","_useState0","loading","setLoading","handleAuth","userCredential","signInWithEmailAndPassword","user","uid","createUserWithEmailAndPassword","createdAt","Alert","alert","code","message","getErrorMessage","_jsx","KeyboardAvoidingView","behavior","style","children","_jsxs","View","Text","TextInput","placeholder","value","onChangeText","autoCapitalize","editable","keyboardType","secureTextEntry","TouchableOpacity","onPress","disabled","ActivityIndicator","loadingContainer","loadingText","marginTop","header","flexDirection","borderBottomWidth","borderBottomColor","headerTitle","headerButtons","newChatButton","paddingHorizontal","paddingVertical","newChatButtonText","notificationButton","marginRight","notificationButtonText","listContainer","chatItem","avatarContainer","avatar","height","placeholderAvatar","placeholderText","chatInfo","userEmail","lastMessage","emptyContainer","emptyText","startChatButton","startChatButtonText","chats","setChats","unsubscribers","setUnsubscribers","notificationToken","setNotificationToken","useEffect","isMounted","chatUnsubscriber","setupNotifications","isMobileWeb","test","userAgent","platformInfo","substring","currentUser","userRef","update","fcmToken","platform","lastTokenUpdate","lastLoginAt","Promise","resolve","onMessage","payload","notification","body","icon","tag","now","renotify","audioCtx","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","type","frequency","gain","connect","destination","start","setTimeout","stop","_ref3","beep","soundError","loadChats","err","onmessage","event","data","ready","registration","_ref4","replace","chatsRef","onValue","_ref5","snapshot","exists","chatsData","val","newChats","chatId","includes","otherUserId","split","find","id","userSnapshot","get","otherUser","_objectSpread","messagesRef","messagesSnapshot","query","limitToLast","messages","Object","values","push","otherUserEmail","otherUserProfileImage","profileImage","text","isCurrentUser","senderId","sort","a","b","_x","forEach","unsubscribe","handleChatPress","useCallback","chat","navigate","currentUserId","handleNewChat","handleRequestNotification","notifError","renderChatItem","_ref7","_item$otherUserEmail","_item$otherUserEmail$","item","Image","source","uri","onError","e","nativeEvent","charAt","toUpperCase","numberOfLines","toLocaleTimeString","hour","minute","size","SafeAreaView","FlatList","renderItem","keyExtractor","contentContainerStyle","headerText","messageList","messageListContent","flexGrow","messageContainer","marginVertical","currentUserMessage","alignSelf","otherUserMessage","senderName","messageText","currentUserText","otherUserText","currentUserTimestamp","otherUserTimestamp","inputContainer","borderTopWidth","borderTopColor","maxHeight","sendButton","sendButtonText","_route$params","route","params","setMessages","newMessage","setNewMessage","flatListRef","useRef","inputHeight","Animated","Value","current","messagesArray","entries","map","_flatListRef$current","scrollToEnd","animated","off","sendNotificationToReceiver","receiverId","messageData","userData","senderEmail","_userData$userAgent","notificationData","to","badge","sound","url","location","origin","priority","content_available","webpush","headers","TTL","Urgency","requireInteraction","vibrate","fcm_options","link","global","fetch","method","JSON","stringify","response","status","ok","Error","json","_userData$userAgent2","_x2","transform","translateY","interpolate","inputRange","outputRange","inverted","onContentSizeChange","_flatListRef$current3","onLayout","_flatListRef$current4","multiline","trim","newMessageRef","sequence","timing","toValue","duration","useNativeDriver","_flatListRef$current2","label","updateButton","logoutButton","profileSection","imageContainer","position","placeholderImage","editBadge","bottom","right","editBadgeText","modalContainer","modalContent","modalTitle","modalInput","modalButtons","modalButton","marginLeft","cancelButton","saveButton","modalButtonText","_username$charAt","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updating","setUpdating","_useState1","_useState10","setProfileImage","_useState11","_useState12","modalVisible","setModalVisible","_useState13","_useState14","imageUrl","setImageUrl","handleUpdateProfile","updatePassword","handleLogout","signOut","handleSaveImageUrl","_response$headers$get","Modal","animationType","transparent","visible","onRequestClose","placeholderTextColor","searchContainer","searchInput","userItem","userInfo","users","setUsers","searchQuery","setSearchQuery","usersRef","userList","filter","filteredUsers","toLowerCase","startNewChat","_ref6","existingChatsRef","existingChatsSnapshot","existingChats","existingChat","chatRef","chatData","participants","_defineProperty","lastMessageTime","deletedBy","_ref9","ListEmptyComponent","errorContainer","errorText","retryButton","retryButtonText","setError","fetchUsers","usersData","usersArray","join","handleUserPress","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","TabNavigator","Navigator","screenOptions","tabBarIcon","iconName","focused","name","Ionicons","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","ChatListScreen","options","AccountScreen","App","setUser","onAuthStateChanged","NavigationContainer","headerShown","animation","_Fragment","ChatScreen","NewChatScreen","UsersScreen","LoginScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}