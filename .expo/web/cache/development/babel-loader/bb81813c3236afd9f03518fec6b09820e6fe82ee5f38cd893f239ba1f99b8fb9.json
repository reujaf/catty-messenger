{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\BLale\\\\Desktop\\\\Catty\\\\screens\\\\ChatListScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ref, get, query, orderByChild, limitToLast, onValue, off, onChildAdded, onChildChanged, remove, set, update } from 'firebase/database';\nimport { database, auth } from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatListScreen = function ChatListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chats = _useState2[0],\n    setChats = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    unsubscribers = _useState6[0],\n    setUnsubscribers = _useState6[1];\n  var updateExistingChats = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var currentUser = auth.currentUser;\n        if (!currentUser) return;\n        var chatsRef = ref(database, 'privateChats');\n        var chatsSnapshot = yield get(chatsRef);\n        if (!chatsSnapshot.exists()) return;\n        var chatsData = chatsSnapshot.val();\n        var updates = {};\n        for (var chatId in chatsData) {\n          if (chatId.includes(currentUser.uid)) {\n            var otherUserId = chatId.split('_').find(function (id) {\n              return id !== currentUser.uid;\n            });\n            updates[`privateChats/${chatId}/deletedBy/${currentUser.uid}`] = false;\n            updates[`privateChats/${chatId}/deletedBy/${otherUserId}`] = false;\n          }\n        }\n        if (Object.keys(updates).length > 0) {\n          yield update(ref(database), updates);\n          console.log('Sohbetler güncellendi:', updates);\n        }\n      } catch (error) {\n        console.error('Mevcut sohbetleri güncelleme hatası:', error);\n      }\n    });\n    return function updateExistingChats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var isMounted = true;\n    var chatUnsubscriber = null;\n    var loadChats = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var currentUser = auth.currentUser;\n          if (!currentUser) {\n            navigation.replace('Login');\n            setLoading(false);\n            return;\n          }\n          yield updateExistingChats();\n          var chatsRef = ref(database, 'privateChats');\n          chatUnsubscriber = onValue(chatsRef, function () {\n            var _ref4 = _asyncToGenerator(function* (snapshot) {\n              if (!isMounted) return;\n              try {\n                if (!snapshot.exists()) {\n                  setChats([]);\n                  setLoading(false);\n                  return;\n                }\n                var chatsData = snapshot.val();\n                var newChats = [];\n                var newUnsubscribers = {};\n                for (var chatId in chatsData) {\n                  if (chatId.includes(currentUser.uid)) {\n                    try {\n                      var _chatsData$chatId$del;\n                      if ((_chatsData$chatId$del = chatsData[chatId].deletedBy) != null && _chatsData$chatId$del[currentUser.uid]) {\n                        continue;\n                      }\n                      var otherUserId = chatId.split('_').find(function (id) {\n                        return id !== currentUser.uid;\n                      });\n                      var userRef = ref(database, `users/${otherUserId}`);\n                      var userSnapshot = yield get(userRef);\n                      if (userSnapshot.exists()) {\n                        var otherUser = _objectSpread({\n                          uid: otherUserId\n                        }, userSnapshot.val());\n                        var messagesRef = ref(database, `privateChats/${chatId}/messages`);\n                        var messagesSnapshot = yield get(query(messagesRef, limitToLast(1)));\n                        if (messagesSnapshot.exists()) {\n                          var messages = messagesSnapshot.val();\n                          var lastMessage = Object.values(messages)[0];\n                          newChats.push({\n                            chatId: chatId,\n                            otherUserId: otherUser.uid,\n                            otherUserEmail: otherUser.email,\n                            lastMessage: lastMessage.text,\n                            timestamp: lastMessage.timestamp,\n                            isCurrentUser: lastMessage.senderId === currentUser.uid\n                          });\n                        }\n                      }\n                    } catch (error) {\n                      console.error('Error processing chat:', error);\n                    }\n                  }\n                }\n                if (isMounted) {\n                  setChats(newChats.sort(function (a, b) {\n                    return b.timestamp - a.timestamp;\n                  }));\n                  setUnsubscribers(newUnsubscribers);\n                }\n              } catch (error) {\n                console.error('Error in chat listener:', error);\n              } finally {\n                if (isMounted) {\n                  setLoading(false);\n                }\n              }\n            });\n            return function (_x) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n        } catch (error) {\n          console.error('Initial setup error:', error);\n          if (isMounted) {\n            setLoading(false);\n          }\n        }\n      });\n      return function loadChats() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    loadChats();\n    return function () {\n      isMounted = false;\n      if (chatUnsubscriber) {\n        chatUnsubscriber();\n      }\n      Object.values(unsubscribers).forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  }, [navigation]);\n  var deleteChat = useCallback(function () {\n    var _ref5 = _asyncToGenerator(function* (chatId) {\n      Alert.alert('Sohbeti Sil', 'Bu sohbeti silmek istediğinizden emin misiniz?', [{\n        text: 'İptal',\n        style: 'cancel'\n      }, {\n        text: 'Sil',\n        style: 'destructive',\n        onPress: function () {\n          var _onPress = _asyncToGenerator(function* () {\n            try {\n              var currentUser = auth.currentUser;\n              if (!currentUser) {\n                Alert.alert('Hata', 'Kullanıcı girişi bulunamadı.');\n                return;\n              }\n              console.log('Silme işlemi başladı:', chatId);\n              var chatRef = ref(database, `privateChats/${chatId}`);\n              var chatSnapshot = yield get(chatRef);\n              if (!chatSnapshot.exists()) {\n                Alert.alert('Hata', 'Sohbet bulunamadı.');\n                return;\n              }\n              yield remove(chatRef);\n              console.log('Sohbet silindi:', chatId);\n              setChats(function (prevChats) {\n                return prevChats.filter(function (chat) {\n                  return chat.chatId !== chatId;\n                });\n              });\n              if (unsubscribers[chatId]) {\n                unsubscribers[chatId]();\n                setUnsubscribers(function (prev) {\n                  var newUnsubscribers = _objectSpread({}, prev);\n                  delete newUnsubscribers[chatId];\n                  return newUnsubscribers;\n                });\n              }\n              Alert.alert('Başarılı', 'Sohbet başarıyla silindi.');\n            } catch (error) {\n              console.error('Silme hatası:', error);\n              Alert.alert('Hata', `Sohbet silinirken bir hata oluştu: ${error.message || 'Bilinmeyen hata'}`);\n            }\n          });\n          function onPress() {\n            return _onPress.apply(this, arguments);\n          }\n          return onPress;\n        }()\n      }]);\n    });\n    return function (_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [unsubscribers]);\n  var handleChatPress = useCallback(function (chat) {\n    navigation.navigate('Chat', {\n      currentUserId: auth.currentUser.uid,\n      otherUserId: chat.otherUserId,\n      chatId: chat.chatId,\n      otherUserEmail: chat.otherUserEmail\n    });\n  }, [navigation]);\n  var handleNewChat = useCallback(function () {\n    navigation.navigate('Users');\n  }, [navigation]);\n  var renderChatItem = useCallback(function (_ref6) {\n    var item = _ref6.item;\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.chatItem,\n      onPress: function onPress() {\n        return handleChatPress(item);\n      },\n      children: [_jsxDEV(View, {\n        style: styles.chatInfo,\n        children: [_jsxDEV(Text, {\n          style: styles.userEmail,\n          children: item.otherUserEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, _this), _jsxDEV(Text, {\n          style: styles.lastMessage,\n          numberOfLines: 1,\n          children: [item.isCurrentUser ? 'Siz: ' : '', item.lastMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, _this), _jsxDEV(Text, {\n        style: styles.timestamp,\n        children: new Date(item.timestamp).toLocaleTimeString('tr-TR', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }, _this);\n  }, [handleChatPress]);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#007AFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.loadingText,\n        children: \"Sohbetler y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.headerTitle,\n        children: \"Sohbetler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.newChatButton,\n        onPress: handleNewChat,\n        children: _jsxDEV(Text, {\n          style: styles.newChatButtonText,\n          children: \"Yeni Sohbet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, _this), chats.length === 0 ? _jsxDEV(View, {\n      style: styles.emptyContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.emptyText,\n        children: \"Hen\\xFCz mesaj\\u0131n\\u0131z yok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.startChatButton,\n        onPress: handleNewChat,\n        children: _jsxDEV(Text, {\n          style: styles.startChatButtonText,\n          children: \"Yeni Sohbet Ba\\u015Flat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, _this) : _jsxDEV(FlatList, {\n      data: chats,\n      renderItem: renderChatItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.chatId;\n      },\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb',\n    backgroundColor: '#fff'\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1f2937'\n  },\n  newChatButton: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20\n  },\n  newChatButtonText: {\n    color: '#fff',\n    fontWeight: '600'\n  },\n  listContainer: {\n    padding: 16\n  },\n  chatItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#e5e7eb',\n    marginBottom: 8\n  },\n  chatInfo: {\n    flex: 1,\n    marginRight: 12\n  },\n  userEmail: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1f2937',\n    marginBottom: 4\n  },\n  lastMessage: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  timestamp: {\n    fontSize: 12,\n    color: '#9ca3af'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  emptyText: {\n    fontSize: 18,\n    color: '#6b7280',\n    marginBottom: 16\n  },\n  startChatButton: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 24\n  },\n  startChatButtonText: {\n    color: '#fff',\n    fontWeight: '600',\n    fontSize: 16\n  }\n});\nexport default ChatListScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","StyleSheet","View","Text","FlatList","TouchableOpacity","SafeAreaView","ActivityIndicator","Alert","ref","get","query","orderByChild","limitToLast","onValue","off","onChildAdded","onChildChanged","remove","set","update","database","auth","jsxDEV","_jsxDEV","ChatListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","chats","setChats","_useState3","_useState4","loading","setLoading","_useState5","_useState6","unsubscribers","setUnsubscribers","updateExistingChats","_ref2","_asyncToGenerator","currentUser","chatsRef","chatsSnapshot","exists","chatsData","val","updates","chatId","includes","uid","otherUserId","split","find","id","Object","keys","length","console","log","error","apply","arguments","isMounted","chatUnsubscriber","loadChats","_ref3","replace","_ref4","snapshot","newChats","newUnsubscribers","_chatsData$chatId$del","deletedBy","userRef","userSnapshot","otherUser","_objectSpread","messagesRef","messagesSnapshot","messages","lastMessage","values","push","otherUserEmail","email","text","timestamp","isCurrentUser","senderId","sort","a","b","_x","forEach","unsubscribe","deleteChat","_ref5","alert","style","onPress","_onPress","chatRef","chatSnapshot","prevChats","filter","chat","prev","message","_x2","handleChatPress","navigate","currentUserId","handleNewChat","renderChatItem","_ref6","item","styles","chatItem","children","chatInfo","userEmail","fileName","_jsxFileName","lineNumber","columnNumber","_this","numberOfLines","Date","toLocaleTimeString","hour","minute","loadingContainer","size","color","loadingText","container","header","headerTitle","newChatButton","newChatButtonText","emptyContainer","emptyText","startChatButton","startChatButtonText","data","renderItem","keyExtractor","contentContainerStyle","listContainer","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","flexDirection","padding","borderBottomWidth","borderBottomColor","fontWeight","paddingHorizontal","paddingVertical","borderRadius","borderWidth","borderColor","marginBottom","marginRight"],"sources":["C:/Users/BLale/Desktop/Catty/screens/ChatListScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Alert,\r\n} from 'react-native';\r\nimport { ref, get, query, orderByChild, limitToLast, onValue, off, onChildAdded, onChildChanged, remove, set, update } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [unsubscribers, setUnsubscribers] = useState({});\r\n\r\n  // Mevcut sohbetleri güncelle\r\n  const updateExistingChats = async () => {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (!currentUser) return;\r\n\r\n      const chatsRef = ref(database, 'privateChats');\r\n      const chatsSnapshot = await get(chatsRef);\r\n      \r\n      if (!chatsSnapshot.exists()) return;\r\n\r\n      const chatsData = chatsSnapshot.val();\r\n      const updates = {};\r\n\r\n      for (const chatId in chatsData) {\r\n        if (chatId.includes(currentUser.uid)) {\r\n          const otherUserId = chatId.split('_').find(id => id !== currentUser.uid);\r\n          updates[`privateChats/${chatId}/deletedBy/${currentUser.uid}`] = false;\r\n          updates[`privateChats/${chatId}/deletedBy/${otherUserId}`] = false;\r\n        }\r\n      }\r\n\r\n      if (Object.keys(updates).length > 0) {\r\n        await update(ref(database), updates);\r\n        console.log('Sohbetler güncellendi:', updates);\r\n      }\r\n    } catch (error) {\r\n      console.error('Mevcut sohbetleri güncelleme hatası:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let chatUnsubscriber = null;\r\n\r\n    const loadChats = async () => {\r\n      try {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n          navigation.replace('Login');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Mevcut sohbetleri güncelle\r\n        await updateExistingChats();\r\n\r\n        const chatsRef = ref(database, 'privateChats');\r\n        \r\n        chatUnsubscriber = onValue(chatsRef, async (snapshot) => {\r\n          if (!isMounted) return;\r\n\r\n          try {\r\n            if (!snapshot.exists()) {\r\n              setChats([]);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n\r\n            const chatsData = snapshot.val();\r\n            const newChats = [];\r\n            const newUnsubscribers = {};\r\n            \r\n            for (const chatId in chatsData) {\r\n              if (chatId.includes(currentUser.uid)) {\r\n                try {\r\n                  // Kullanıcının sildiği sohbetleri gösterme\r\n                  if (chatsData[chatId].deletedBy?.[currentUser.uid]) {\r\n                    continue;\r\n                  }\r\n\r\n                  const otherUserId = chatId.split('_').find(id => id !== currentUser.uid);\r\n                  const userRef = ref(database, `users/${otherUserId}`);\r\n                  const userSnapshot = await get(userRef);\r\n                  \r\n                  if (userSnapshot.exists()) {\r\n                    const otherUser = {\r\n                      uid: otherUserId,\r\n                      ...userSnapshot.val()\r\n                    };\r\n                    \r\n                    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n                    const messagesSnapshot = await get(query(messagesRef, limitToLast(1)));\r\n                    \r\n                    if (messagesSnapshot.exists()) {\r\n                      const messages = messagesSnapshot.val();\r\n                      const lastMessage = Object.values(messages)[0];\r\n                      \r\n                      newChats.push({\r\n                        chatId,\r\n                        otherUserId: otherUser.uid,\r\n                        otherUserEmail: otherUser.email,\r\n                        lastMessage: lastMessage.text,\r\n                        timestamp: lastMessage.timestamp,\r\n                        isCurrentUser: lastMessage.senderId === currentUser.uid\r\n                      });\r\n                    }\r\n                  }\r\n                } catch (error) {\r\n                  console.error('Error processing chat:', error);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (isMounted) {\r\n              setChats(newChats.sort((a, b) => b.timestamp - a.timestamp));\r\n              setUnsubscribers(newUnsubscribers);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error in chat listener:', error);\r\n          } finally {\r\n            if (isMounted) {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Initial setup error:', error);\r\n        if (isMounted) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadChats();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (chatUnsubscriber) {\r\n        chatUnsubscriber();\r\n      }\r\n      Object.values(unsubscribers).forEach(unsubscribe => unsubscribe());\r\n    };\r\n  }, [navigation]);\r\n\r\n  const deleteChat = useCallback(async (chatId) => {\r\n    Alert.alert(\r\n      'Sohbeti Sil',\r\n      'Bu sohbeti silmek istediğinizden emin misiniz?',\r\n      [\r\n        {\r\n          text: 'İptal',\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: 'Sil',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              const currentUser = auth.currentUser;\r\n              if (!currentUser) {\r\n                Alert.alert('Hata', 'Kullanıcı girişi bulunamadı.');\r\n                return;\r\n              }\r\n\r\n              console.log('Silme işlemi başladı:', chatId);\r\n              const chatRef = ref(database, `privateChats/${chatId}`);\r\n              \r\n              // Önce sohbetin var olduğunu kontrol et\r\n              const chatSnapshot = await get(chatRef);\r\n              if (!chatSnapshot.exists()) {\r\n                Alert.alert('Hata', 'Sohbet bulunamadı.');\r\n                return;\r\n              }\r\n\r\n              // Sohbeti tamamen sil\r\n              await remove(chatRef);\r\n              console.log('Sohbet silindi:', chatId);\r\n\r\n              // Yerel state'i güncelle\r\n              setChats(prevChats => prevChats.filter(chat => chat.chatId !== chatId));\r\n              \r\n              // Varsa unsubscriber'ı temizle\r\n              if (unsubscribers[chatId]) {\r\n                unsubscribers[chatId]();\r\n                setUnsubscribers(prev => {\r\n                  const newUnsubscribers = { ...prev };\r\n                  delete newUnsubscribers[chatId];\r\n                  return newUnsubscribers;\r\n                });\r\n              }\r\n\r\n              Alert.alert('Başarılı', 'Sohbet başarıyla silindi.');\r\n            } catch (error) {\r\n              console.error('Silme hatası:', error);\r\n              Alert.alert(\r\n                'Hata',\r\n                `Sohbet silinirken bir hata oluştu: ${error.message || 'Bilinmeyen hata'}`\r\n              );\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  }, [unsubscribers]);\r\n\r\n  const handleChatPress = useCallback((chat) => {\r\n    navigation.navigate('Chat', {\r\n      currentUserId: auth.currentUser.uid,\r\n      otherUserId: chat.otherUserId,\r\n      chatId: chat.chatId,\r\n      otherUserEmail: chat.otherUserEmail\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleNewChat = useCallback(() => {\r\n    navigation.navigate('Users');\r\n  }, [navigation]);\r\n\r\n  const renderChatItem = useCallback(({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.chatItem}\r\n      onPress={() => handleChatPress(item)}\r\n    >\r\n      <View style={styles.chatInfo}>\r\n        <Text style={styles.userEmail}>{item.otherUserEmail}</Text>\r\n        <Text style={styles.lastMessage} numberOfLines={1}>\r\n          {item.isCurrentUser ? 'Siz: ' : ''}{item.lastMessage}\r\n        </Text>\r\n      </View>\r\n      <Text style={styles.timestamp}>\r\n        {new Date(item.timestamp).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  ), [handleChatPress]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text style={styles.loadingText}>Sohbetler yükleniyor...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Sohbetler</Text>\r\n        <TouchableOpacity style={styles.newChatButton} onPress={handleNewChat}>\r\n          <Text style={styles.newChatButtonText}>Yeni Sohbet</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {chats.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>Henüz mesajınız yok</Text>\r\n          <TouchableOpacity \r\n            style={styles.startChatButton}\r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.startChatButtonText}>Yeni Sohbet Başlat</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={renderChatItem}\r\n          keyExtractor={(item) => item.chatId}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  newChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n  },\r\n  newChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  chatItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    marginBottom: 8,\r\n  },\r\n  chatInfo: {\r\n    flex: 1,\r\n    marginRight: 12,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  lastMessage: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    color: '#9ca3af',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  emptyText: {\r\n    fontSize: 18,\r\n    color: '#6b7280',\r\n    marginBottom: 16,\r\n  },\r\n  startChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 24,\r\n    paddingVertical: 12,\r\n    borderRadius: 24,\r\n  },\r\n  startChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n  }\r\n});\r\n\r\nexport default ChatListScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}