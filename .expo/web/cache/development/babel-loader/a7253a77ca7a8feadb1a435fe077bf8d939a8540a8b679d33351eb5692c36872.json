{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getDatabase, ref, set } from 'firebase/database';\nimport { getStorage } from 'firebase/storage';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",\n  authDomain: \"catty-message.firebaseapp.com\",\n  databaseURL: \"https://catty-message-default-rtdb.firebaseio.com\",\n  projectId: \"catty-message\",\n  storageBucket: \"catty-message.firebasestorage.app\",\n  messagingSenderId: \"762334512293\",\n  appId: \"1:762334512293:web:d3edbbb5de41c29c43f94c\"\n};\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth(app);\nvar database = getDatabase(app);\nvar storage = getStorage(app);\nif (Platform.OS === 'web') {\n  import('firebase/auth').then(function (_ref) {\n    var setPersistence = _ref.setPersistence,\n      browserLocalPersistence = _ref.browserLocalPersistence;\n    setPersistence(auth, browserLocalPersistence).catch(function (error) {\n      console.error('Error setting auth persistence:', error);\n    });\n  });\n}\nvar testConnection = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var testRef = ref(database, 'test');\n      yield set(testRef, {\n        timestamp: new Date().toISOString()\n      });\n      console.log('Database connection successful');\n    } catch (error) {\n      console.error('Database connection error:', error);\n    }\n  });\n  return function testConnection() {\n    return _ref2.apply(this, arguments);\n  };\n}();\ntestConnection();\nexport { auth, database, storage };","map":{"version":3,"names":["initializeApp","getAuth","getDatabase","ref","set","getStorage","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","auth","database","storage","Platform","OS","then","_ref","setPersistence","browserLocalPersistence","catch","error","console","testConnection","_ref2","_asyncToGenerator","testRef","timestamp","Date","toISOString","log","apply","arguments"],"sources":["C:/Users/BLale/Desktop/Catty/config/firebase.js"],"sourcesContent":["import { Platform } from 'react-native';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getDatabase, ref, set } from 'firebase/database';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",\r\n  authDomain: \"catty-message.firebaseapp.com\",\r\n  databaseURL: \"https://catty-message-default-rtdb.firebaseio.com\",\r\n  projectId: \"catty-message\",\r\n  storageBucket: \"catty-message.firebasestorage.app\",\r\n  messagingSenderId: \"762334512293\",\r\n  appId: \"1:762334512293:web:d3edbbb5de41c29c43f94c\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Get Auth instance\r\nconst auth = getAuth(app);\r\n\r\n// Get Database instance\r\nconst database = getDatabase(app);\r\n\r\n// Get Storage instance\r\nconst storage = getStorage(app);\r\n\r\n// Handle web-specific configuration\r\nif (Platform.OS === 'web') {\r\n  // Import web-specific persistence\r\n  import('firebase/auth').then(({ setPersistence, browserLocalPersistence }) => {\r\n    setPersistence(auth, browserLocalPersistence)\r\n      .catch((error) => {\r\n        console.error('Error setting auth persistence:', error);\r\n      });\r\n  });\r\n}\r\n\r\n// Test database connection\r\nconst testConnection = async () => {\r\n  try {\r\n    const testRef = ref(database, 'test');\r\n    await set(testRef, { timestamp: new Date().toISOString() });\r\n    console.log('Database connection successful');\r\n  } catch (error) {\r\n    console.error('Database connection error:', error);\r\n  }\r\n};\r\n\r\n// Run test on initialization\r\ntestConnection();\r\n\r\nexport { auth, database, storage }; "],"mappings":";;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACzD,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,WAAW,EAAE,mDAAmD;EAChEC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,mCAAmC;EAClDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAGD,IAAMC,GAAG,GAAGd,aAAa,CAACM,cAAc,CAAC;AAGzC,IAAMS,IAAI,GAAGd,OAAO,CAACa,GAAG,CAAC;AAGzB,IAAME,QAAQ,GAAGd,WAAW,CAACY,GAAG,CAAC;AAGjC,IAAMG,OAAO,GAAGZ,UAAU,CAACS,GAAG,CAAC;AAG/B,IAAII,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;EAEzB,MAAM,CAAC,eAAe,CAAC,CAACC,IAAI,CAAC,UAAAC,IAAA,EAAiD;IAAA,IAA9CC,cAAc,GAAAD,IAAA,CAAdC,cAAc;MAAEC,uBAAuB,GAAAF,IAAA,CAAvBE,uBAAuB;IACrED,cAAc,CAACP,IAAI,EAAEQ,uBAAuB,CAAC,CAC1CC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAGA,IAAME,cAAc;EAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;IACjC,IAAI;MACF,IAAMC,OAAO,GAAG3B,GAAG,CAACa,QAAQ,EAAE,MAAM,CAAC;MACrC,MAAMZ,GAAG,CAAC0B,OAAO,EAAE;QAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAE,CAAC,CAAC;MAC3DP,OAAO,CAACQ,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAAA,gBARKE,cAAcA,CAAA;IAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;EAAA;AAAA,GAQnB;AAGDT,cAAc,CAAC,CAAC;AAEhB,SAASZ,IAAI,EAAEC,QAAQ,EAAEC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}