{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useCallback}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Image from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import{ref,get,query,orderByChild,limitToLast,onValue,off,update}from'firebase/database';import{database,auth}from'../config/firebase-web';import{requestNotificationPermission,onMessageListener}from'../config/firebase-web';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var ChatListScreen=function ChatListScreen(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chats=_useState2[0],setChats=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),unsubscribers=_useState6[0],setUnsubscribers=_useState6[1];useEffect(function(){var isMounted=true;var chatUnsubscriber=null;var setupNotifications=function(){var _ref2=_asyncToGenerator(function*(){if(\"web\"==='web'){try{var token=yield requestNotificationPermission();if(token){var currentUser=auth.currentUser;if(currentUser){var userRef=ref(database,`users/${currentUser.uid}`);yield update(userRef,{fcmToken:token,platform:'web'});}}onMessageListener().then(function(payload){if(payload.notification){new Notification(payload.notification.title,{body:payload.notification.body,icon:'/icon.png'});}}).catch(function(err){return console.error('Failed to receive notification:',err);});}catch(error){console.error('Notification setup error:',error);}}});return function setupNotifications(){return _ref2.apply(this,arguments);};}();var loadChats=function(){var _ref3=_asyncToGenerator(function*(){try{var currentUser=auth.currentUser;if(!currentUser){navigation.replace('Login');setLoading(false);return;}var chatsRef=ref(database,'privateChats');chatUnsubscriber=onValue(chatsRef,function(){var _ref4=_asyncToGenerator(function*(snapshot){if(!isMounted)return;try{if(!snapshot.exists()){setChats([]);setLoading(false);return;}var chatsData=snapshot.val();var newChats=[];var newUnsubscribers={};for(var chatId in chatsData){if(chatId.includes(currentUser.uid)){try{var otherUserId=chatId.split('_').find(function(id){return id!==currentUser.uid;});var userRef=ref(database,`users/${otherUserId}`);var userSnapshot=yield get(userRef);if(userSnapshot.exists()){var otherUser=_objectSpread({uid:otherUserId},userSnapshot.val());var messagesRef=ref(database,`privateChats/${chatId}/messages`);var messagesSnapshot=yield get(query(messagesRef,limitToLast(1)));if(messagesSnapshot.exists()){var messages=messagesSnapshot.val();var lastMessage=Object.values(messages)[0];newChats.push({chatId:chatId,otherUserId:otherUser.uid,otherUserEmail:otherUser.email,otherUserProfileImage:otherUser.profileImage,lastMessage:lastMessage.text,timestamp:lastMessage.timestamp,isCurrentUser:lastMessage.senderId===currentUser.uid});}}}catch(error){console.error('Error processing chat:',error);}}}if(isMounted){setChats(newChats.sort(function(a,b){return b.timestamp-a.timestamp;}));setUnsubscribers(newUnsubscribers);}}catch(error){console.error('Error in chat listener:',error);}finally{if(isMounted){setLoading(false);}}});return function(_x){return _ref4.apply(this,arguments);};}());}catch(error){console.error('Initial setup error:',error);if(isMounted){setLoading(false);}}});return function loadChats(){return _ref3.apply(this,arguments);};}();setupNotifications();loadChats();return function(){isMounted=false;if(chatUnsubscriber){chatUnsubscriber();}Object.values(unsubscribers).forEach(function(unsubscribe){return unsubscribe();});};},[navigation]);var handleChatPress=useCallback(function(chat){navigation.navigate('Chat',{currentUserId:auth.currentUser.uid,otherUserId:chat.otherUserId,chatId:chat.chatId,otherUserEmail:chat.otherUserEmail});},[navigation]);var handleNewChat=useCallback(function(){navigation.navigate('Users');},[navigation]);var renderChatItem=useCallback(function(_ref5){var _item$otherUserEmail,_item$otherUserEmail$;var item=_ref5.item;return _jsxs(TouchableOpacity,{style:styles.chatItem,onPress:function onPress(){return handleChatPress(item);},children:[_jsx(View,{style:styles.avatarContainer,children:item.otherUserProfileImage?_jsx(Image,{source:{uri:item.otherUserProfileImage},style:styles.avatar,onError:function onError(e){return console.log('Error loading image:',e.nativeEvent.error);}}):_jsx(View,{style:[styles.avatar,styles.placeholderAvatar],children:_jsx(Text,{style:styles.placeholderText,children:((_item$otherUserEmail=item.otherUserEmail)==null?void 0:(_item$otherUserEmail$=_item$otherUserEmail.charAt(0))==null?void 0:_item$otherUserEmail$.toUpperCase())||'?'})})}),_jsxs(View,{style:styles.chatInfo,children:[_jsx(Text,{style:styles.userEmail,children:item.otherUserEmail}),_jsxs(Text,{style:styles.lastMessage,numberOfLines:1,children:[item.isCurrentUser?'Siz: ':'',item.lastMessage]})]}),_jsx(Text,{style:styles.timestamp,children:new Date(item.timestamp).toLocaleTimeString('tr-TR',{hour:'2-digit',minute:'2-digit'})})]});},[handleChatPress]);if(loading){return _jsxs(View,{style:styles.loadingContainer,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#007AFF\"}),_jsx(Text,{style:styles.loadingText,children:\"Sohbetler y\\xFCkleniyor...\"})]});}return _jsxs(SafeAreaView,{style:styles.container,children:[_jsxs(View,{style:styles.header,children:[_jsx(Text,{style:styles.headerTitle,children:\"Sohbetler\"}),_jsx(TouchableOpacity,{style:styles.newChatButton,onPress:handleNewChat,children:_jsx(Text,{style:styles.newChatButtonText,children:\"Yeni Sohbet\"})})]}),chats.length===0?_jsxs(View,{style:styles.emptyContainer,children:[_jsx(Text,{style:styles.emptyText,children:\"Hen\\xFCz mesaj\\u0131n\\u0131z yok\"}),_jsx(TouchableOpacity,{style:styles.startChatButton,onPress:handleNewChat,children:_jsx(Text,{style:styles.startChatButtonText,children:\"Yeni Sohbet Ba\\u015Flat\"})})]}):_jsx(FlatList,{data:chats,renderItem:renderChatItem,keyExtractor:function keyExtractor(item){return item.chatId;},contentContainerStyle:styles.listContainer})]});};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff'},loadingContainer:{flex:1,justifyContent:'center',alignItems:'center'},loadingText:{marginTop:10,fontSize:16,color:'#666'},header:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',padding:16,borderBottomWidth:1,borderBottomColor:'#e5e7eb',backgroundColor:'#fff'},headerTitle:{fontSize:24,fontWeight:'bold',color:'#1f2937'},newChatButton:{backgroundColor:'#007AFF',paddingHorizontal:16,paddingVertical:8,borderRadius:20},newChatButtonText:{color:'#fff',fontWeight:'600'},listContainer:{padding:16},chatItem:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',padding:12,backgroundColor:'#fff',borderRadius:12,borderWidth:1,borderColor:'#e5e7eb',marginBottom:8},avatarContainer:{marginRight:12},avatar:{width:50,height:50,borderRadius:25},placeholderAvatar:{backgroundColor:'#e5e7eb',justifyContent:'center',alignItems:'center'},placeholderText:{fontSize:24,fontWeight:'bold',color:'#9ca3af'},chatInfo:{flex:1,marginRight:12},userEmail:{fontSize:16,fontWeight:'600',color:'#1f2937',marginBottom:4},lastMessage:{fontSize:14,color:'#6b7280'},timestamp:{fontSize:12,color:'#9ca3af'},emptyContainer:{flex:1,justifyContent:'center',alignItems:'center',padding:16},emptyText:{fontSize:18,color:'#6b7280',marginBottom:16},startChatButton:{backgroundColor:'#007AFF',paddingHorizontal:24,paddingVertical:12,borderRadius:24},startChatButtonText:{color:'#fff',fontWeight:'600',fontSize:16}});export default ChatListScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","StyleSheet","View","Text","FlatList","TouchableOpacity","SafeAreaView","ActivityIndicator","Image","Platform","ref","get","query","orderByChild","limitToLast","onValue","off","update","database","auth","requestNotificationPermission","onMessageListener","jsx","_jsx","jsxs","_jsxs","ChatListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","chats","setChats","_useState3","_useState4","loading","setLoading","_useState5","_useState6","unsubscribers","setUnsubscribers","isMounted","chatUnsubscriber","setupNotifications","_ref2","_asyncToGenerator","token","currentUser","userRef","uid","fcmToken","platform","then","payload","notification","Notification","title","body","icon","catch","err","console","error","apply","arguments","loadChats","_ref3","replace","chatsRef","_ref4","snapshot","exists","chatsData","val","newChats","newUnsubscribers","chatId","includes","otherUserId","split","find","id","userSnapshot","otherUser","_objectSpread","messagesRef","messagesSnapshot","messages","lastMessage","Object","values","push","otherUserEmail","email","otherUserProfileImage","profileImage","text","timestamp","isCurrentUser","senderId","sort","a","b","_x","forEach","unsubscribe","handleChatPress","chat","navigate","currentUserId","handleNewChat","renderChatItem","_ref5","_item$otherUserEmail","_item$otherUserEmail$","item","style","styles","chatItem","onPress","children","avatarContainer","source","uri","avatar","onError","e","log","nativeEvent","placeholderAvatar","placeholderText","charAt","toUpperCase","chatInfo","userEmail","numberOfLines","Date","toLocaleTimeString","hour","minute","loadingContainer","size","color","loadingText","container","header","headerTitle","newChatButton","newChatButtonText","length","emptyContainer","emptyText","startChatButton","startChatButtonText","data","renderItem","keyExtractor","contentContainerStyle","listContainer","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","flexDirection","padding","borderBottomWidth","borderBottomColor","fontWeight","paddingHorizontal","paddingVertical","borderRadius","borderWidth","borderColor","marginBottom","marginRight","width","height"],"sources":["C:/Users/BLale/Desktop/Catty/screens/ChatListScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Image,\r\n  Platform,\r\n} from 'react-native';\r\nimport { ref, get, query, orderByChild, limitToLast, onValue, off, update } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase-web';\r\nimport { requestNotificationPermission, onMessageListener } from '../config/firebase-web';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [unsubscribers, setUnsubscribers] = useState({});\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let chatUnsubscriber = null;\r\n\r\n    const setupNotifications = async () => {\r\n      if (Platform.OS === 'web') {\r\n        try {\r\n          const token = await requestNotificationPermission();\r\n          if (token) {\r\n            // Token'ı kullanıcı verilerine kaydet\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n              const userRef = ref(database, `users/${currentUser.uid}`);\r\n              await update(userRef, {\r\n                fcmToken: token,\r\n                platform: 'web'\r\n              });\r\n            }\r\n          }\r\n\r\n          // Mesaj dinleyicisini başlat\r\n          onMessageListener()\r\n            .then(payload => {\r\n              // Yeni mesaj geldiğinde bildirim göster\r\n              if (payload.notification) {\r\n                new Notification(payload.notification.title, {\r\n                  body: payload.notification.body,\r\n                  icon: '/icon.png' // Web uygulamanızın icon'u\r\n                });\r\n              }\r\n            })\r\n            .catch(err => console.error('Failed to receive notification:', err));\r\n        } catch (error) {\r\n          console.error('Notification setup error:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const loadChats = async () => {\r\n      try {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n          navigation.replace('Login');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const chatsRef = ref(database, 'privateChats');\r\n        \r\n        chatUnsubscriber = onValue(chatsRef, async (snapshot) => {\r\n          if (!isMounted) return;\r\n\r\n          try {\r\n            if (!snapshot.exists()) {\r\n              setChats([]);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n\r\n            const chatsData = snapshot.val();\r\n            const newChats = [];\r\n            const newUnsubscribers = {};\r\n            \r\n            for (const chatId in chatsData) {\r\n              if (chatId.includes(currentUser.uid)) {\r\n                try {\r\n                  const otherUserId = chatId.split('_').find(id => id !== currentUser.uid);\r\n                  const userRef = ref(database, `users/${otherUserId}`);\r\n                  const userSnapshot = await get(userRef);\r\n                  \r\n                  if (userSnapshot.exists()) {\r\n                    const otherUser = {\r\n                      uid: otherUserId,\r\n                      ...userSnapshot.val()\r\n                    };\r\n                    \r\n                    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n                    const messagesSnapshot = await get(query(messagesRef, limitToLast(1)));\r\n                    \r\n                    if (messagesSnapshot.exists()) {\r\n                      const messages = messagesSnapshot.val();\r\n                      const lastMessage = Object.values(messages)[0];\r\n                      \r\n                      newChats.push({\r\n                        chatId,\r\n                        otherUserId: otherUser.uid,\r\n                        otherUserEmail: otherUser.email,\r\n                        otherUserProfileImage: otherUser.profileImage,\r\n                        lastMessage: lastMessage.text,\r\n                        timestamp: lastMessage.timestamp,\r\n                        isCurrentUser: lastMessage.senderId === currentUser.uid\r\n                      });\r\n                    }\r\n                  }\r\n                } catch (error) {\r\n                  console.error('Error processing chat:', error);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (isMounted) {\r\n              setChats(newChats.sort((a, b) => b.timestamp - a.timestamp));\r\n              setUnsubscribers(newUnsubscribers);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error in chat listener:', error);\r\n          } finally {\r\n            if (isMounted) {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Initial setup error:', error);\r\n        if (isMounted) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    setupNotifications();\r\n    loadChats();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (chatUnsubscriber) {\r\n        chatUnsubscriber();\r\n      }\r\n      Object.values(unsubscribers).forEach(unsubscribe => unsubscribe());\r\n    };\r\n  }, [navigation]);\r\n\r\n  const handleChatPress = useCallback((chat) => {\r\n    navigation.navigate('Chat', {\r\n      currentUserId: auth.currentUser.uid,\r\n      otherUserId: chat.otherUserId,\r\n      chatId: chat.chatId,\r\n      otherUserEmail: chat.otherUserEmail\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleNewChat = useCallback(() => {\r\n    navigation.navigate('Users');\r\n  }, [navigation]);\r\n\r\n  const renderChatItem = useCallback(({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.chatItem}\r\n      onPress={() => handleChatPress(item)}\r\n    >\r\n      <View style={styles.avatarContainer}>\r\n        {item.otherUserProfileImage ? (\r\n          <Image\r\n            source={{ uri: item.otherUserProfileImage }}\r\n            style={styles.avatar}\r\n            onError={(e) => console.log('Error loading image:', e.nativeEvent.error)}\r\n          />\r\n        ) : (\r\n          <View style={[styles.avatar, styles.placeholderAvatar]}>\r\n            <Text style={styles.placeholderText}>\r\n              {item.otherUserEmail?.charAt(0)?.toUpperCase() || '?'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={styles.chatInfo}>\r\n        <Text style={styles.userEmail}>{item.otherUserEmail}</Text>\r\n        <Text style={styles.lastMessage} numberOfLines={1}>\r\n          {item.isCurrentUser ? 'Siz: ' : ''}{item.lastMessage}\r\n        </Text>\r\n      </View>\r\n      <Text style={styles.timestamp}>\r\n        {new Date(item.timestamp).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  ), [handleChatPress]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text style={styles.loadingText}>Sohbetler yükleniyor...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Sohbetler</Text>\r\n        <TouchableOpacity style={styles.newChatButton} onPress={handleNewChat}>\r\n          <Text style={styles.newChatButtonText}>Yeni Sohbet</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {chats.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>Henüz mesajınız yok</Text>\r\n          <TouchableOpacity \r\n            style={styles.startChatButton}\r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.startChatButtonText}>Yeni Sohbet Başlat</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={renderChatItem}\r\n          keyExtractor={(item) => item.chatId}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  newChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n  },\r\n  newChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  chatItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    marginBottom: 8,\r\n  },\r\n  avatarContainer: {\r\n    marginRight: 12,\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  placeholderAvatar: {\r\n    backgroundColor: '#e5e7eb',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  placeholderText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#9ca3af',\r\n  },\r\n  chatInfo: {\r\n    flex: 1,\r\n    marginRight: 12,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  lastMessage: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    color: '#9ca3af',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  emptyText: {\r\n    fontSize: 18,\r\n    color: '#6b7280',\r\n    marginBottom: 16,\r\n  },\r\n  startChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 24,\r\n    paddingVertical: 12,\r\n    borderRadius: 24,\r\n  },\r\n  startChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n  }\r\n});\r\n\r\nexport default ChatListScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}