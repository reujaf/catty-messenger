{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{initializeApp,getApps}from'firebase/app';import{getMessaging,getToken,onMessage}from'firebase/messaging';import{getAuth}from'firebase/auth';import{getDatabase}from'firebase/database';var firebaseConfig={apiKey:\"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",authDomain:\"catty-message.firebaseapp.com\",databaseURL:\"https://catty-message-default-rtdb.firebaseio.com\",projectId:\"catty-message\",storageBucket:\"catty-message.firebasestorage.app\",messagingSenderId:\"762334512293\",appId:\"1:762334512293:web:d3edbbb5de41c29c43f94c\",measurementId:\"G-F4YVW57WKW\"};var VAPID_KEY=\"BGYiqKyl_5og4vKmlsCTDdWzrrppkdJ4mQNSQEtnStBPFab33zBDkw0yaCOcKkA4Hn3FlbScgkFvNd6NNR75_o8\";var app;if(!getApps().length){app=initializeApp(firebaseConfig);}else{app=getApps()[0];}export var auth=getAuth(app);export var database=getDatabase(app);var messaging=null;if(typeof window!=='undefined'&&'serviceWorker'in navigator){messaging=getMessaging(app);}var serviceWorkerRegistration=null;var notificationPermissionRequested=false;if(typeof window!=='undefined'&&'serviceWorker'in navigator){try{window.addEventListener('load',_asyncToGenerator(function*(){try{serviceWorkerRegistration=yield navigator.serviceWorker.register('/firebase-messaging-sw.js',{scope:'/'});console.log('Service Worker başarıyla kaydedildi:',serviceWorkerRegistration.scope);if(!notificationPermissionRequested){notificationPermissionRequested=true;var token=yield requestNotificationPermission();if(token){console.log('FCM Token otomatik olarak alındı:',token);}}}catch(error){console.error('Service Worker kaydı başarısız oldu:',error);}}));}catch(error){console.error('Service Worker hatası:',error);}}export var requestNotificationPermission=function(){var _ref2=_asyncToGenerator(function*(){try{if(typeof window==='undefined'||!('Notification'in window)){console.log('Bu tarayıcı bildirim desteği sunmuyor');return null;}var permission=yield Notification.requestPermission();console.log('Bildirim izni durumu:',permission);if(permission==='granted'){if(!messaging){console.error('Messaging servisi başlatılamadı');return null;}try{if(!serviceWorkerRegistration){serviceWorkerRegistration=yield navigator.serviceWorker.getRegistration('/firebase-messaging-sw.js');}var tokenOptions={vapidKey:VAPID_KEY};if(serviceWorkerRegistration){tokenOptions.serviceWorkerRegistration=serviceWorkerRegistration;}var token=yield getToken(messaging,tokenOptions);console.log('FCM Token alındı:',token);return token;}catch(tokenError){console.error('Token alma hatası:',tokenError);return null;}}return null;}catch(error){console.error('Bildirim izni hatası:',error);return null;}});return function requestNotificationPermission(){return _ref2.apply(this,arguments);};}();export var onMessageListener=function onMessageListener(){return new Promise(function(resolve){if(!messaging){console.error('Messaging servisi başlatılamadı, bildirimler çalışmayacak');resolve(null);return;}onMessage(messaging,function(payload){console.log('Ön planda yeni mesaj alındı:',payload);if(payload.notification){new Notification(payload.notification.title,{body:payload.notification.body,icon:payload.notification.icon||'/favicon.ico'});}resolve(payload);});});};export{messaging};","map":{"version":3,"names":["initializeApp","getApps","getMessaging","getToken","onMessage","getAuth","getDatabase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","VAPID_KEY","app","length","auth","database","messaging","window","navigator","serviceWorkerRegistration","notificationPermissionRequested","addEventListener","_asyncToGenerator","serviceWorker","register","scope","console","log","token","requestNotificationPermission","error","_ref2","permission","Notification","requestPermission","getRegistration","tokenOptions","vapidKey","tokenError","apply","arguments","onMessageListener","Promise","resolve","payload","notification","title","body","icon"],"sources":["C:/Users/BLale/Desktop/Catty/config/firebase-web.js"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getDatabase } from 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",\r\n    authDomain: \"catty-message.firebaseapp.com\",\r\n    databaseURL: \"https://catty-message-default-rtdb.firebaseio.com\",\r\n    projectId: \"catty-message\",\r\n    storageBucket: \"catty-message.firebasestorage.app\",\r\n    messagingSenderId: \"762334512293\",\r\n    appId: \"1:762334512293:web:d3edbbb5de41c29c43f94c\",\r\n    measurementId: \"G-F4YVW57WKW\"\r\n};\r\n\r\n// VAPID anahtarı - Firebase Console > Project Settings > Cloud Messaging > Web Push certificates\r\nconst VAPID_KEY = \"BGYiqKyl_5og4vKmlsCTDdWzrrppkdJ4mQNSQEtnStBPFab33zBDkw0yaCOcKkA4Hn3FlbScgkFvNd6NNR75_o8\";\r\n\r\nlet app;\r\nif (!getApps().length) {\r\n  app = initializeApp(firebaseConfig);\r\n} else {\r\n  app = getApps()[0];\r\n}\r\n\r\nexport const auth = getAuth(app);\r\nexport const database = getDatabase(app);\r\nlet messaging = null;\r\n\r\n// Tarayıcı desteğini kontrol et\r\nif (typeof window !== 'undefined' && 'serviceWorker' in navigator) {\r\n  messaging = getMessaging(app);\r\n}\r\n\r\n// Service worker'ı kaydet\r\nlet serviceWorkerRegistration = null;\r\nlet notificationPermissionRequested = false; // Bildirimin bir kez istenmesini sağlamak için\r\n\r\nif (typeof window !== 'undefined' && 'serviceWorker' in navigator) {\r\n  try {\r\n    window.addEventListener('load', async () => {\r\n      try {\r\n        serviceWorkerRegistration = await navigator.serviceWorker.register('/firebase-messaging-sw.js', {\r\n          scope: '/'\r\n        });\r\n        console.log('Service Worker başarıyla kaydedildi:', serviceWorkerRegistration.scope);\r\n        \r\n        // SW kaydından sonra otomatik olarak bildirim izni iste (eğer daha önce istenmemişse)\r\n        if (!notificationPermissionRequested) {\r\n          notificationPermissionRequested = true;\r\n          const token = await requestNotificationPermission();\r\n          if (token) {\r\n            console.log('FCM Token otomatik olarak alındı:', token);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Service Worker kaydı başarısız oldu:', error);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Service Worker hatası:', error);\r\n  }\r\n}\r\n\r\nexport const requestNotificationPermission = async () => {\r\n  try {\r\n    if (typeof window === 'undefined' || !('Notification' in window)) {\r\n      console.log('Bu tarayıcı bildirim desteği sunmuyor');\r\n      return null;\r\n    }\r\n\r\n    const permission = await Notification.requestPermission();\r\n    console.log('Bildirim izni durumu:', permission);\r\n    \r\n    if (permission === 'granted') {\r\n      if (!messaging) {\r\n        console.error('Messaging servisi başlatılamadı');\r\n        return null;\r\n      }\r\n      \r\n      try {\r\n        // Service worker kaydını yenile\r\n        if (!serviceWorkerRegistration) {\r\n          serviceWorkerRegistration = await navigator.serviceWorker.getRegistration('/firebase-messaging-sw.js');\r\n        }\r\n        \r\n        // Service worker'ı kullanarak token al\r\n        const tokenOptions = {\r\n          vapidKey: VAPID_KEY\r\n        };\r\n\r\n        // Eğer service worker kaydı varsa ekle\r\n        if (serviceWorkerRegistration) {\r\n          tokenOptions.serviceWorkerRegistration = serviceWorkerRegistration;\r\n        }\r\n\r\n        const token = await getToken(messaging, tokenOptions);\r\n        console.log('FCM Token alındı:', token);\r\n        \r\n        // Test bildirimini kaldırıyoruz\r\n        // Sadece kullanıcı istediğinde (ChatListScreen'deki bildirim butonuna tıkladığında) gösterelim\r\n        \r\n        return token;\r\n      } catch (tokenError) {\r\n        console.error('Token alma hatası:', tokenError);\r\n        return null;\r\n      }\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Bildirim izni hatası:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    if (!messaging) {\r\n      console.error('Messaging servisi başlatılamadı, bildirimler çalışmayacak');\r\n      resolve(null);\r\n      return;\r\n    }\r\n    \r\n    onMessage(messaging, (payload) => {\r\n      console.log('Ön planda yeni mesaj alındı:', payload);\r\n      \r\n      // Bildirim göster (uygulama açıkken)\r\n      if (payload.notification) {\r\n        new Notification(payload.notification.title, {\r\n          body: payload.notification.body,\r\n          icon: payload.notification.icon || '/favicon.ico'\r\n        });\r\n      }\r\n      \r\n      resolve(payload);\r\n    });\r\n  });\r\n\r\nexport { messaging }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}