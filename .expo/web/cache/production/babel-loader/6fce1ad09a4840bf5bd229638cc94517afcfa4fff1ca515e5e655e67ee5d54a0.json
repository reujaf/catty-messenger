{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{initializeApp,getApps}from'firebase/app';import{getMessaging,getToken,onMessage}from'firebase/messaging';import{getAuth}from'firebase/auth';import{getDatabase}from'firebase/database';var firebaseConfig={apiKey:\"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",authDomain:\"catty-message.firebaseapp.com\",databaseURL:\"https://catty-message-default-rtdb.firebaseio.com\",projectId:\"catty-message\",storageBucket:\"catty-message.firebasestorage.app\",messagingSenderId:\"762334512293\",appId:\"1:762334512293:web:d3edbbb5de41c29c43f94c\",measurementId:\"G-F4YVW57WKW\"};var VAPID_KEY=\"BGYiqKyl_5og4vKmlsCTDdWzrrppkdJ4mQNSQEtnStBPFab33zBDkw0yaCOcKkA4Hn3FlbScgkFvNd6NNR75_o8\";var app;if(!getApps().length){app=initializeApp(firebaseConfig);}else{app=getApps()[0];}export var auth=getAuth(app);export var database=getDatabase(app);var messaging=getMessaging(app);var serviceWorkerRegistration=null;if(typeof window!=='undefined'&&'serviceWorker'in navigator){try{navigator.serviceWorker.register('/firebase-messaging-sw.js').then(function(registration){console.log('Service Worker başarıyla kaydedildi:',registration.scope);serviceWorkerRegistration=registration;}).catch(function(err){console.error('Service Worker kaydı başarısız oldu:',err);});}catch(error){console.error('Service Worker hatası:',error);}}export var requestNotificationPermission=function(){var _ref=_asyncToGenerator(function*(){try{if(typeof window==='undefined'||!('Notification'in window)){console.log('Bu tarayıcı bildirim desteği sunmuyor');return null;}var permission=yield Notification.requestPermission();console.log('Bildirim izni durumu:',permission);if(permission==='granted'){var tokenOptions={vapidKey:VAPID_KEY};if(serviceWorkerRegistration){tokenOptions.serviceWorkerRegistration=serviceWorkerRegistration;}var token=yield getToken(messaging,tokenOptions);console.log('FCM Token alındı:',token);if(token){new Notification('Bildirimler Etkin',{body:'Artık Catty Message bildirimleri alacaksınız',icon:'/favicon.ico'});}return token;}return null;}catch(error){console.error('Bildirim izni hatası:',error);return null;}});return function requestNotificationPermission(){return _ref.apply(this,arguments);};}();export var onMessageListener=function onMessageListener(){return new Promise(function(resolve){onMessage(messaging,function(payload){console.log('Ön planda yeni mesaj alındı:',payload);if(payload.notification){new Notification(payload.notification.title,{body:payload.notification.body,icon:payload.notification.icon||'/favicon.ico'});}resolve(payload);});});};export{messaging};","map":{"version":3,"names":["initializeApp","getApps","getMessaging","getToken","onMessage","getAuth","getDatabase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","VAPID_KEY","app","length","auth","database","messaging","serviceWorkerRegistration","window","navigator","serviceWorker","register","then","registration","console","log","scope","catch","err","error","requestNotificationPermission","_ref","_asyncToGenerator","permission","Notification","requestPermission","tokenOptions","vapidKey","token","body","icon","apply","arguments","onMessageListener","Promise","resolve","payload","notification","title"],"sources":["C:/Users/BLale/Desktop/Catty/config/firebase-web.js"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getDatabase } from 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCyUfIEyDGmwGZJU-VTbifk8ZhAStYRn24\",\r\n    authDomain: \"catty-message.firebaseapp.com\",\r\n    databaseURL: \"https://catty-message-default-rtdb.firebaseio.com\",\r\n    projectId: \"catty-message\",\r\n    storageBucket: \"catty-message.firebasestorage.app\",\r\n    messagingSenderId: \"762334512293\",\r\n    appId: \"1:762334512293:web:d3edbbb5de41c29c43f94c\",\r\n    measurementId: \"G-F4YVW57WKW\"\r\n};\r\n\r\n// VAPID anahtarı - Firebase Console > Project Settings > Cloud Messaging > Web Push certificates\r\nconst VAPID_KEY = \"BGYiqKyl_5og4vKmlsCTDdWzrrppkdJ4mQNSQEtnStBPFab33zBDkw0yaCOcKkA4Hn3FlbScgkFvNd6NNR75_o8\";\r\n\r\nlet app;\r\nif (!getApps().length) {\r\n  app = initializeApp(firebaseConfig);\r\n} else {\r\n  app = getApps()[0];\r\n}\r\n\r\nexport const auth = getAuth(app);\r\nexport const database = getDatabase(app);\r\nconst messaging = getMessaging(app);\r\n\r\n// Service worker'ı kaydet\r\nlet serviceWorkerRegistration = null;\r\nif (typeof window !== 'undefined' && 'serviceWorker' in navigator) {\r\n  try {\r\n    navigator.serviceWorker\r\n      .register('/firebase-messaging-sw.js')\r\n      .then((registration) => {\r\n        console.log('Service Worker başarıyla kaydedildi:', registration.scope);\r\n        serviceWorkerRegistration = registration;\r\n      })\r\n      .catch((err) => {\r\n        console.error('Service Worker kaydı başarısız oldu:', err);\r\n      });\r\n  } catch (error) {\r\n    console.error('Service Worker hatası:', error);\r\n  }\r\n}\r\n\r\nexport const requestNotificationPermission = async () => {\r\n  try {\r\n    if (typeof window === 'undefined' || !('Notification' in window)) {\r\n      console.log('Bu tarayıcı bildirim desteği sunmuyor');\r\n      return null;\r\n    }\r\n\r\n    const permission = await Notification.requestPermission();\r\n    console.log('Bildirim izni durumu:', permission);\r\n    \r\n    if (permission === 'granted') {\r\n      // Service worker'ı kullanarak token al\r\n      const tokenOptions = {\r\n        vapidKey: VAPID_KEY\r\n      };\r\n\r\n      // Eğer service worker kaydı varsa ekle\r\n      if (serviceWorkerRegistration) {\r\n        tokenOptions.serviceWorkerRegistration = serviceWorkerRegistration;\r\n      }\r\n\r\n      const token = await getToken(messaging, tokenOptions);\r\n      console.log('FCM Token alındı:', token);\r\n      \r\n      // Kullanıcıya bildirim izni verildiğini göstermek için küçük bir test bildirimi\r\n      if (token) {\r\n        new Notification('Bildirimler Etkin', {\r\n          body: 'Artık Catty Message bildirimleri alacaksınız',\r\n          icon: '/favicon.ico'\r\n        });\r\n      }\r\n      \r\n      return token;\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Bildirim izni hatası:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    onMessage(messaging, (payload) => {\r\n      console.log('Ön planda yeni mesaj alındı:', payload);\r\n      \r\n      // Bildirim göster (uygulama açıkken)\r\n      if (payload.notification) {\r\n        new Notification(payload.notification.title, {\r\n          body: payload.notification.body,\r\n          icon: payload.notification.icon || '/favicon.ico'\r\n        });\r\n      }\r\n      \r\n      resolve(payload);\r\n    });\r\n  });\r\n\r\nexport { messaging }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}