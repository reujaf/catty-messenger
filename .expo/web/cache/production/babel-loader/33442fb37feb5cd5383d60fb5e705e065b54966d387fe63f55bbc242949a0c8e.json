{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useCallback}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Image from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import Alert from\"react-native-web/dist/exports/Alert\";import{ref,get,query,orderByChild,limitToLast,onValue,off,update}from'firebase/database';import{database,auth}from'../config/firebase-web';import{requestNotificationPermission,onMessageListener}from'../config/firebase-web';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var ChatListScreen=function ChatListScreen(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chats=_useState2[0],setChats=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),unsubscribers=_useState6[0],setUnsubscribers=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),notificationToken=_useState8[0],setNotificationToken=_useState8[1];useEffect(function(){var isMounted=true;var chatUnsubscriber=null;var messagingUnsubscriber=null;var setupNotifications=function(){var _ref2=_asyncToGenerator(function*(){if(\"web\"==='web'){try{var isMobileWeb=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(typeof navigator!=='undefined'?navigator.userAgent:'');var platformInfo=isMobileWeb?'mobile-web':'web';console.log(`Bildirim kurulumu başlatılıyor. Platform: ${platformInfo}, UA: ${navigator.userAgent.substring(0,50)}...`);var token=yield requestNotificationPermission();if(token){setNotificationToken(token);var currentUser=auth.currentUser;if(currentUser){var _isMobileWeb=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(typeof navigator!=='undefined'?navigator.userAgent:'');var _platformInfo=_isMobileWeb?'mobile-web':'web';var userRef=ref(database,`users/${currentUser.uid}`);yield update(userRef,{fcmToken:token,platform:_platformInfo,lastTokenUpdate:new Date().toISOString(),lastLoginAt:new Date().toISOString(),userAgent:typeof navigator!=='undefined'?navigator.userAgent:'unknown'});console.log(`Bildirim token kullanıcı profiline kaydedildi. Platform: ${_platformInfo}`);}}console.log('Ön plan bildirim dinleyicisi başlatılıyor...');onMessageListener().then(function(payload){if(payload){var _ref3=payload.notification||{},title=_ref3.title,body=_ref3.body;console.log('Web Push bildirimi alındı:',{title:title,body:body});try{var beep=function beep(){if('AudioContext'in window||'webkitAudioContext'in window){var audioCtx=new(window.AudioContext||window.webkitAudioContext)();var oscillator=audioCtx.createOscillator();var gainNode=audioCtx.createGain();oscillator.type='sine';oscillator.frequency.value=800;gainNode.gain.value=0.1;oscillator.connect(gainNode);gainNode.connect(audioCtx.destination);oscillator.start();setTimeout(function(){oscillator.stop();},200);}};beep();if(isMobileWeb&&'Notification'in window&&Notification.permission==='granted'){setTimeout(function(){new Notification(title||'Yeni mesaj',{body:body||'Yeni bir mesaj aldınız',icon:'/favicon.ico',tag:`direct-message-${Date.now()}`,renotify:true});},100);}}catch(soundError){console.error('Bildirim sesi çalınamadı:',soundError);}loadChats();}}).catch(function(err){return console.error('Bildirim alınamadı:',err);});if('serviceWorker'in navigator){console.log('Service worker olay dinleyicisi ekleniyor');navigator.serviceWorker.onmessage=null;navigator.serviceWorker.onmessage=function(event){console.log('Service worker mesajı alındı:',event.data);if(event.data&&(event.data.type==='NOTIFICATION_RECEIVED'||event.data.type==='NOTIFICATION_CLICKED')){loadChats();}};navigator.serviceWorker.ready.then(function(registration){console.log('Service worker hazır:',registration.scope);}).catch(function(err){console.error('Service worker erişim hatası:',err);});}}catch(error){console.error('Bildirim kurulumu hatası:',error);}}else{console.log('Mobil platform için bildirim kurulumu yapılacak');}});return function setupNotifications(){return _ref2.apply(this,arguments);};}();var loadChats=function(){var _ref4=_asyncToGenerator(function*(){try{var currentUser=auth.currentUser;if(!currentUser){navigation.replace('Login');setLoading(false);return;}var chatsRef=ref(database,'privateChats');chatUnsubscriber=onValue(chatsRef,function(){var _ref5=_asyncToGenerator(function*(snapshot){if(!isMounted)return;try{if(!snapshot.exists()){setChats([]);setLoading(false);return;}var chatsData=snapshot.val();var newChats=[];var newUnsubscribers={};for(var chatId in chatsData){if(chatId.includes(currentUser.uid)){try{var otherUserId=chatId.split('_').find(function(id){return id!==currentUser.uid;});var userRef=ref(database,`users/${otherUserId}`);var userSnapshot=yield get(userRef);if(userSnapshot.exists()){var otherUser=_objectSpread({uid:otherUserId},userSnapshot.val());var messagesRef=ref(database,`privateChats/${chatId}/messages`);var messagesSnapshot=yield get(query(messagesRef,limitToLast(1)));if(messagesSnapshot.exists()){var messages=messagesSnapshot.val();var lastMessage=Object.values(messages)[0];newChats.push({chatId:chatId,otherUserId:otherUser.uid,otherUserEmail:otherUser.email,otherUserProfileImage:otherUser.profileImage,lastMessage:lastMessage.text,timestamp:lastMessage.timestamp,isCurrentUser:lastMessage.senderId===currentUser.uid});}}}catch(error){console.error('Sohbet işleme hatası:',error);}}}if(isMounted){setChats(newChats.sort(function(a,b){return b.timestamp-a.timestamp;}));setUnsubscribers(newUnsubscribers);}}catch(error){console.error('Sohbet listener hatası:',error);}finally{if(isMounted){setLoading(false);}}});return function(_x){return _ref5.apply(this,arguments);};}());}catch(error){console.error('Başlangıç kurulum hatası:',error);if(isMounted){setLoading(false);}}});return function loadChats(){return _ref4.apply(this,arguments);};}();loadChats().then(function(){if(\"web\"==='web'){setupNotifications();}});return function(){isMounted=false;if(chatUnsubscriber){chatUnsubscriber();}if(messagingUnsubscriber){messagingUnsubscriber();}Object.values(unsubscribers).forEach(function(unsubscribe){return unsubscribe();});};},[navigation]);var handleChatPress=useCallback(function(chat){navigation.navigate('Chat',{currentUserId:auth.currentUser.uid,otherUserId:chat.otherUserId,chatId:chat.chatId,otherUserEmail:chat.otherUserEmail});},[navigation]);var handleNewChat=useCallback(function(){navigation.navigate('Users');},[navigation]);var handleRequestNotification=useCallback(_asyncToGenerator(function*(){if(\"web\"!=='web'){Alert.alert('Bilgi','Bildirim izni istemek sadece web platformunda gereklidir');return;}try{console.log('Bildirim izni isteniyor...');var token=yield requestNotificationPermission();if(token){setNotificationToken(token);try{new Notification('Bildirimler Etkin',{body:'Artık Catty Message bildirimleri alacaksınız',icon:'/favicon.ico'});}catch(notifError){console.error('Test bildirimi gösterme hatası:',notifError);}Alert.alert('Başarılı','Bildirim izni verildi. Artık mesaj bildirimleri alacaksınız.');var currentUser=auth.currentUser;if(currentUser){var isMobileWeb=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(typeof navigator!=='undefined'?navigator.userAgent:'');var platformInfo=isMobileWeb?'mobile-web':'web';var userRef=ref(database,`users/${currentUser.uid}`);yield update(userRef,{fcmToken:token,platform:platformInfo,lastTokenUpdate:new Date().toISOString(),userAgent:typeof navigator!=='undefined'?navigator.userAgent:'unknown'});console.log(`Bildirim token kullanıcı profiline kaydedildi. Platform: ${platformInfo}`);}}else{Alert.alert('Bildirim İzni','Bildirim izni verilmedi. Mesaj bildirimleri almak için izin vermeniz gerekiyor.');}}catch(error){console.error('Bildirim izni hatası:',error);Alert.alert('Hata','Bildirim izni istenirken bir hata oluştu.');}}),[]);var renderChatItem=useCallback(function(_ref7){var _item$otherUserEmail,_item$otherUserEmail$;var item=_ref7.item;return _jsxs(TouchableOpacity,{style:styles.chatItem,onPress:function onPress(){return handleChatPress(item);},children:[_jsx(View,{style:styles.avatarContainer,children:item.otherUserProfileImage?_jsx(Image,{source:{uri:item.otherUserProfileImage},style:styles.avatar,onError:function onError(e){return console.log('Resim yükleme hatası:',e.nativeEvent.error);}}):_jsx(View,{style:[styles.avatar,styles.placeholderAvatar],children:_jsx(Text,{style:styles.placeholderText,children:((_item$otherUserEmail=item.otherUserEmail)==null?void 0:(_item$otherUserEmail$=_item$otherUserEmail.charAt(0))==null?void 0:_item$otherUserEmail$.toUpperCase())||'?'})})}),_jsxs(View,{style:styles.chatInfo,children:[_jsx(Text,{style:styles.userEmail,children:item.otherUserEmail}),_jsxs(Text,{style:styles.lastMessage,numberOfLines:1,children:[item.isCurrentUser?'Siz: ':'',item.lastMessage]})]}),_jsx(Text,{style:styles.timestamp,children:new Date(item.timestamp).toLocaleTimeString('tr-TR',{hour:'2-digit',minute:'2-digit'})})]});},[handleChatPress]);if(loading){return _jsxs(View,{style:styles.loadingContainer,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#007AFF\"}),_jsx(Text,{style:styles.loadingText,children:\"Sohbetler y\\xFCkleniyor...\"})]});}return _jsxs(SafeAreaView,{style:styles.container,children:[_jsxs(View,{style:styles.header,children:[_jsx(Text,{style:styles.headerTitle,children:\"Sohbetler\"}),_jsxs(View,{style:styles.headerButtons,children:[\"web\"==='web'&&!notificationToken&&_jsx(TouchableOpacity,{style:styles.notificationButton,onPress:handleRequestNotification,children:_jsx(Text,{style:styles.notificationButtonText,children:\"Bildirimleri A\\xE7\"})}),_jsx(TouchableOpacity,{style:styles.newChatButton,onPress:handleNewChat,children:_jsx(Text,{style:styles.newChatButtonText,children:\"Yeni Sohbet\"})})]})]}),chats.length===0?_jsxs(View,{style:styles.emptyContainer,children:[_jsx(Text,{style:styles.emptyText,children:\"Hen\\xFCz mesaj\\u0131n\\u0131z yok\"}),_jsx(TouchableOpacity,{style:styles.startChatButton,onPress:handleNewChat,children:_jsx(Text,{style:styles.startChatButtonText,children:\"Yeni Sohbet Ba\\u015Flat\"})})]}):_jsx(FlatList,{data:chats,renderItem:renderChatItem,keyExtractor:function keyExtractor(item){return item.chatId;},contentContainerStyle:styles.listContainer})]});};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff'},loadingContainer:{flex:1,justifyContent:'center',alignItems:'center'},loadingText:{marginTop:10,fontSize:16,color:'#666'},header:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',padding:16,borderBottomWidth:1,borderBottomColor:'#e5e7eb',backgroundColor:'#fff'},headerTitle:{fontSize:24,fontWeight:'bold',color:'#1f2937'},headerButtons:{flexDirection:'row'},newChatButton:{backgroundColor:'#007AFF',paddingHorizontal:16,paddingVertical:8,borderRadius:20},newChatButtonText:{color:'#fff',fontWeight:'600'},notificationButton:{backgroundColor:'#4CAF50',paddingHorizontal:16,paddingVertical:8,borderRadius:20,marginRight:8},notificationButtonText:{color:'#fff',fontWeight:'600'},listContainer:{padding:16},chatItem:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',padding:12,backgroundColor:'#fff',borderRadius:12,borderWidth:1,borderColor:'#e5e7eb',marginBottom:8},avatarContainer:{marginRight:12},avatar:{width:50,height:50,borderRadius:25},placeholderAvatar:{backgroundColor:'#e5e7eb',justifyContent:'center',alignItems:'center'},placeholderText:{fontSize:24,fontWeight:'bold',color:'#9ca3af'},chatInfo:{flex:1,marginRight:12},userEmail:{fontSize:16,fontWeight:'600',color:'#1f2937',marginBottom:4},lastMessage:{fontSize:14,color:'#6b7280'},timestamp:{fontSize:12,color:'#9ca3af'},emptyContainer:{flex:1,justifyContent:'center',alignItems:'center',padding:16},emptyText:{fontSize:18,color:'#6b7280',marginBottom:16},startChatButton:{backgroundColor:'#007AFF',paddingHorizontal:24,paddingVertical:12,borderRadius:24},startChatButtonText:{color:'#fff',fontWeight:'600',fontSize:16}});export default ChatListScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","StyleSheet","View","Text","FlatList","TouchableOpacity","SafeAreaView","ActivityIndicator","Image","Platform","Alert","ref","get","query","orderByChild","limitToLast","onValue","off","update","database","auth","requestNotificationPermission","onMessageListener","jsx","_jsx","jsxs","_jsxs","ChatListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","chats","setChats","_useState3","_useState4","loading","setLoading","_useState5","_useState6","unsubscribers","setUnsubscribers","_useState7","_useState8","notificationToken","setNotificationToken","isMounted","chatUnsubscriber","messagingUnsubscriber","setupNotifications","_ref2","_asyncToGenerator","isMobileWeb","test","navigator","userAgent","platformInfo","console","log","substring","token","currentUser","userRef","uid","fcmToken","platform","lastTokenUpdate","Date","toISOString","lastLoginAt","then","payload","_ref3","notification","title","body","beep","window","audioCtx","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","type","frequency","value","gain","connect","destination","start","setTimeout","stop","Notification","permission","icon","tag","now","renotify","soundError","error","loadChats","catch","err","serviceWorker","onmessage","event","data","ready","registration","scope","apply","arguments","_ref4","replace","chatsRef","_ref5","snapshot","exists","chatsData","val","newChats","newUnsubscribers","chatId","includes","otherUserId","split","find","id","userSnapshot","otherUser","_objectSpread","messagesRef","messagesSnapshot","messages","lastMessage","Object","values","push","otherUserEmail","email","otherUserProfileImage","profileImage","text","timestamp","isCurrentUser","senderId","sort","a","b","_x","forEach","unsubscribe","handleChatPress","chat","navigate","currentUserId","handleNewChat","handleRequestNotification","alert","notifError","renderChatItem","_ref7","_item$otherUserEmail","_item$otherUserEmail$","item","style","styles","chatItem","onPress","children","avatarContainer","source","uri","avatar","onError","e","nativeEvent","placeholderAvatar","placeholderText","charAt","toUpperCase","chatInfo","userEmail","numberOfLines","toLocaleTimeString","hour","minute","loadingContainer","size","color","loadingText","container","header","headerTitle","headerButtons","notificationButton","notificationButtonText","newChatButton","newChatButtonText","length","emptyContainer","emptyText","startChatButton","startChatButtonText","renderItem","keyExtractor","contentContainerStyle","listContainer","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","flexDirection","padding","borderBottomWidth","borderBottomColor","fontWeight","paddingHorizontal","paddingVertical","borderRadius","marginRight","borderWidth","borderColor","marginBottom","width","height"],"sources":["C:/Users/BLale/Desktop/Catty/screens/ChatListScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Image,\r\n  Platform,\r\n  Alert,\r\n} from 'react-native';\r\nimport { ref, get, query, orderByChild, limitToLast, onValue, off, update } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase-web';\r\nimport { requestNotificationPermission, onMessageListener } from '../config/firebase-web';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [unsubscribers, setUnsubscribers] = useState({});\r\n  const [notificationToken, setNotificationToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let chatUnsubscriber = null;\r\n    \r\n    // Kullanıcı FCM token'ını izlemek için\r\n    let messagingUnsubscriber = null;\r\n\r\n    const setupNotifications = async () => {\r\n      if (Platform.OS === 'web') {\r\n        try {\r\n          // Platform bilgisini tespit et\r\n          const isMobileWeb = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n            typeof navigator !== 'undefined' ? navigator.userAgent : ''\r\n          );\r\n          const platformInfo = isMobileWeb ? 'mobile-web' : 'web';\r\n          console.log(`Bildirim kurulumu başlatılıyor. Platform: ${platformInfo}, UA: ${navigator.userAgent.substring(0, 50)}...`);\r\n\r\n          // Bildirim izni iste ve token al\r\n          const token = await requestNotificationPermission();\r\n          if (token) {\r\n            setNotificationToken(token);\r\n            \r\n            // Token'ı kullanıcı verilerine kaydet\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n              // Platform bilgisini tespit et\r\n              const isMobileWeb = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n                typeof navigator !== 'undefined' ? navigator.userAgent : ''\r\n              );\r\n              const platformInfo = isMobileWeb ? 'mobile-web' : 'web';\r\n              \r\n              const userRef = ref(database, `users/${currentUser.uid}`);\r\n              await update(userRef, {\r\n                fcmToken: token,\r\n                platform: platformInfo,\r\n                lastTokenUpdate: new Date().toISOString(),\r\n                lastLoginAt: new Date().toISOString(),\r\n                userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown'\r\n              });\r\n              console.log(`Bildirim token kullanıcı profiline kaydedildi. Platform: ${platformInfo}`);\r\n            }\r\n          }\r\n\r\n          // Mesaj dinleyicisini başlat\r\n          console.log('Ön plan bildirim dinleyicisi başlatılıyor...');\r\n          onMessageListener()\r\n            .then(payload => {\r\n              // Yeni mesaj geldiğinde işle\r\n              if (payload) {\r\n                const { title, body } = payload.notification || {};\r\n                console.log('Web Push bildirimi alındı:', { title, body });\r\n                \r\n                // Mesaj ses efekti oynat\r\n                try {\r\n                  // Basit bir bip sesi çal\r\n                  const beep = () => {\r\n                    if ('AudioContext' in window || 'webkitAudioContext' in window) {\r\n                      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n                      const oscillator = audioCtx.createOscillator();\r\n                      const gainNode = audioCtx.createGain();\r\n                      \r\n                      oscillator.type = 'sine';\r\n                      oscillator.frequency.value = 800;\r\n                      gainNode.gain.value = 0.1;\r\n                      \r\n                      oscillator.connect(gainNode);\r\n                      gainNode.connect(audioCtx.destination);\r\n                      \r\n                      oscillator.start();\r\n                      \r\n                      setTimeout(() => {\r\n                        oscillator.stop();\r\n                      }, 200);\r\n                    }\r\n                  };\r\n                  \r\n                  beep();\r\n                  \r\n                  // Özellikle Chrome Mobile için doğrudan bildirim göster\r\n                  if (isMobileWeb && 'Notification' in window && Notification.permission === 'granted') {\r\n                    setTimeout(() => {\r\n                      new Notification(title || 'Yeni mesaj', {\r\n                        body: body || 'Yeni bir mesaj aldınız',\r\n                        icon: '/favicon.ico',\r\n                        tag: `direct-message-${Date.now()}`,\r\n                        renotify: true\r\n                      });\r\n                    }, 100);\r\n                  }\r\n                } catch (soundError) {\r\n                  console.error('Bildirim sesi çalınamadı:', soundError);\r\n                }\r\n                \r\n                // Sohbetleri yeniden yükle\r\n                loadChats();\r\n              }\r\n            })\r\n            .catch(err => console.error('Bildirim alınamadı:', err));\r\n            \r\n          // Service worker olaylarını dinle\r\n          if ('serviceWorker' in navigator) {\r\n            console.log('Service worker olay dinleyicisi ekleniyor');\r\n            \r\n            // Önceki dinleyicileri temizle (varsa)\r\n            navigator.serviceWorker.onmessage = null;\r\n            \r\n            // Yeni dinleyici ekle\r\n            navigator.serviceWorker.onmessage = (event) => {\r\n              console.log('Service worker mesajı alındı:', event.data);\r\n              if (event.data && (event.data.type === 'NOTIFICATION_RECEIVED' || event.data.type === 'NOTIFICATION_CLICKED')) {\r\n                // Sohbetleri yeniden yükle\r\n                loadChats();\r\n              }\r\n            };\r\n            \r\n            // Kayıtlı service worker'a ulaşma girişimi\r\n            navigator.serviceWorker.ready.then(registration => {\r\n              console.log('Service worker hazır:', registration.scope);\r\n            }).catch(err => {\r\n              console.error('Service worker erişim hatası:', err);\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Bildirim kurulumu hatası:', error);\r\n        }\r\n      } else {\r\n        // Mobil platformlar için burada FCM yapılandırması ve token kaydı yapılabilir\r\n        console.log('Mobil platform için bildirim kurulumu yapılacak');\r\n      }\r\n    };\r\n\r\n    const loadChats = async () => {\r\n      try {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n          navigation.replace('Login');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const chatsRef = ref(database, 'privateChats');\r\n        \r\n        chatUnsubscriber = onValue(chatsRef, async (snapshot) => {\r\n          if (!isMounted) return;\r\n\r\n          try {\r\n            if (!snapshot.exists()) {\r\n              setChats([]);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n\r\n            const chatsData = snapshot.val();\r\n            const newChats = [];\r\n            const newUnsubscribers = {};\r\n            \r\n            for (const chatId in chatsData) {\r\n              if (chatId.includes(currentUser.uid)) {\r\n                try {\r\n                  const otherUserId = chatId.split('_').find(id => id !== currentUser.uid);\r\n                  const userRef = ref(database, `users/${otherUserId}`);\r\n                  const userSnapshot = await get(userRef);\r\n                  \r\n                  if (userSnapshot.exists()) {\r\n                    const otherUser = {\r\n                      uid: otherUserId,\r\n                      ...userSnapshot.val()\r\n                    };\r\n                    \r\n                    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n                    const messagesSnapshot = await get(query(messagesRef, limitToLast(1)));\r\n                    \r\n                    if (messagesSnapshot.exists()) {\r\n                      const messages = messagesSnapshot.val();\r\n                      const lastMessage = Object.values(messages)[0];\r\n                      \r\n                      newChats.push({\r\n                        chatId,\r\n                        otherUserId: otherUser.uid,\r\n                        otherUserEmail: otherUser.email,\r\n                        otherUserProfileImage: otherUser.profileImage,\r\n                        lastMessage: lastMessage.text,\r\n                        timestamp: lastMessage.timestamp,\r\n                        isCurrentUser: lastMessage.senderId === currentUser.uid\r\n                      });\r\n                    }\r\n                  }\r\n                } catch (error) {\r\n                  console.error('Sohbet işleme hatası:', error);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (isMounted) {\r\n              setChats(newChats.sort((a, b) => b.timestamp - a.timestamp));\r\n              setUnsubscribers(newUnsubscribers);\r\n            }\r\n          } catch (error) {\r\n            console.error('Sohbet listener hatası:', error);\r\n          } finally {\r\n            if (isMounted) {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Başlangıç kurulum hatası:', error);\r\n        if (isMounted) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Önce loadChats çağrılsın, sonra setupNotifications\r\n    loadChats().then(() => {\r\n      if (Platform.OS === 'web') {\r\n        setupNotifications();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (chatUnsubscriber) {\r\n        chatUnsubscriber();\r\n      }\r\n      if (messagingUnsubscriber) {\r\n        messagingUnsubscriber();\r\n      }\r\n      Object.values(unsubscribers).forEach(unsubscribe => unsubscribe());\r\n    };\r\n  }, [navigation]);\r\n\r\n  const handleChatPress = useCallback((chat) => {\r\n    navigation.navigate('Chat', {\r\n      currentUserId: auth.currentUser.uid,\r\n      otherUserId: chat.otherUserId,\r\n      chatId: chat.chatId,\r\n      otherUserEmail: chat.otherUserEmail\r\n    });\r\n  }, [navigation]);\r\n\r\n  const handleNewChat = useCallback(() => {\r\n    navigation.navigate('Users');\r\n  }, [navigation]);\r\n  \r\n  // Bildirim izni istemek için ayrı bir işlev\r\n  const handleRequestNotification = useCallback(async () => {\r\n    if (Platform.OS !== 'web') {\r\n      Alert.alert('Bilgi', 'Bildirim izni istemek sadece web platformunda gereklidir');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('Bildirim izni isteniyor...');\r\n      const token = await requestNotificationPermission();\r\n      if (token) {\r\n        setNotificationToken(token);\r\n        \r\n        // Test bildirimi göster\r\n        try {\r\n          new Notification('Bildirimler Etkin', {\r\n            body: 'Artık Catty Message bildirimleri alacaksınız',\r\n            icon: '/favicon.ico'\r\n          });\r\n        } catch (notifError) {\r\n          console.error('Test bildirimi gösterme hatası:', notifError);\r\n        }\r\n        \r\n        Alert.alert('Başarılı', 'Bildirim izni verildi. Artık mesaj bildirimleri alacaksınız.');\r\n        \r\n        // Token'ı kullanıcı verilerine kaydet\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n          // Platform bilgisini tespit et\r\n          const isMobileWeb = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n            typeof navigator !== 'undefined' ? navigator.userAgent : ''\r\n          );\r\n          const platformInfo = isMobileWeb ? 'mobile-web' : 'web';\r\n          \r\n          const userRef = ref(database, `users/${currentUser.uid}`);\r\n          await update(userRef, {\r\n            fcmToken: token,\r\n            platform: platformInfo,\r\n            lastTokenUpdate: new Date().toISOString(),\r\n            userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown'\r\n          });\r\n          console.log(`Bildirim token kullanıcı profiline kaydedildi. Platform: ${platformInfo}`);\r\n        }\r\n      } else {\r\n        Alert.alert('Bildirim İzni', 'Bildirim izni verilmedi. Mesaj bildirimleri almak için izin vermeniz gerekiyor.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Bildirim izni hatası:', error);\r\n      Alert.alert('Hata', 'Bildirim izni istenirken bir hata oluştu.');\r\n    }\r\n  }, []);\r\n\r\n  const renderChatItem = useCallback(({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.chatItem}\r\n      onPress={() => handleChatPress(item)}\r\n    >\r\n      <View style={styles.avatarContainer}>\r\n        {item.otherUserProfileImage ? (\r\n          <Image\r\n            source={{ uri: item.otherUserProfileImage }}\r\n            style={styles.avatar}\r\n            onError={(e) => console.log('Resim yükleme hatası:', e.nativeEvent.error)}\r\n          />\r\n        ) : (\r\n          <View style={[styles.avatar, styles.placeholderAvatar]}>\r\n            <Text style={styles.placeholderText}>\r\n              {item.otherUserEmail?.charAt(0)?.toUpperCase() || '?'}\r\n            </Text>\r\n          </View>\r\n        )}\r\n      </View>\r\n      <View style={styles.chatInfo}>\r\n        <Text style={styles.userEmail}>{item.otherUserEmail}</Text>\r\n        <Text style={styles.lastMessage} numberOfLines={1}>\r\n          {item.isCurrentUser ? 'Siz: ' : ''}{item.lastMessage}\r\n        </Text>\r\n      </View>\r\n      <Text style={styles.timestamp}>\r\n        {new Date(item.timestamp).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  ), [handleChatPress]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text style={styles.loadingText}>Sohbetler yükleniyor...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Sohbetler</Text>\r\n        <View style={styles.headerButtons}>\r\n          {Platform.OS === 'web' && !notificationToken && (\r\n            <TouchableOpacity \r\n              style={styles.notificationButton} \r\n              onPress={handleRequestNotification}\r\n            >\r\n              <Text style={styles.notificationButtonText}>Bildirimleri Aç</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          <TouchableOpacity \r\n            style={styles.newChatButton} \r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.newChatButtonText}>Yeni Sohbet</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      {chats.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>Henüz mesajınız yok</Text>\r\n          <TouchableOpacity \r\n            style={styles.startChatButton}\r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.startChatButtonText}>Yeni Sohbet Başlat</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={renderChatItem}\r\n          keyExtractor={(item) => item.chatId}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  headerButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  newChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n  },\r\n  newChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  notificationButton: {\r\n    backgroundColor: '#4CAF50',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 20,\r\n    marginRight: 8,\r\n  },\r\n  notificationButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  chatItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    borderWidth: 1,\r\n    borderColor: '#e5e7eb',\r\n    marginBottom: 8,\r\n  },\r\n  avatarContainer: {\r\n    marginRight: 12,\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  placeholderAvatar: {\r\n    backgroundColor: '#e5e7eb',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  placeholderText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#9ca3af',\r\n  },\r\n  chatInfo: {\r\n    flex: 1,\r\n    marginRight: 12,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  lastMessage: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    color: '#9ca3af',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  emptyText: {\r\n    fontSize: 18,\r\n    color: '#6b7280',\r\n    marginBottom: 16,\r\n  },\r\n  startChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 24,\r\n    paddingVertical: 12,\r\n    borderRadius: 24,\r\n  },\r\n  startChatButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n  }\r\n});\r\n\r\nexport default ChatListScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}