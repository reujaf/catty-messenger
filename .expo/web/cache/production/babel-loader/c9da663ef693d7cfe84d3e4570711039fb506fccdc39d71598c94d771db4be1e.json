{"ast":null,"code":"var urlAlphabet='useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';var customAlphabet=function customAlphabet(alphabet){var defaultSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:21;return function(){var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;var id='';var i=size|0;while(i--){id+=alphabet[Math.random()*alphabet.length|0];}return id;};};var nanoid=function nanoid(){var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:21;var id='';var i=size|0;while(i--){id+=urlAlphabet[Math.random()*64|0];}return id;};export{nanoid,customAlphabet};","map":{"version":3,"names":["urlAlphabet","customAlphabet","alphabet","defaultSize","arguments","length","undefined","size","id","i","Math","random","nanoid"],"sources":["C:/Users/BLale/Desktop/Catty/node_modules/@react-navigation/routers/node_modules/nanoid/non-secure/index.js"],"sourcesContent":["// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size | 0\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n"],"mappings":"AAMA,GAAI,CAAAA,WAAW,CACb,kEAAkE,CAEpE,GAAI,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,QAAQ,CAAuB,IAArB,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC9C,MAAO,WAAwB,IAAvB,CAAAG,IAAI,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGD,WAAW,CACxB,GAAI,CAAAK,EAAE,CAAG,EAAE,CAEX,GAAI,CAAAC,CAAC,CAAGF,IAAI,CAAG,CAAC,CAChB,MAAOE,CAAC,EAAE,CAAE,CAEVD,EAAE,EAAIN,QAAQ,CAAEQ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGT,QAAQ,CAACG,MAAM,CAAI,CAAC,CAAC,CACvD,CACA,MAAO,CAAAG,EAAE,CACX,CAAC,CACH,CAAC,CAED,GAAI,CAAAI,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAkB,IAAd,CAAAL,IAAI,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACrB,GAAI,CAAAI,EAAE,CAAG,EAAE,CAEX,GAAI,CAAAC,CAAC,CAAGF,IAAI,CAAG,CAAC,CAChB,MAAOE,CAAC,EAAE,CAAE,CAEVD,EAAE,EAAIR,WAAW,CAAEU,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAAI,CAAC,CAAC,CAC7C,CACA,MAAO,CAAAH,EAAE,CACX,CAAC,CAED,OAASI,MAAM,CAAEX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}