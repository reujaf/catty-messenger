{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useRef}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import FlatList from\"react-native-web/dist/exports/FlatList\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Platform from\"react-native-web/dist/exports/Platform\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Alert from\"react-native-web/dist/exports/Alert\";import{ref,push,onValue,off,set,get}from'firebase/database';import{database,auth}from'../config/firebase-web';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var ChatScreen=function ChatScreen(_ref){var route=_ref.route;var _route$params=route.params,currentUserId=_route$params.currentUserId,otherUserId=_route$params.otherUserId,chatId=_route$params.chatId,otherUserEmail=_route$params.otherUserEmail;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newMessage=_useState4[0],setNewMessage=_useState4[1];var flatListRef=useRef(null);var inputHeight=useRef(new Animated.Value(0)).current;useEffect(function(){var messagesRef=ref(database,`privateChats/${chatId}/messages`);var handleData=function handleData(snapshot){var data=snapshot.val();if(data){var messagesArray=Object.entries(data).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),id=_ref3[0],message=_ref3[1];return _objectSpread({id:id},message);});setMessages(messagesArray);setTimeout(function(){var _flatListRef$current;(_flatListRef$current=flatListRef.current)==null?void 0:_flatListRef$current.scrollToEnd({animated:true});},100);}else{setMessages([]);}};onValue(messagesRef,handleData);return function(){off(messagesRef);};},[chatId]);var sendMessage=function sendMessage(){if(newMessage.trim()){var messagesRef=ref(database,`privateChats/${chatId}/messages`);var newMessageRef=push(messagesRef);var messageData={senderId:currentUserId,text:newMessage,timestamp:Date.now()};Animated.sequence([Animated.timing(inputHeight,{toValue:1,duration:200,useNativeDriver:false}),Animated.timing(inputHeight,{toValue:0,duration:200,useNativeDriver:false})]).start();set(newMessageRef,messageData).then(function(){setNewMessage('');setTimeout(function(){var _flatListRef$current2;(_flatListRef$current2=flatListRef.current)==null?void 0:_flatListRef$current2.scrollToEnd({animated:true});},100);sendNotificationToReceiver(otherUserId,messageData);}).catch(function(error){Alert.alert('Hata','Mesaj gönderilirken bir hata oluştu.');});}};var sendNotificationToReceiver=function(){var _ref4=_asyncToGenerator(function*(receiverId,messageData){try{var userRef=ref(database,`users/${receiverId}`);var userSnapshot=yield get(userRef);if(userSnapshot.exists()){var userData=userSnapshot.val();var fcmToken=userData.fcmToken;var currentUser=auth.currentUser;var senderEmail=currentUser.email;if(receiverId===currentUserId){console.log('Kendi mesajını gönderen kullanıcıya bildirim gönderilmiyor');return;}console.log(`Alıcı bilgileri: ${receiverId}, FCM Token: ${fcmToken==null?void 0:fcmToken.substring(0,15)}... Platform: ${userData.platform||'bilinmiyor'}`);if(fcmToken){var _userData$userAgent;console.log(`${\"web\"} platformundan bildirim gönderiliyor`);var notificationData={to:fcmToken,notification:{title:`Yeni mesaj: ${senderEmail}`,body:messageData.text,icon:'/favicon.ico',badge:'/badge.png',tag:`message-${Date.now()}`,sound:'default'},data:{type:'NEW_MESSAGE',chatId:chatId,senderId:currentUserId,senderEmail:senderEmail,otherUserId:otherUserId,otherUserEmail:otherUserEmail,messageText:messageData.text,timestamp:messageData.timestamp,url:typeof window!=='undefined'?window.location.origin:''},priority:'high',content_available:true};if(userData.platform==='mobile-web'||(_userData$userAgent=userData.userAgent)!=null&&_userData$userAgent.includes('Mobile')){notificationData.webpush={headers:{TTL:'86400',Urgency:'high'},notification:{requireInteraction:true,vibrate:[200,100,200]},fcm_options:{link:typeof window!=='undefined'?window.location.origin:''}};}var serverKey='AAAAsZ-Vz2w:APA91bG_zBWyqJZMbpZqZ8O00Tk8RR3-5CxjFEWQNZAKpQ6KcBnVVKhvxUMmrNtFLQzdpfXHTLbCnx4eHbHn5P2qpujmuxJUzf54ByQ-vQrDcTxhHJAHZFqVMH47fFxIvS0fzUoDPFGo';global.fetch('https://fcm.googleapis.com/fcm/send',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`key=${serverKey}`},body:JSON.stringify(notificationData)}).then(function(response){console.log(`FCM API yanıtı status: ${response.status}`);if(!response.ok){throw new Error(`HTTP hata, durum: ${response.status}`);}return response.json();}).then(function(data){var _userData$userAgent2;console.log('Bildirim başarıyla gönderildi:',data);if(\"web\"==='web'&&typeof window!=='undefined'&&'Notification'in window&&Notification.permission==='granted'&&(userData.platform==='mobile-web'||(_userData$userAgent2=userData.userAgent)!=null&&_userData$userAgent2.includes('Mobile'))){setTimeout(function(){try{new Notification(`Yeni mesaj: ${senderEmail}`,{body:messageData.text,icon:'/favicon.ico',tag:`direct-message-${Date.now()}`,renotify:true,vibrate:[200,100,200],requireInteraction:true});console.log('Mobil web için ek bildirim gösterildi');}catch(notifError){console.error('Browser bildirimi gösterme hatası:',notifError);}},300);}}).catch(function(error){console.error('FCM bildirim hatası:',error);if(\"web\"==='web'&&typeof window!=='undefined'&&'Notification'in window&&Notification.permission==='granted'){try{new Notification(`Yeni mesaj: ${senderEmail}`,{body:messageData.text,icon:'/favicon.ico',tag:`direct-message-fallback-${Date.now()}`,renotify:true,vibrate:[200,100,200]});console.log('FCM hatası - Doğrudan tarayıcı bildirimi gönderildi');}catch(notifError){console.error('Yedek bildirim hatası:',notifError);}}});}else{console.log(`Alıcının (${receiverId}) FCM token'ı bulunmuyor`);}}else{console.log(`Alıcı kullanıcı bulunamadı: ${receiverId}`);}}catch(error){console.error('Bildirim gönderme hatası:',error);}});return function sendNotificationToReceiver(_x,_x2){return _ref4.apply(this,arguments);};}();var renderMessage=function renderMessage(_ref5){var item=_ref5.item;var isCurrentUser=item.senderId===currentUserId;return _jsxs(Animated.View,{style:[styles.messageContainer,isCurrentUser?styles.currentUserMessage:styles.otherUserMessage,{transform:[{translateY:inputHeight.interpolate({inputRange:[0,1],outputRange:[0,-10]})}]}],children:[_jsx(Text,{style:styles.senderName,children:isCurrentUser?'Siz':otherUserEmail}),_jsx(Text,{style:[styles.messageText,isCurrentUser?styles.currentUserText:styles.otherUserText],children:item.text}),_jsx(Text,{style:[styles.timestamp,isCurrentUser?styles.currentUserTimestamp:styles.otherUserTimestamp],children:new Date(item.timestamp).toLocaleTimeString('tr-TR',{hour:'2-digit',minute:'2-digit'})})]});};return _jsxs(SafeAreaView,{style:styles.container,children:[_jsx(View,{style:styles.header,children:_jsxs(Text,{style:styles.headerText,children:[otherUserEmail,\" ile Sohbet\"]})}),_jsx(FlatList,{ref:flatListRef,data:messages,renderItem:renderMessage,keyExtractor:function keyExtractor(item){return item.id;},style:styles.messageList,contentContainerStyle:styles.messageListContent,inverted:false,onContentSizeChange:function onContentSizeChange(){var _flatListRef$current3;return(_flatListRef$current3=flatListRef.current)==null?void 0:_flatListRef$current3.scrollToEnd({animated:true});},onLayout:function onLayout(){var _flatListRef$current4;return(_flatListRef$current4=flatListRef.current)==null?void 0:_flatListRef$current4.scrollToEnd({animated:true});}}),_jsxs(KeyboardAvoidingView,{behavior:\"web\"==='ios'?'padding':'height',style:styles.inputContainer,children:[_jsx(TextInput,{style:styles.input,value:newMessage,onChangeText:setNewMessage,placeholder:\"Mesaj yaz\\u0131n...\",multiline:true}),_jsx(TouchableOpacity,{style:styles.sendButton,onPress:sendMessage,children:_jsx(Text,{style:styles.sendButtonText,children:\"G\\xF6nder\"})})]})]});};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff'},header:{padding:16,borderBottomWidth:1,borderBottomColor:'#e5e5e5',backgroundColor:'#fff'},headerText:{fontSize:18,fontWeight:'bold',color:'#1f2937'},messageList:{flex:1,padding:16},messageListContent:{flexGrow:1},messageContainer:{maxWidth:'80%',marginVertical:8,padding:12,borderRadius:16},currentUserMessage:{alignSelf:'flex-end',backgroundColor:'#007AFF'},otherUserMessage:{alignSelf:'flex-start',backgroundColor:'#f3f4f6'},senderName:{fontSize:12,color:'#6b7280',marginBottom:4},messageText:{fontSize:16},currentUserText:{color:'#fff'},otherUserText:{color:'#000'},timestamp:{fontSize:12,alignSelf:'flex-end',marginTop:4},currentUserTimestamp:{color:'rgba(255, 255, 255, 0.8)'},otherUserTimestamp:{color:'#6b7280'},inputContainer:{flexDirection:'row',padding:16,borderTopWidth:1,borderTopColor:'#e5e5e5',backgroundColor:'#fff'},input:{flex:1,borderWidth:1,borderColor:'#d1d5db',borderRadius:24,paddingHorizontal:16,paddingVertical:8,marginRight:8,maxHeight:100,backgroundColor:'#fff'},sendButton:{backgroundColor:'#007AFF',borderRadius:24,paddingHorizontal:24,paddingVertical:8,justifyContent:'center',alignItems:'center'},sendButtonText:{color:'#fff',fontWeight:'600'}});export default ChatScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TextInput","TouchableOpacity","FlatList","KeyboardAvoidingView","Platform","SafeAreaView","StyleSheet","Animated","Alert","ref","push","onValue","off","set","get","database","auth","jsx","_jsx","jsxs","_jsxs","ChatScreen","_ref","route","_route$params","params","currentUserId","otherUserId","chatId","otherUserEmail","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","newMessage","setNewMessage","flatListRef","inputHeight","Value","current","messagesRef","handleData","snapshot","data","val","messagesArray","Object","entries","map","_ref2","_ref3","id","message","_objectSpread","setTimeout","_flatListRef$current","scrollToEnd","animated","sendMessage","trim","newMessageRef","messageData","senderId","text","timestamp","Date","now","sequence","timing","toValue","duration","useNativeDriver","start","then","_flatListRef$current2","sendNotificationToReceiver","catch","error","alert","_ref4","_asyncToGenerator","receiverId","userRef","userSnapshot","exists","userData","fcmToken","currentUser","senderEmail","email","console","log","substring","platform","_userData$userAgent","notificationData","to","notification","title","body","icon","badge","tag","sound","type","messageText","url","window","location","origin","priority","content_available","userAgent","includes","webpush","headers","TTL","Urgency","requireInteraction","vibrate","fcm_options","link","serverKey","global","fetch","method","JSON","stringify","response","status","ok","Error","json","_userData$userAgent2","Notification","permission","renotify","notifError","_x","_x2","apply","arguments","renderMessage","_ref5","item","isCurrentUser","style","styles","messageContainer","currentUserMessage","otherUserMessage","transform","translateY","interpolate","inputRange","outputRange","children","senderName","currentUserText","otherUserText","currentUserTimestamp","otherUserTimestamp","toLocaleTimeString","hour","minute","container","header","headerText","renderItem","keyExtractor","messageList","contentContainerStyle","messageListContent","inverted","onContentSizeChange","_flatListRef$current3","onLayout","_flatListRef$current4","behavior","inputContainer","input","value","onChangeText","placeholder","multiline","sendButton","onPress","sendButtonText","create","flex","backgroundColor","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","flexGrow","maxWidth","marginVertical","borderRadius","alignSelf","marginBottom","marginTop","flexDirection","borderTopWidth","borderTopColor","borderWidth","borderColor","paddingHorizontal","paddingVertical","marginRight","maxHeight","justifyContent","alignItems"],"sources":["C:/Users/BLale/Desktop/Catty/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Animated,\r\n  Alert,\r\n} from 'react-native';\r\nimport { ref, push, onValue, off, set, get } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase-web';\r\n\r\nconst ChatScreen = ({ route }) => {\r\n  const { currentUserId, otherUserId, chatId, otherUserEmail } = route.params;\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const flatListRef = useRef(null);\r\n  const inputHeight = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n    \r\n    const handleData = (snapshot) => {\r\n      const data = snapshot.val();\r\n      \r\n      if (data) {\r\n        const messagesArray = Object.entries(data).map(([id, message]) => ({\r\n          id,\r\n          ...message,\r\n        }));\r\n        setMessages(messagesArray);\r\n        setTimeout(() => {\r\n          flatListRef.current?.scrollToEnd({ animated: true });\r\n        }, 100);\r\n      } else {\r\n        setMessages([]);\r\n      }\r\n    };\r\n\r\n    onValue(messagesRef, handleData);\r\n\r\n    return () => {\r\n      off(messagesRef);\r\n    };\r\n  }, [chatId]);\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n      const newMessageRef = push(messagesRef);\r\n      \r\n      const messageData = {\r\n        senderId: currentUserId,\r\n        text: newMessage,\r\n        timestamp: Date.now()\r\n      };\r\n      \r\n      // Animasyonu başlat\r\n      Animated.sequence([\r\n        Animated.timing(inputHeight, {\r\n          toValue: 1,\r\n          duration: 200,\r\n          useNativeDriver: false,\r\n        }),\r\n        Animated.timing(inputHeight, {\r\n          toValue: 0,\r\n          duration: 200,\r\n          useNativeDriver: false,\r\n        })\r\n      ]).start();\r\n      \r\n      set(newMessageRef, messageData)\r\n        .then(() => {\r\n          setNewMessage('');\r\n          setTimeout(() => {\r\n            flatListRef.current?.scrollToEnd({ animated: true });\r\n          }, 100);\r\n          \r\n          // Bildirim gönder\r\n          sendNotificationToReceiver(otherUserId, messageData);\r\n        })\r\n        .catch((error) => {\r\n          Alert.alert('Hata', 'Mesaj gönderilirken bir hata oluştu.');\r\n        });\r\n    }\r\n  };\r\n\r\n  // Alıcıya bildirim gönder\r\n  const sendNotificationToReceiver = async (receiverId, messageData) => {\r\n    try {\r\n      // Alıcının FCM token'ını al\r\n      const userRef = ref(database, `users/${receiverId}`);\r\n      const userSnapshot = await get(userRef);\r\n      \r\n      if (userSnapshot.exists()) {\r\n        const userData = userSnapshot.val();\r\n        const fcmToken = userData.fcmToken;\r\n\r\n        // Gönderen kullanıcı bilgilerini al\r\n        const currentUser = auth.currentUser;\r\n        const senderEmail = currentUser.email;\r\n        \r\n        // ÖNEMLİ: Eğer alıcı ID'si gönderen ID ile aynıysa bildirim gönderme\r\n        // Bu, kullanıcının kendi mesajı için bildirim almasını engeller\r\n        if (receiverId === currentUserId) {\r\n          console.log('Kendi mesajını gönderen kullanıcıya bildirim gönderilmiyor');\r\n          return;\r\n        }\r\n        \r\n        console.log(`Alıcı bilgileri: ${receiverId}, FCM Token: ${fcmToken?.substring(0, 15)}... Platform: ${userData.platform || 'bilinmiyor'}`);\r\n        \r\n        // Kullanıcının FCM token'ı varsa\r\n        if (fcmToken) {\r\n          // FCM bildirimini hazırla\r\n          console.log(`${Platform.OS} platformundan bildirim gönderiliyor`);\r\n          \r\n          // FCM'ye gönderilecek veri - Mobil için de çalışacak şekilde ayarla\r\n          const notificationData = {\r\n            to: fcmToken,\r\n            notification: {\r\n              title: `Yeni mesaj: ${senderEmail}`,\r\n              body: messageData.text,\r\n              icon: '/favicon.ico',\r\n              badge: '/badge.png',\r\n              tag: `message-${Date.now()}`,\r\n              sound: 'default'\r\n            },\r\n            data: {\r\n              type: 'NEW_MESSAGE',\r\n              chatId: chatId,\r\n              senderId: currentUserId,\r\n              senderEmail: senderEmail,\r\n              otherUserId: otherUserId,\r\n              otherUserEmail: otherUserEmail,\r\n              messageText: messageData.text,\r\n              timestamp: messageData.timestamp,\r\n              url: typeof window !== 'undefined' ? window.location.origin : ''\r\n            },\r\n            priority: 'high',\r\n            content_available: true\r\n          };\r\n          \r\n          // Mobile Chrome için FCM bildirimlerini iyileştiren ayarlar\r\n          if (userData.platform === 'mobile-web' || userData.userAgent?.includes('Mobile')) {\r\n            // Mobile tarayıcılara özel ek ayarlar\r\n            notificationData.webpush = {\r\n              headers: {\r\n                TTL: '86400',\r\n                Urgency: 'high'\r\n              },\r\n              notification: {\r\n                requireInteraction: true,\r\n                vibrate: [200, 100, 200]\r\n              },\r\n              fcm_options: {\r\n                link: typeof window !== 'undefined' ? window.location.origin : ''\r\n              }\r\n            };\r\n          }\r\n          \r\n          // FCM API'sine doğrudan istek gönder (hangi platformdan olursa olsun)\r\n          const serverKey = 'AAAAsZ-Vz2w:APA91bG_zBWyqJZMbpZqZ8O00Tk8RR3-5CxjFEWQNZAKpQ6KcBnVVKhvxUMmrNtFLQzdpfXHTLbCnx4eHbHn5P2qpujmuxJUzf54ByQ-vQrDcTxhHJAHZFqVMH47fFxIvS0fzUoDPFGo';\r\n          \r\n          // FCM API'sine POST isteği gönder - Tüm platformlarda çalışacak\r\n          // Global fetch kullan, her platform için aynı şekilde çalışacak\r\n          global.fetch('https://fcm.googleapis.com/fcm/send', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `key=${serverKey}`\r\n            },\r\n            body: JSON.stringify(notificationData)\r\n          })\r\n          .then(response => {\r\n            console.log(`FCM API yanıtı status: ${response.status}`);\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP hata, durum: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            console.log('Bildirim başarıyla gönderildi:', data);\r\n            \r\n            // Web platformu için ek kontrol - özellikle Chrome Mobile için fallback çözüm\r\n            if (Platform.OS === 'web' && typeof window !== 'undefined' && \r\n                'Notification' in window && Notification.permission === 'granted' &&\r\n                (userData.platform === 'mobile-web' || userData.userAgent?.includes('Mobile'))) {\r\n              \r\n              setTimeout(() => {\r\n                try {\r\n                  // Bildirim göstermeden önce bir süre bekle - mobil chrome için daha güvenilir\r\n                  new Notification(`Yeni mesaj: ${senderEmail}`, {\r\n                    body: messageData.text,\r\n                    icon: '/favicon.ico',\r\n                    tag: `direct-message-${Date.now()}`,\r\n                    renotify: true,\r\n                    vibrate: [200, 100, 200],\r\n                    requireInteraction: true\r\n                  });\r\n                  console.log('Mobil web için ek bildirim gösterildi');\r\n                } catch (notifError) {\r\n                  console.error('Browser bildirimi gösterme hatası:', notifError);\r\n                }\r\n              }, 300);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('FCM bildirim hatası:', error);\r\n            \r\n            // Sadece Web platformu için yedek bildirim\r\n            if (Platform.OS === 'web' && typeof window !== 'undefined' && \r\n                'Notification' in window && Notification.permission === 'granted') {\r\n              try {\r\n                new Notification(`Yeni mesaj: ${senderEmail}`, {\r\n                  body: messageData.text,\r\n                  icon: '/favicon.ico',\r\n                  tag: `direct-message-fallback-${Date.now()}`,\r\n                  renotify: true,\r\n                  vibrate: [200, 100, 200]\r\n                });\r\n                console.log('FCM hatası - Doğrudan tarayıcı bildirimi gönderildi');\r\n              } catch (notifError) {\r\n                console.error('Yedek bildirim hatası:', notifError);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          console.log(`Alıcının (${receiverId}) FCM token'ı bulunmuyor`);\r\n        }\r\n      } else {\r\n        console.log(`Alıcı kullanıcı bulunamadı: ${receiverId}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Bildirim gönderme hatası:', error);\r\n    }\r\n  };\r\n\r\n  const renderMessage = ({ item }) => {\r\n    const isCurrentUser = item.senderId === currentUserId;\r\n    return (\r\n      <Animated.View\r\n        style={[\r\n          styles.messageContainer,\r\n          isCurrentUser ? styles.currentUserMessage : styles.otherUserMessage,\r\n          {\r\n            transform: [{\r\n              translateY: inputHeight.interpolate({\r\n                inputRange: [0, 1],\r\n                outputRange: [0, -10]\r\n              })\r\n            }]\r\n          }\r\n        ]}\r\n      >\r\n        <Text style={styles.senderName}>\r\n          {isCurrentUser ? 'Siz' : otherUserEmail}\r\n        </Text>\r\n        <Text style={[\r\n          styles.messageText,\r\n          isCurrentUser ? styles.currentUserText : styles.otherUserText\r\n        ]}>\r\n          {item.text}\r\n        </Text>\r\n        <Text style={[\r\n          styles.timestamp,\r\n          isCurrentUser ? styles.currentUserTimestamp : styles.otherUserTimestamp\r\n        ]}>\r\n          {new Date(item.timestamp).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' })}\r\n        </Text>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>\r\n          {otherUserEmail} ile Sohbet\r\n        </Text>\r\n      </View>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={messages}\r\n        renderItem={renderMessage}\r\n        keyExtractor={(item) => item.id}\r\n        style={styles.messageList}\r\n        contentContainerStyle={styles.messageListContent}\r\n        inverted={false}\r\n        onContentSizeChange={() => flatListRef.current?.scrollToEnd({ animated: true })}\r\n        onLayout={() => flatListRef.current?.scrollToEnd({ animated: true })}\r\n      />\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.inputContainer}\r\n      >\r\n        <TextInput\r\n          style={styles.input}\r\n          value={newMessage}\r\n          onChangeText={setNewMessage}\r\n          placeholder=\"Mesaj yazın...\"\r\n          multiline\r\n        />\r\n        <TouchableOpacity \r\n          style={styles.sendButton}\r\n          onPress={sendMessage}\r\n        >\r\n          <Text style={styles.sendButtonText}>Gönder</Text>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e5e5',\r\n    backgroundColor: '#fff',\r\n  },\r\n  headerText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#1f2937',\r\n  },\r\n  messageList: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  messageListContent: {\r\n    flexGrow: 1,\r\n  },\r\n  messageContainer: {\r\n    maxWidth: '80%',\r\n    marginVertical: 8,\r\n    padding: 12,\r\n    borderRadius: 16,\r\n  },\r\n  currentUserMessage: {\r\n    alignSelf: 'flex-end',\r\n    backgroundColor: '#007AFF',\r\n  },\r\n  otherUserMessage: {\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: '#f3f4f6',\r\n  },\r\n  senderName: {\r\n    fontSize: 12,\r\n    color: '#6b7280',\r\n    marginBottom: 4,\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n  currentUserText: {\r\n    color: '#fff',\r\n  },\r\n  otherUserText: {\r\n    color: '#000',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    alignSelf: 'flex-end',\r\n    marginTop: 4,\r\n  },\r\n  currentUserTimestamp: {\r\n    color: 'rgba(255, 255, 255, 0.8)',\r\n  },\r\n  otherUserTimestamp: {\r\n    color: '#6b7280',\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    padding: 16,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#e5e5e5',\r\n    backgroundColor: '#fff',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: '#d1d5db',\r\n    borderRadius: 24,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    marginRight: 8,\r\n    maxHeight: 100,\r\n    backgroundColor: '#fff',\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 24,\r\n    paddingHorizontal: 24,\r\n    paddingVertical: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sendButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default ChatScreen; "],"mappings":"uzBAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,SAAA,sDAAAC,gBAAA,6DAAAC,QAAA,qDAAAC,oBAAA,iEAAAC,QAAA,qDAAAC,YAAA,yDAAAC,UAAA,uDAAAC,QAAA,qDAAAC,KAAA,2CAc3D,OAASC,GAAG,CAAEC,IAAI,CAAEC,OAAO,CAAEC,GAAG,CAAEC,GAAG,CAAEC,GAAG,KAAQ,mBAAmB,CACrE,OAASC,QAAQ,CAAEC,IAAI,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,IAAA,CAAkB,IAAZ,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CACzB,IAAAC,aAAA,CAA+DD,KAAK,CAACE,MAAM,CAAnEC,aAAa,CAAAF,aAAA,CAAbE,aAAa,CAAEC,WAAW,CAAAH,aAAA,CAAXG,WAAW,CAAEC,MAAM,CAAAJ,aAAA,CAANI,MAAM,CAAEC,cAAc,CAAAL,aAAA,CAAdK,cAAc,CAC1D,IAAAC,SAAA,CAAgCnC,QAAQ,CAAC,EAAE,CAAC,CAAAoC,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAoCxC,QAAQ,CAAC,EAAE,CAAC,CAAAyC,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzCE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAChC,GAAM,CAAAG,WAAW,CAAG1C,MAAM,CAAC,IAAI,CAAC,CAChC,GAAM,CAAA2C,WAAW,CAAG3C,MAAM,CAAC,GAAI,CAAAU,QAAQ,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAEzD9C,SAAS,CAAC,UAAM,CACd,GAAM,CAAA+C,WAAW,CAAGlC,GAAG,CAACM,QAAQ,CAAE,gBAAgBa,MAAM,WAAW,CAAC,CAEpE,GAAM,CAAAgB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,QAAQ,CAAK,CAC/B,GAAM,CAAAC,IAAI,CAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,CAE3B,GAAID,IAAI,CAAE,CACR,GAAM,CAAAE,aAAa,CAAGC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,GAAG,CAAC,SAAAC,KAAA,MAAAC,KAAA,CAAArB,cAAA,CAAAoB,KAAA,IAAEE,EAAE,CAAAD,KAAA,IAAEE,OAAO,CAAAF,KAAA,WAAAG,aAAA,EAC1DF,EAAE,CAAFA,EAAE,EACCC,OAAO,GACV,CAAC,CACHrB,WAAW,CAACc,aAAa,CAAC,CAC1BS,UAAU,CAAC,UAAM,KAAAC,oBAAA,CACf,CAAAA,oBAAA,CAAAnB,WAAW,CAACG,OAAO,eAAnBgB,oBAAA,CAAqBC,WAAW,CAAC,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAAC,CACtD,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,IAAM,CACL1B,WAAW,CAAC,EAAE,CAAC,CACjB,CACF,CAAC,CAEDvB,OAAO,CAACgC,WAAW,CAAEC,UAAU,CAAC,CAEhC,MAAO,WAAM,CACXhC,GAAG,CAAC+B,WAAW,CAAC,CAClB,CAAC,CACH,CAAC,CAAE,CAACf,MAAM,CAAC,CAAC,CAEZ,GAAM,CAAAiC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,GAAIxB,UAAU,CAACyB,IAAI,CAAC,CAAC,CAAE,CACrB,GAAM,CAAAnB,WAAW,CAAGlC,GAAG,CAACM,QAAQ,CAAE,gBAAgBa,MAAM,WAAW,CAAC,CACpE,GAAM,CAAAmC,aAAa,CAAGrD,IAAI,CAACiC,WAAW,CAAC,CAEvC,GAAM,CAAAqB,WAAW,CAAG,CAClBC,QAAQ,CAAEvC,aAAa,CACvBwC,IAAI,CAAE7B,UAAU,CAChB8B,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CACtB,CAAC,CAGD9D,QAAQ,CAAC+D,QAAQ,CAAC,CAChB/D,QAAQ,CAACgE,MAAM,CAAC/B,WAAW,CAAE,CAC3BgC,OAAO,CAAE,CAAC,CACVC,QAAQ,CAAE,GAAG,CACbC,eAAe,CAAE,KACnB,CAAC,CAAC,CACFnE,QAAQ,CAACgE,MAAM,CAAC/B,WAAW,CAAE,CAC3BgC,OAAO,CAAE,CAAC,CACVC,QAAQ,CAAE,GAAG,CACbC,eAAe,CAAE,KACnB,CAAC,CAAC,CACH,CAAC,CAACC,KAAK,CAAC,CAAC,CAEV9D,GAAG,CAACkD,aAAa,CAAEC,WAAW,CAAC,CAC5BY,IAAI,CAAC,UAAM,CACVtC,aAAa,CAAC,EAAE,CAAC,CACjBmB,UAAU,CAAC,UAAM,KAAAoB,qBAAA,CACf,CAAAA,qBAAA,CAAAtC,WAAW,CAACG,OAAO,eAAnBmC,qBAAA,CAAqBlB,WAAW,CAAC,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAAC,CACtD,CAAC,CAAE,GAAG,CAAC,CAGPkB,0BAA0B,CAACnD,WAAW,CAAEqC,WAAW,CAAC,CACtD,CAAC,CAAC,CACDe,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBxE,KAAK,CAACyE,KAAK,CAAC,MAAM,CAAE,sCAAsC,CAAC,CAC7D,CAAC,CAAC,CACN,CACF,CAAC,CAGD,GAAM,CAAAH,0BAA0B,gBAAAI,KAAA,CAAAC,iBAAA,CAAG,UAAOC,UAAU,CAAEpB,WAAW,CAAK,CACpE,GAAI,CAEF,GAAM,CAAAqB,OAAO,CAAG5E,GAAG,CAACM,QAAQ,CAAE,SAASqE,UAAU,EAAE,CAAC,CACpD,GAAM,CAAAE,YAAY,MAAS,CAAAxE,GAAG,CAACuE,OAAO,CAAC,CAEvC,GAAIC,YAAY,CAACC,MAAM,CAAC,CAAC,CAAE,CACzB,GAAM,CAAAC,QAAQ,CAAGF,YAAY,CAACvC,GAAG,CAAC,CAAC,CACnC,GAAM,CAAA0C,QAAQ,CAAGD,QAAQ,CAACC,QAAQ,CAGlC,GAAM,CAAAC,WAAW,CAAG1E,IAAI,CAAC0E,WAAW,CACpC,GAAM,CAAAC,WAAW,CAAGD,WAAW,CAACE,KAAK,CAIrC,GAAIR,UAAU,GAAK1D,aAAa,CAAE,CAChCmE,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC,CACzE,OACF,CAEAD,OAAO,CAACC,GAAG,CAAC,oBAAoBV,UAAU,gBAAgBK,QAAQ,cAARA,QAAQ,CAAEM,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,iBAAiBP,QAAQ,CAACQ,QAAQ,EAAI,YAAY,EAAE,CAAC,CAGzI,GAAIP,QAAQ,CAAE,KAAAQ,mBAAA,CAEZJ,OAAO,CAACC,GAAG,CAAC,8CAAoD,CAAC,CAGjE,GAAM,CAAAI,gBAAgB,CAAG,CACvBC,EAAE,CAAEV,QAAQ,CACZW,YAAY,CAAE,CACZC,KAAK,CAAE,eAAeV,WAAW,EAAE,CACnCW,IAAI,CAAEtC,WAAW,CAACE,IAAI,CACtBqC,IAAI,CAAE,cAAc,CACpBC,KAAK,CAAE,YAAY,CACnBC,GAAG,CAAE,WAAWrC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAC5BqC,KAAK,CAAE,SACT,CAAC,CACD5D,IAAI,CAAE,CACJ6D,IAAI,CAAE,aAAa,CACnB/E,MAAM,CAAEA,MAAM,CACdqC,QAAQ,CAAEvC,aAAa,CACvBiE,WAAW,CAAEA,WAAW,CACxBhE,WAAW,CAAEA,WAAW,CACxBE,cAAc,CAAEA,cAAc,CAC9B+E,WAAW,CAAE5C,WAAW,CAACE,IAAI,CAC7BC,SAAS,CAAEH,WAAW,CAACG,SAAS,CAChC0C,GAAG,CAAE,MAAO,CAAAC,MAAM,GAAK,WAAW,CAAGA,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAG,EAChE,CAAC,CACDC,QAAQ,CAAE,MAAM,CAChBC,iBAAiB,CAAE,IACrB,CAAC,CAGD,GAAI1B,QAAQ,CAACQ,QAAQ,GAAK,YAAY,GAAAC,mBAAA,CAAIT,QAAQ,CAAC2B,SAAS,SAAlBlB,mBAAA,CAAoBmB,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAEhFlB,gBAAgB,CAACmB,OAAO,CAAG,CACzBC,OAAO,CAAE,CACPC,GAAG,CAAE,OAAO,CACZC,OAAO,CAAE,MACX,CAAC,CACDpB,YAAY,CAAE,CACZqB,kBAAkB,CAAE,IAAI,CACxBC,OAAO,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CACzB,CAAC,CACDC,WAAW,CAAE,CACXC,IAAI,CAAE,MAAO,CAAAd,MAAM,GAAK,WAAW,CAAGA,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAG,EACjE,CACF,CAAC,CACH,CAGA,GAAM,CAAAa,SAAS,CAAG,0JAA0J,CAI5KC,MAAM,CAACC,KAAK,CAAC,qCAAqC,CAAE,CAClDC,MAAM,CAAE,MAAM,CACdV,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,OAAOO,SAAS,EACnC,CAAC,CACDvB,IAAI,CAAE2B,IAAI,CAACC,SAAS,CAAChC,gBAAgB,CACvC,CAAC,CAAC,CACDtB,IAAI,CAAC,SAAAuD,QAAQ,CAAI,CAChBtC,OAAO,CAACC,GAAG,CAAC,0BAA0BqC,QAAQ,CAACC,MAAM,EAAE,CAAC,CACxD,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,qBAAqBH,QAAQ,CAACC,MAAM,EAAE,CAAC,CACzD,CACA,MAAO,CAAAD,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAAC,CAAC,CACD3D,IAAI,CAAC,SAAA9B,IAAI,CAAI,KAAA0F,oBAAA,CACZ3C,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEhD,IAAI,CAAC,CAGnD,GAAI,QAAgB,KAAK,EAAI,MAAO,CAAAgE,MAAM,GAAK,WAAW,EACtD,cAAc,EAAI,CAAAA,MAAM,EAAI2B,YAAY,CAACC,UAAU,GAAK,SAAS,GAChElD,QAAQ,CAACQ,QAAQ,GAAK,YAAY,GAAAwC,oBAAA,CAAIhD,QAAQ,CAAC2B,SAAS,SAAlBqB,oBAAA,CAAoBpB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE,CAElF3D,UAAU,CAAC,UAAM,CACf,GAAI,CAEF,GAAI,CAAAgF,YAAY,CAAC,eAAe9C,WAAW,EAAE,CAAE,CAC7CW,IAAI,CAAEtC,WAAW,CAACE,IAAI,CACtBqC,IAAI,CAAE,cAAc,CACpBE,GAAG,CAAE,kBAAkBrC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CACnCsE,QAAQ,CAAE,IAAI,CACdjB,OAAO,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CACxBD,kBAAkB,CAAE,IACtB,CAAC,CAAC,CACF5B,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACtD,CAAE,MAAO8C,UAAU,CAAE,CACnB/C,OAAO,CAACb,KAAK,CAAC,oCAAoC,CAAE4D,UAAU,CAAC,CACjE,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CACF,CAAC,CAAC,CACD7D,KAAK,CAAC,SAAAC,KAAK,CAAI,CACda,OAAO,CAACb,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAG5C,GAAI,QAAgB,KAAK,EAAI,MAAO,CAAA8B,MAAM,GAAK,WAAW,EACtD,cAAc,EAAI,CAAAA,MAAM,EAAI2B,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACrE,GAAI,CACF,GAAI,CAAAD,YAAY,CAAC,eAAe9C,WAAW,EAAE,CAAE,CAC7CW,IAAI,CAAEtC,WAAW,CAACE,IAAI,CACtBqC,IAAI,CAAE,cAAc,CACpBE,GAAG,CAAE,2BAA2BrC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAC5CsE,QAAQ,CAAE,IAAI,CACdjB,OAAO,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CACzB,CAAC,CAAC,CACF7B,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC,CACpE,CAAE,MAAO8C,UAAU,CAAE,CACnB/C,OAAO,CAACb,KAAK,CAAC,wBAAwB,CAAE4D,UAAU,CAAC,CACrD,CACF,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACL/C,OAAO,CAACC,GAAG,CAAC,aAAaV,UAAU,0BAA0B,CAAC,CAChE,CACF,CAAC,IAAM,CACLS,OAAO,CAACC,GAAG,CAAC,+BAA+BV,UAAU,EAAE,CAAC,CAC1D,CACF,CAAE,MAAOJ,KAAK,CAAE,CACda,OAAO,CAACb,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,iBAnJK,CAAAF,0BAA0BA,CAAA+D,EAAA,CAAAC,GAAA,SAAA5D,KAAA,CAAA6D,KAAA,MAAAC,SAAA,OAmJ/B,CAED,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,KAAA,CAAiB,IAAX,CAAAC,IAAI,CAAAD,KAAA,CAAJC,IAAI,CAC3B,GAAM,CAAAC,aAAa,CAAGD,IAAI,CAAClF,QAAQ,GAAKvC,aAAa,CACrD,MACE,CAAAN,KAAA,CAACb,QAAQ,CAACT,IAAI,EACZuJ,KAAK,CAAE,CACLC,MAAM,CAACC,gBAAgB,CACvBH,aAAa,CAAGE,MAAM,CAACE,kBAAkB,CAAGF,MAAM,CAACG,gBAAgB,CACnE,CACEC,SAAS,CAAE,CAAC,CACVC,UAAU,CAAEnH,WAAW,CAACoH,WAAW,CAAC,CAClCC,UAAU,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAClBC,WAAW,CAAE,CAAC,CAAC,CAAE,CAAC,EAAE,CACtB,CAAC,CACH,CAAC,CACH,CAAC,CACD,CAAAC,QAAA,EAEF7I,IAAA,CAACnB,IAAI,EAACsJ,KAAK,CAAEC,MAAM,CAACU,UAAW,CAAAD,QAAA,CAC5BX,aAAa,CAAG,KAAK,CAAGvH,cAAc,CACnC,CAAC,CACPX,IAAA,CAACnB,IAAI,EAACsJ,KAAK,CAAE,CACXC,MAAM,CAAC1C,WAAW,CAClBwC,aAAa,CAAGE,MAAM,CAACW,eAAe,CAAGX,MAAM,CAACY,aAAa,CAC7D,CAAAH,QAAA,CACCZ,IAAI,CAACjF,IAAI,CACN,CAAC,CACPhD,IAAA,CAACnB,IAAI,EAACsJ,KAAK,CAAE,CACXC,MAAM,CAACnF,SAAS,CAChBiF,aAAa,CAAGE,MAAM,CAACa,oBAAoB,CAAGb,MAAM,CAACc,kBAAkB,CACvE,CAAAL,QAAA,CACC,GAAI,CAAA3F,IAAI,CAAC+E,IAAI,CAAChF,SAAS,CAAC,CAACkG,kBAAkB,CAAC,OAAO,CAAE,CAAEC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CACzF,CAAC,EACM,CAAC,CAEpB,CAAC,CAED,MACE,CAAAnJ,KAAA,CAACf,YAAY,EAACgJ,KAAK,CAAEC,MAAM,CAACkB,SAAU,CAAAT,QAAA,EACpC7I,IAAA,CAACpB,IAAI,EAACuJ,KAAK,CAAEC,MAAM,CAACmB,MAAO,CAAAV,QAAA,CACzB3I,KAAA,CAACrB,IAAI,EAACsJ,KAAK,CAAEC,MAAM,CAACoB,UAAW,CAAAX,QAAA,EAC5BlI,cAAc,CAAC,aAClB,EAAM,CAAC,CACH,CAAC,CACPX,IAAA,CAAChB,QAAQ,EACPO,GAAG,CAAE8B,WAAY,CACjBO,IAAI,CAAEb,QAAS,CACf0I,UAAU,CAAE1B,aAAc,CAC1B2B,YAAY,CAAE,QAAd,CAAAA,YAAYA,CAAGzB,IAAI,QAAK,CAAAA,IAAI,CAAC7F,EAAE,EAAC,CAChC+F,KAAK,CAAEC,MAAM,CAACuB,WAAY,CAC1BC,qBAAqB,CAAExB,MAAM,CAACyB,kBAAmB,CACjDC,QAAQ,CAAE,KAAM,CAChBC,mBAAmB,CAAE,QAArB,CAAAA,mBAAmBA,CAAA,MAAAC,qBAAA,QAAAA,qBAAA,CAAQ3I,WAAW,CAACG,OAAO,eAAnBwI,qBAAA,CAAqBvH,WAAW,CAAC,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAAC,EAAC,CAChFuH,QAAQ,CAAE,QAAV,CAAAA,QAAQA,CAAA,MAAAC,qBAAA,QAAAA,qBAAA,CAAQ7I,WAAW,CAACG,OAAO,eAAnB0I,qBAAA,CAAqBzH,WAAW,CAAC,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAAC,EAAC,CACtE,CAAC,CACFxC,KAAA,CAACjB,oBAAoB,EACnBkL,QAAQ,CAAE,QAAgB,KAAK,CAAG,SAAS,CAAG,QAAS,CACvDhC,KAAK,CAAEC,MAAM,CAACgC,cAAe,CAAAvB,QAAA,EAE7B7I,IAAA,CAAClB,SAAS,EACRqJ,KAAK,CAAEC,MAAM,CAACiC,KAAM,CACpBC,KAAK,CAAEnJ,UAAW,CAClBoJ,YAAY,CAAEnJ,aAAc,CAC5BoJ,WAAW,CAAC,qBAAgB,CAC5BC,SAAS,MACV,CAAC,CACFzK,IAAA,CAACjB,gBAAgB,EACfoJ,KAAK,CAAEC,MAAM,CAACsC,UAAW,CACzBC,OAAO,CAAEhI,WAAY,CAAAkG,QAAA,CAErB7I,IAAA,CAACnB,IAAI,EAACsJ,KAAK,CAAEC,MAAM,CAACwC,cAAe,CAAA/B,QAAA,CAAC,WAAM,CAAM,CAAC,CACjC,CAAC,EACC,CAAC,EACX,CAAC,CAEnB,CAAC,CAED,GAAM,CAAAT,MAAM,CAAGhJ,UAAU,CAACyL,MAAM,CAAC,CAC/BvB,SAAS,CAAE,CACTwB,IAAI,CAAE,CAAC,CACPC,eAAe,CAAE,MACnB,CAAC,CACDxB,MAAM,CAAE,CACNyB,OAAO,CAAE,EAAE,CACXC,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,SAAS,CAC5BH,eAAe,CAAE,MACnB,CAAC,CACDvB,UAAU,CAAE,CACV2B,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,MAAM,CAClBC,KAAK,CAAE,SACT,CAAC,CACD1B,WAAW,CAAE,CACXmB,IAAI,CAAE,CAAC,CACPE,OAAO,CAAE,EACX,CAAC,CACDnB,kBAAkB,CAAE,CAClByB,QAAQ,CAAE,CACZ,CAAC,CACDjD,gBAAgB,CAAE,CAChBkD,QAAQ,CAAE,KAAK,CACfC,cAAc,CAAE,CAAC,CACjBR,OAAO,CAAE,EAAE,CACXS,YAAY,CAAE,EAChB,CAAC,CACDnD,kBAAkB,CAAE,CAClBoD,SAAS,CAAE,UAAU,CACrBX,eAAe,CAAE,SACnB,CAAC,CACDxC,gBAAgB,CAAE,CAChBmD,SAAS,CAAE,YAAY,CACvBX,eAAe,CAAE,SACnB,CAAC,CACDjC,UAAU,CAAE,CACVqC,QAAQ,CAAE,EAAE,CACZE,KAAK,CAAE,SAAS,CAChBM,YAAY,CAAE,CAChB,CAAC,CACDjG,WAAW,CAAE,CACXyF,QAAQ,CAAE,EACZ,CAAC,CACDpC,eAAe,CAAE,CACfsC,KAAK,CAAE,MACT,CAAC,CACDrC,aAAa,CAAE,CACbqC,KAAK,CAAE,MACT,CAAC,CACDpI,SAAS,CAAE,CACTkI,QAAQ,CAAE,EAAE,CACZO,SAAS,CAAE,UAAU,CACrBE,SAAS,CAAE,CACb,CAAC,CACD3C,oBAAoB,CAAE,CACpBoC,KAAK,CAAE,0BACT,CAAC,CACDnC,kBAAkB,CAAE,CAClBmC,KAAK,CAAE,SACT,CAAC,CACDjB,cAAc,CAAE,CACdyB,aAAa,CAAE,KAAK,CACpBb,OAAO,CAAE,EAAE,CACXc,cAAc,CAAE,CAAC,CACjBC,cAAc,CAAE,SAAS,CACzBhB,eAAe,CAAE,MACnB,CAAC,CACDV,KAAK,CAAE,CACLS,IAAI,CAAE,CAAC,CACPkB,WAAW,CAAE,CAAC,CACdC,WAAW,CAAE,SAAS,CACtBR,YAAY,CAAE,EAAE,CAChBS,iBAAiB,CAAE,EAAE,CACrBC,eAAe,CAAE,CAAC,CAClBC,WAAW,CAAE,CAAC,CACdC,SAAS,CAAE,GAAG,CACdtB,eAAe,CAAE,MACnB,CAAC,CACDL,UAAU,CAAE,CACVK,eAAe,CAAE,SAAS,CAC1BU,YAAY,CAAE,EAAE,CAChBS,iBAAiB,CAAE,EAAE,CACrBC,eAAe,CAAE,CAAC,CAClBG,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CAAC,CACD3B,cAAc,CAAE,CACdS,KAAK,CAAE,MAAM,CACbD,UAAU,CAAE,KACd,CACF,CAAC,CAAC,CAEF,cAAe,CAAAjL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}