{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{NativeWindStyleSheet as _NativeWindStyleSheet}from\"nativewind\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Alert from\"react-native-web/dist/exports/Alert\";import{ref,get,query,orderByChild,limitToLast,onValue,off,onChildAdded,onChildChanged}from'firebase/database';import{database,auth}from'../config/firebase';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var ChatListScreen=function ChatListScreen(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chats=_useState2[0],setChats=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){var unsubscribeChats=null;var unsubscribeMessages={};var loadChats=function(){var _ref2=_asyncToGenerator(function*(){try{var currentUser=auth.currentUser;if(!currentUser){Alert.alert('Debug','No authenticated user found');setLoading(false);return;}Alert.alert('Debug',`Current user: ${currentUser.uid}`);var chatsRef=ref(database,'privateChats');unsubscribeChats=onValue(chatsRef,function(){var _ref3=_asyncToGenerator(function*(snapshot){try{if(!snapshot.exists()){Alert.alert('Debug','No chats found in database');setChats([]);setLoading(false);return;}var chatsData=snapshot.val();Alert.alert('Debug',`Found chats: ${Object.keys(chatsData).join(', ')}`);var _loop=function*_loop(chatId){if(chatId.includes(currentUser.uid)){Alert.alert('Debug',`Processing chat: ${chatId}`);try{var otherUserId=chatId.split('_').find(function(id){return id!==currentUser.uid;});Alert.alert('Debug',`Other user ID: ${otherUserId}`);var userRef=ref(database,`users/${otherUserId}`);var userSnapshot=yield get(userRef);if(userSnapshot.exists()){var otherUser=_objectSpread({uid:otherUserId},userSnapshot.val());Alert.alert('Debug',`Found other user: ${otherUser.email}`);var messagesRef=ref(database,`privateChats/${chatId}/messages`);if(unsubscribeMessages[chatId]){Alert.alert('Debug',`Removing old listener for chat: ${chatId}`);unsubscribeMessages[chatId]();}var addedUnsubscribe=onChildAdded(messagesRef,function(messageSnapshot){var message=messageSnapshot.val();Alert.alert('Debug',`New message received: ${JSON.stringify(message)}`);updateChatList(chatId,otherUser,message);});var changedUnsubscribe=onChildChanged(messagesRef,function(messageSnapshot){var message=messageSnapshot.val();Alert.alert('Debug',`Message changed: ${JSON.stringify(message)}`);updateChatList(chatId,otherUser,message);});unsubscribeMessages[chatId]=function(){addedUnsubscribe();changedUnsubscribe();};var messagesSnapshot=yield get(query(messagesRef,limitToLast(1)));if(messagesSnapshot.exists()){var messages=messagesSnapshot.val();var lastMessage=Object.values(messages)[0];Alert.alert('Debug',`Last message: ${JSON.stringify(lastMessage)}`);updateChatList(chatId,otherUser,lastMessage);}else{Alert.alert('Debug',`No messages found for chat: ${chatId}`);}}else{Alert.alert('Debug',`User not found: ${otherUserId}`);}}catch(error){Alert.alert('Error',`Error processing chat: ${error.message}`);}}};for(var chatId in chatsData){yield*_loop(chatId);}}catch(error){Alert.alert('Error',`Error in chat listener: ${error.message}`);}finally{setLoading(false);}});return function(_x){return _ref3.apply(this,arguments);};}());}catch(error){Alert.alert('Error',`Initial setup error: ${error.message}`);setLoading(false);}});return function loadChats(){return _ref2.apply(this,arguments);};}();var updateChatList=function updateChatList(chatId,otherUser,message){Alert.alert('Debug',`Updating chat list with: ${JSON.stringify({chatId:chatId,otherUser:otherUser,message:message})}`);setChats(function(prevChats){var newChats=prevChats.filter(function(chat){return chat.chatId!==chatId;});var updatedChat={chatId:chatId,otherUserId:otherUser.uid,otherUserEmail:otherUser.email,lastMessage:message.text,timestamp:message.timestamp,isCurrentUser:message.senderId===auth.currentUser.uid};Alert.alert('Debug',`Adding chat: ${JSON.stringify(updatedChat)}`);newChats.push(updatedChat);var sortedChats=newChats.sort(function(a,b){return b.timestamp-a.timestamp;});Alert.alert('Debug',`Sorted chats: ${JSON.stringify(sortedChats)}`);return sortedChats;});};loadChats();return function(){if(unsubscribeChats){unsubscribeChats();}Object.values(unsubscribeMessages).forEach(function(unsubscribe){return unsubscribe();});};},[]);var handleChatPress=function handleChatPress(chat){console.warn('Navigating to chat:',JSON.stringify(chat,null,2));navigation.navigate('Chat',{currentUserId:auth.currentUser.uid,otherUserId:chat.otherUserId,chatId:chat.chatId,otherUserEmail:chat.otherUserEmail});};var handleNewChat=function handleNewChat(){console.warn('Navigating to New Chat screen');navigation.navigate('New Chat');};var renderChatItem=function renderChatItem(_ref4){var item=_ref4.item;return _jsxs(TouchableOpacity,{style:styles.chatItem,onPress:function onPress(){return handleChatPress(item);},children:[_jsxs(View,{style:styles.chatInfo,children:[_jsx(Text,{style:styles.userEmail,children:item.otherUserEmail}),_jsxs(Text,{style:styles.lastMessage,numberOfLines:1,children:[item.isCurrentUser?'You: ':'',item.lastMessage]})]}),_jsx(Text,{style:styles.timestamp,children:new Date(item.timestamp).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})})]});};if(loading){return _jsxs(View,{style:styles.loadingContainer,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#007AFF\"}),_jsx(Text,{style:styles.loadingText,children:\"Loading chats...\"})]});}return _jsxs(SafeAreaView,{style:styles.container,children:[_jsxs(View,{style:styles.header,children:[_jsx(Text,{style:styles.headerTitle,children:\"Messages\"}),_jsx(TouchableOpacity,{style:styles.newChatButton,onPress:handleNewChat,children:_jsx(Text,{style:styles.newChatButtonText,children:\"New Chat\"})})]}),chats.length===0?_jsxs(View,{style:styles.emptyContainer,children:[_jsx(Text,{style:styles.emptyText,children:\"No messages yet\"}),_jsx(TouchableOpacity,{style:styles.startChatButton,onPress:handleNewChat,children:_jsx(Text,{style:styles.startChatButtonText,children:\"Start a New Chat\"})})]}):_jsx(FlatList,{data:chats,renderItem:renderChatItem,keyExtractor:function keyExtractor(item){return item.chatId;},contentContainerStyle:styles.listContainer})]});};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff'},loadingContainer:{flex:1,justifyContent:'center',alignItems:'center'},loadingText:{marginTop:10,fontSize:16,color:'#666'},header:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',padding:15,borderBottomWidth:1,borderBottomColor:'#ddd',backgroundColor:'#f8f8f8'},headerTitle:{fontSize:18,fontWeight:'bold',color:'#333'},newChatButton:{backgroundColor:'#007AFF',paddingHorizontal:12,paddingVertical:6,borderRadius:15},newChatButtonText:{color:'#fff',fontSize:14,fontWeight:'600'},listContainer:{padding:10},chatItem:{flexDirection:'row',padding:15,borderBottomWidth:1,borderBottomColor:'#eee',backgroundColor:'#fff',justifyContent:'space-between',alignItems:'center'},chatInfo:{flex:1,marginRight:10},userEmail:{fontSize:16,fontWeight:'bold',color:'#333',marginBottom:4},lastMessage:{fontSize:14,color:'#666'},timestamp:{fontSize:12,color:'#999'},emptyContainer:{flex:1,justifyContent:'center',alignItems:'center',padding:20},emptyText:{fontSize:16,color:'#666',marginBottom:20},startChatButton:{backgroundColor:'#007AFF',paddingHorizontal:20,paddingVertical:10,borderRadius:8},startChatButtonText:{color:'#fff',fontSize:16,fontWeight:'600'}});export default ChatListScreen;_NativeWindStyleSheet.create({styles:{\"container\":{\"width\":\"100%\"},\"container@0\":{\"maxWidth\":640},\"container@1\":{\"maxWidth\":768},\"container@2\":{\"maxWidth\":1024},\"container@3\":{\"maxWidth\":1280},\"container@4\":{\"maxWidth\":1536},\"flex\":{\"display\":\"flex\"}},atRules:{\"container\":[[[\"media\",\"(min-width: 640px)\"]],[[\"media\",\"(min-width: 768px)\"]],[[\"media\",\"(min-width: 1024px)\"]],[[\"media\",\"(min-width: 1280px)\"]],[[\"media\",\"(min-width: 1536px)\"]]]},topics:{\"container\":[\"width\"]}});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","FlatList","TouchableOpacity","SafeAreaView","ActivityIndicator","Alert","ref","get","query","orderByChild","limitToLast","onValue","off","onChildAdded","onChildChanged","database","auth","jsx","_jsx","jsxs","_jsxs","ChatListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","chats","setChats","_useState3","_useState4","loading","setLoading","unsubscribeChats","unsubscribeMessages","loadChats","_ref2","_asyncToGenerator","currentUser","alert","uid","chatsRef","_ref3","snapshot","exists","chatsData","val","Object","keys","join","_loop","chatId","includes","otherUserId","split","find","id","userRef","userSnapshot","otherUser","_objectSpread","email","messagesRef","addedUnsubscribe","messageSnapshot","message","JSON","stringify","updateChatList","changedUnsubscribe","messagesSnapshot","messages","lastMessage","values","error","_x","apply","arguments","prevChats","newChats","filter","chat","updatedChat","otherUserEmail","text","timestamp","isCurrentUser","senderId","push","sortedChats","sort","a","b","forEach","unsubscribe","handleChatPress","console","warn","navigate","currentUserId","handleNewChat","renderChatItem","_ref4","item","style","styles","chatItem","onPress","children","chatInfo","userEmail","numberOfLines","Date","toLocaleTimeString","hour","minute","loadingContainer","size","color","loadingText","container","header","headerTitle","newChatButton","newChatButtonText","length","emptyContainer","emptyText","startChatButton","startChatButtonText","data","renderItem","keyExtractor","contentContainerStyle","listContainer","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","flexDirection","padding","borderBottomWidth","borderBottomColor","fontWeight","paddingHorizontal","paddingVertical","borderRadius","marginRight","marginBottom","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/BLale/Desktop/Catty/screens/ChatListScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ActivityIndicator,\r\n  Alert\r\n} from 'react-native';\r\nimport { ref, get, query, orderByChild, limitToLast, onValue, off, onChildAdded, onChildChanged } from 'firebase/database';\r\nimport { database, auth } from '../config/firebase';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const [chats, setChats] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let unsubscribeChats = null;\r\n    let unsubscribeMessages = {};\r\n\r\n    const loadChats = async () => {\r\n      try {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n          Alert.alert('Debug', 'No authenticated user found');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        Alert.alert('Debug', `Current user: ${currentUser.uid}`);\r\n\r\n        // Realtime güncelleme için privateChats'i dinle\r\n        const chatsRef = ref(database, 'privateChats');\r\n        \r\n        unsubscribeChats = onValue(chatsRef, async (snapshot) => {\r\n          try {\r\n            if (!snapshot.exists()) {\r\n              Alert.alert('Debug', 'No chats found in database');\r\n              setChats([]);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n\r\n            const chatsData = snapshot.val();\r\n            Alert.alert('Debug', `Found chats: ${Object.keys(chatsData).join(', ')}`);\r\n            \r\n            // Her sohbeti kontrol et\r\n            for (const chatId in chatsData) {\r\n              if (chatId.includes(currentUser.uid)) {\r\n                Alert.alert('Debug', `Processing chat: ${chatId}`);\r\n                \r\n                try {\r\n                  // Diğer kullanıcının ID'sini bul\r\n                  const otherUserId = chatId.split('_').find(id => id !== currentUser.uid);\r\n                  Alert.alert('Debug', `Other user ID: ${otherUserId}`);\r\n                  \r\n                  // Diğer kullanıcının bilgilerini al\r\n                  const userRef = ref(database, `users/${otherUserId}`);\r\n                  const userSnapshot = await get(userRef);\r\n                  \r\n                  if (userSnapshot.exists()) {\r\n                    const otherUser = {\r\n                      uid: otherUserId,\r\n                      ...userSnapshot.val()\r\n                    };\r\n                    Alert.alert('Debug', `Found other user: ${otherUser.email}`);\r\n                    \r\n                    // Mesajları dinle\r\n                    const messagesRef = ref(database, `privateChats/${chatId}/messages`);\r\n                    \r\n                    // Eğer bu chat için zaten bir dinleyici varsa, onu kaldır\r\n                    if (unsubscribeMessages[chatId]) {\r\n                      Alert.alert('Debug', `Removing old listener for chat: ${chatId}`);\r\n                      unsubscribeMessages[chatId]();\r\n                    }\r\n\r\n                    // Yeni mesaj geldiğinde\r\n                    const addedUnsubscribe = onChildAdded(messagesRef, (messageSnapshot) => {\r\n                      const message = messageSnapshot.val();\r\n                      Alert.alert('Debug', `New message received: ${JSON.stringify(message)}`);\r\n                      updateChatList(chatId, otherUser, message);\r\n                    });\r\n\r\n                    // Mesaj değiştiğinde\r\n                    const changedUnsubscribe = onChildChanged(messagesRef, (messageSnapshot) => {\r\n                      const message = messageSnapshot.val();\r\n                      Alert.alert('Debug', `Message changed: ${JSON.stringify(message)}`);\r\n                      updateChatList(chatId, otherUser, message);\r\n                    });\r\n\r\n                    // Unsubscribe fonksiyonlarını sakla\r\n                    unsubscribeMessages[chatId] = () => {\r\n                      addedUnsubscribe();\r\n                      changedUnsubscribe();\r\n                    };\r\n\r\n                    // Mevcut son mesajı al\r\n                    const messagesSnapshot = await get(query(messagesRef, limitToLast(1)));\r\n                    if (messagesSnapshot.exists()) {\r\n                      const messages = messagesSnapshot.val();\r\n                      const lastMessage = Object.values(messages)[0];\r\n                      Alert.alert('Debug', `Last message: ${JSON.stringify(lastMessage)}`);\r\n                      updateChatList(chatId, otherUser, lastMessage);\r\n                    } else {\r\n                      Alert.alert('Debug', `No messages found for chat: ${chatId}`);\r\n                    }\r\n                  } else {\r\n                    Alert.alert('Debug', `User not found: ${otherUserId}`);\r\n                  }\r\n                } catch (error) {\r\n                  Alert.alert('Error', `Error processing chat: ${error.message}`);\r\n                }\r\n              }\r\n            }\r\n          } catch (error) {\r\n            Alert.alert('Error', `Error in chat listener: ${error.message}`);\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n        });\r\n\r\n      } catch (error) {\r\n        Alert.alert('Error', `Initial setup error: ${error.message}`);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const updateChatList = (chatId, otherUser, message) => {\r\n      Alert.alert('Debug', `Updating chat list with: ${JSON.stringify({ chatId, otherUser, message })}`);\r\n      setChats(prevChats => {\r\n        const newChats = prevChats.filter(chat => chat.chatId !== chatId);\r\n        const updatedChat = {\r\n          chatId,\r\n          otherUserId: otherUser.uid,\r\n          otherUserEmail: otherUser.email,\r\n          lastMessage: message.text,\r\n          timestamp: message.timestamp,\r\n          isCurrentUser: message.senderId === auth.currentUser.uid\r\n        };\r\n        Alert.alert('Debug', `Adding chat: ${JSON.stringify(updatedChat)}`);\r\n        newChats.push(updatedChat);\r\n        \r\n        // Sohbetleri son mesaj zamanına göre sırala\r\n        const sortedChats = newChats.sort((a, b) => b.timestamp - a.timestamp);\r\n        Alert.alert('Debug', `Sorted chats: ${JSON.stringify(sortedChats)}`);\r\n        return sortedChats;\r\n      });\r\n    };\r\n\r\n    loadChats();\r\n\r\n    return () => {\r\n      if (unsubscribeChats) {\r\n        unsubscribeChats();\r\n      }\r\n      // Tüm mesaj dinleyicilerini temizle\r\n      Object.values(unsubscribeMessages).forEach(unsubscribe => unsubscribe());\r\n    };\r\n  }, []);\r\n\r\n  const handleChatPress = (chat) => {\r\n    console.warn('Navigating to chat:', JSON.stringify(chat, null, 2));\r\n    navigation.navigate('Chat', {\r\n      currentUserId: auth.currentUser.uid,\r\n      otherUserId: chat.otherUserId,\r\n      chatId: chat.chatId,\r\n      otherUserEmail: chat.otherUserEmail\r\n    });\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    console.warn('Navigating to New Chat screen');\r\n    navigation.navigate('New Chat');\r\n  };\r\n\r\n  const renderChatItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.chatItem}\r\n      onPress={() => handleChatPress(item)}\r\n    >\r\n      <View style={styles.chatInfo}>\r\n        <Text style={styles.userEmail}>{item.otherUserEmail}</Text>\r\n        <Text style={styles.lastMessage} numberOfLines={1}>\r\n          {item.isCurrentUser ? 'You: ' : ''}{item.lastMessage}\r\n        </Text>\r\n      </View>\r\n      <Text style={styles.timestamp}>\r\n        {new Date(item.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\r\n        <Text style={styles.loadingText}>Loading chats...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Messages</Text>\r\n        <TouchableOpacity style={styles.newChatButton} onPress={handleNewChat}>\r\n          <Text style={styles.newChatButtonText}>New Chat</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {chats.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>No messages yet</Text>\r\n          <TouchableOpacity \r\n            style={styles.startChatButton}\r\n            onPress={handleNewChat}\r\n          >\r\n            <Text style={styles.startChatButtonText}>Start a New Chat</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={chats}\r\n          renderItem={renderChatItem}\r\n          keyExtractor={(item) => item.chatId}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ddd',\r\n    backgroundColor: '#f8f8f8',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  newChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 15,\r\n  },\r\n  newChatButtonText: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n  listContainer: {\r\n    padding: 10,\r\n  },\r\n  chatItem: {\r\n    flexDirection: 'row',\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n    backgroundColor: '#fff',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  chatInfo: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  userEmail: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 4,\r\n  },\r\n  lastMessage: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    color: '#999',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    marginBottom: 20,\r\n  },\r\n  startChatButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n  },\r\n  startChatButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default ChatListScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}